

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jul  7 17:22:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	intentry,global,class=CODE,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2
    90                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	text79,local,class=CODE,merge=1,delta=2
    94                           	psect	text80,local,class=CODE,merge=1,delta=2
    95                           	psect	text81,local,class=CODE,merge=1,delta=2
    96                           	psect	text82,local,class=CODE,merge=1,delta=2
    97                           	psect	text83,local,class=CODE,merge=1,delta=2
    98                           	psect	text84,local,class=CODE,merge=1,delta=2
    99                           	psect	text85,local,class=CODE,merge=1,delta=2
   100                           	psect	text86,local,class=CODE,merge=1,delta=2
   101                           	psect	text87,local,class=CODE,merge=1,delta=2
   102                           	psect	text88,local,class=CODE,merge=1,delta=2
   103                           	psect	text89,local,class=CODE,merge=1,delta=2
   104                           	psect	text90,local,class=CODE,merge=1,delta=2
   105                           	psect	text91,local,class=CODE,merge=1,delta=2
   106                           	psect	text92,local,class=CODE,merge=1,delta=2
   107                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text100,local,class=CODE,merge=1,delta=2
   115                           	psect	text101,local,class=CODE,merge=1,delta=2
   116                           	psect	text102,local,class=CODE,merge=1,delta=2
   117                           	psect	text103,local,class=CODE,merge=1,delta=2
   118                           	psect	text104,local,class=CODE,merge=1,delta=2
   119                           	psect	text105,local,class=CODE,merge=1,delta=2
   120                           	psect	text106,local,class=CODE,merge=1,delta=2
   121                           	psect	text107,local,class=CODE,merge=1,delta=2
   122                           	psect	text108,local,class=CODE,merge=1,delta=2
   123                           	psect	text109,local,class=CODE,merge=1,delta=2
   124                           	psect	text110,local,class=CODE,merge=1,delta=2
   125                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text114,local,class=CODE,merge=1,delta=2
   129                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   130                           	psect	text116,local,class=CODE,merge=1,delta=2
   131                           	psect	text117,local,class=CODE,merge=1,delta=2
   132                           	psect	text118,local,class=CODE,merge=1,delta=2
   133                           	psect	text119,local,class=CODE,merge=1,delta=2
   134                           	psect	text120,local,class=CODE,merge=1,delta=2
   135                           	psect	text121,local,class=CODE,merge=1,delta=2
   136                           	psect	text122,local,class=CODE,merge=1,delta=2
   137                           	psect	text123,local,class=CODE,merge=1,delta=2
   138                           	dabs	1,0x7E,2
   139  0000                     
   140                           ; Version 2.10
   141                           ; Generated 31/07/2019 GMT
   142                           ; 
   143                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   144                           ; All rights reserved.
   145                           ; 
   146                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   147                           ; 
   148                           ; Redistribution and use in source and binary forms, with or without modification, are
   149                           ; permitted provided that the following conditions are met:
   150                           ; 
   151                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   152                           ;        conditions and the following disclaimer.
   153                           ; 
   154                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   155                           ;        of conditions and the following disclaimer in the documentation and/or other
   156                           ;        materials provided with the distribution.
   157                           ; 
   158                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   159                           ;        software without specific prior written permission.
   160                           ; 
   161                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   162                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   163                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   164                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   165                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   166                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   167                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   168                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   169                           ; 
   170                           ; 
   171                           ; Code-generator required, PIC16F1939 Definitions
   172                           ; 
   173                           ; SFR Addresses
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0110                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0113                     	;# 
   232  0114                     	;# 
   233  0115                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0118                     	;# 
   237  0119                     	;# 
   238  011A                     	;# 
   239  011B                     	;# 
   240  011D                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  018F                     	;# 
   244  0190                     	;# 
   245  0191                     	;# 
   246  0191                     	;# 
   247  0192                     	;# 
   248  0193                     	;# 
   249  0193                     	;# 
   250  0193                     	;# 
   251  0194                     	;# 
   252  0195                     	;# 
   253  0196                     	;# 
   254  0199                     	;# 
   255  019A                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  019C                     	;# 
   262  019D                     	;# 
   263  019E                     	;# 
   264  019F                     	;# 
   265  020D                     	;# 
   266  0210                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0291                     	;# 
   276  0291                     	;# 
   277  0292                     	;# 
   278  0293                     	;# 
   279  0294                     	;# 
   280  0295                     	;# 
   281  0295                     	;# 
   282  0296                     	;# 
   283  0298                     	;# 
   284  0298                     	;# 
   285  0299                     	;# 
   286  029A                     	;# 
   287  029B                     	;# 
   288  029C                     	;# 
   289  029C                     	;# 
   290  029D                     	;# 
   291  029E                     	;# 
   292  029F                     	;# 
   293  0311                     	;# 
   294  0311                     	;# 
   295  0312                     	;# 
   296  0313                     	;# 
   297  0314                     	;# 
   298  0315                     	;# 
   299  0315                     	;# 
   300  0316                     	;# 
   301  0318                     	;# 
   302  0318                     	;# 
   303  0319                     	;# 
   304  031A                     	;# 
   305  031C                     	;# 
   306  031C                     	;# 
   307  031D                     	;# 
   308  031E                     	;# 
   309  0394                     	;# 
   310  0395                     	;# 
   311  0396                     	;# 
   312  0415                     	;# 
   313  0416                     	;# 
   314  0417                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  0791                     	;# 
   319  0792                     	;# 
   320  0793                     	;# 
   321  0794                     	;# 
   322  0795                     	;# 
   323  0798                     	;# 
   324  0799                     	;# 
   325  079A                     	;# 
   326  07A0                     	;# 
   327  07A1                     	;# 
   328  07A2                     	;# 
   329  07A3                     	;# 
   330  07A4                     	;# 
   331  07A5                     	;# 
   332  07A6                     	;# 
   333  07A7                     	;# 
   334  07A8                     	;# 
   335  07A9                     	;# 
   336  07AA                     	;# 
   337  07AB                     	;# 
   338  0FE4                     	;# 
   339  0FE5                     	;# 
   340  0FE6                     	;# 
   341  0FE7                     	;# 
   342  0FE8                     	;# 
   343  0FE9                     	;# 
   344  0FEA                     	;# 
   345  0FEB                     	;# 
   346  0FED                     	;# 
   347  0FEE                     	;# 
   348  0FEF                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0008                     	;# 
   358  0009                     	;# 
   359  000A                     	;# 
   360  000B                     	;# 
   361  000C                     	;# 
   362  000D                     	;# 
   363  000E                     	;# 
   364  000F                     	;# 
   365  0010                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0016                     	;# 
   372  0017                     	;# 
   373  0018                     	;# 
   374  0019                     	;# 
   375  001A                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010D                     	;# 
   401  010E                     	;# 
   402  010F                     	;# 
   403  0110                     	;# 
   404  0111                     	;# 
   405  0112                     	;# 
   406  0113                     	;# 
   407  0114                     	;# 
   408  0115                     	;# 
   409  0116                     	;# 
   410  0117                     	;# 
   411  0118                     	;# 
   412  0119                     	;# 
   413  011A                     	;# 
   414  011B                     	;# 
   415  011D                     	;# 
   416  018C                     	;# 
   417  018D                     	;# 
   418  018F                     	;# 
   419  0190                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0194                     	;# 
   427  0195                     	;# 
   428  0196                     	;# 
   429  0199                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019C                     	;# 
   436  019C                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  020D                     	;# 
   441  0210                     	;# 
   442  0211                     	;# 
   443  0212                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0215                     	;# 
   447  0215                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029C                     	;# 
   465  029D                     	;# 
   466  029E                     	;# 
   467  029F                     	;# 
   468  0311                     	;# 
   469  0311                     	;# 
   470  0312                     	;# 
   471  0313                     	;# 
   472  0314                     	;# 
   473  0315                     	;# 
   474  0315                     	;# 
   475  0316                     	;# 
   476  0318                     	;# 
   477  0318                     	;# 
   478  0319                     	;# 
   479  031A                     	;# 
   480  031C                     	;# 
   481  031C                     	;# 
   482  031D                     	;# 
   483  031E                     	;# 
   484  0394                     	;# 
   485  0395                     	;# 
   486  0396                     	;# 
   487  0415                     	;# 
   488  0416                     	;# 
   489  0417                     	;# 
   490  041C                     	;# 
   491  041D                     	;# 
   492  041E                     	;# 
   493  0791                     	;# 
   494  0792                     	;# 
   495  0793                     	;# 
   496  0794                     	;# 
   497  0795                     	;# 
   498  0798                     	;# 
   499  0799                     	;# 
   500  079A                     	;# 
   501  07A0                     	;# 
   502  07A1                     	;# 
   503  07A2                     	;# 
   504  07A3                     	;# 
   505  07A4                     	;# 
   506  07A5                     	;# 
   507  07A6                     	;# 
   508  07A7                     	;# 
   509  07A8                     	;# 
   510  07A9                     	;# 
   511  07AA                     	;# 
   512  07AB                     	;# 
   513  0FE4                     	;# 
   514  0FE5                     	;# 
   515  0FE6                     	;# 
   516  0FE7                     	;# 
   517  0FE8                     	;# 
   518  0FE9                     	;# 
   519  0FEA                     	;# 
   520  0FEB                     	;# 
   521  0FED                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0016                     	;# 
   547  0017                     	;# 
   548  0018                     	;# 
   549  0019                     	;# 
   550  001A                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  001E                     	;# 
   554  001F                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  008F                     	;# 
   559  0090                     	;# 
   560  0091                     	;# 
   561  0092                     	;# 
   562  0093                     	;# 
   563  0095                     	;# 
   564  0096                     	;# 
   565  0097                     	;# 
   566  0098                     	;# 
   567  0099                     	;# 
   568  009A                     	;# 
   569  009B                     	;# 
   570  009B                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  010C                     	;# 
   575  010D                     	;# 
   576  010E                     	;# 
   577  010F                     	;# 
   578  0110                     	;# 
   579  0111                     	;# 
   580  0112                     	;# 
   581  0113                     	;# 
   582  0114                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011A                     	;# 
   589  011B                     	;# 
   590  011D                     	;# 
   591  018C                     	;# 
   592  018D                     	;# 
   593  018F                     	;# 
   594  0190                     	;# 
   595  0191                     	;# 
   596  0191                     	;# 
   597  0192                     	;# 
   598  0193                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0199                     	;# 
   605  019A                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019E                     	;# 
   614  019F                     	;# 
   615  020D                     	;# 
   616  0210                     	;# 
   617  0211                     	;# 
   618  0212                     	;# 
   619  0213                     	;# 
   620  0214                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0294                     	;# 
   630  0295                     	;# 
   631  0295                     	;# 
   632  0296                     	;# 
   633  0298                     	;# 
   634  0298                     	;# 
   635  0299                     	;# 
   636  029A                     	;# 
   637  029B                     	;# 
   638  029C                     	;# 
   639  029C                     	;# 
   640  029D                     	;# 
   641  029E                     	;# 
   642  029F                     	;# 
   643  0311                     	;# 
   644  0311                     	;# 
   645  0312                     	;# 
   646  0313                     	;# 
   647  0314                     	;# 
   648  0315                     	;# 
   649  0315                     	;# 
   650  0316                     	;# 
   651  0318                     	;# 
   652  0318                     	;# 
   653  0319                     	;# 
   654  031A                     	;# 
   655  031C                     	;# 
   656  031C                     	;# 
   657  031D                     	;# 
   658  031E                     	;# 
   659  0394                     	;# 
   660  0395                     	;# 
   661  0396                     	;# 
   662  0415                     	;# 
   663  0416                     	;# 
   664  0417                     	;# 
   665  041C                     	;# 
   666  041D                     	;# 
   667  041E                     	;# 
   668  0791                     	;# 
   669  0792                     	;# 
   670  0793                     	;# 
   671  0794                     	;# 
   672  0795                     	;# 
   673  0798                     	;# 
   674  0799                     	;# 
   675  079A                     	;# 
   676  07A0                     	;# 
   677  07A1                     	;# 
   678  07A2                     	;# 
   679  07A3                     	;# 
   680  07A4                     	;# 
   681  07A5                     	;# 
   682  07A6                     	;# 
   683  07A7                     	;# 
   684  07A8                     	;# 
   685  07A9                     	;# 
   686  07AA                     	;# 
   687  07AB                     	;# 
   688  0FE4                     	;# 
   689  0FE5                     	;# 
   690  0FE6                     	;# 
   691  0FE7                     	;# 
   692  0FE8                     	;# 
   693  0FE9                     	;# 
   694  0FEA                     	;# 
   695  0FEB                     	;# 
   696  0FED                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0008                     	;# 
   708  0009                     	;# 
   709  000A                     	;# 
   710  000B                     	;# 
   711  000C                     	;# 
   712  000D                     	;# 
   713  000E                     	;# 
   714  000F                     	;# 
   715  0010                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0016                     	;# 
   722  0017                     	;# 
   723  0018                     	;# 
   724  0019                     	;# 
   725  001A                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001E                     	;# 
   729  001F                     	;# 
   730  008C                     	;# 
   731  008D                     	;# 
   732  008E                     	;# 
   733  008F                     	;# 
   734  0090                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0093                     	;# 
   738  0095                     	;# 
   739  0096                     	;# 
   740  0097                     	;# 
   741  0098                     	;# 
   742  0099                     	;# 
   743  009A                     	;# 
   744  009B                     	;# 
   745  009B                     	;# 
   746  009C                     	;# 
   747  009D                     	;# 
   748  009E                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010E                     	;# 
   752  010F                     	;# 
   753  0110                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011D                     	;# 
   766  018C                     	;# 
   767  018D                     	;# 
   768  018F                     	;# 
   769  0190                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020D                     	;# 
   791  0210                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0214                     	;# 
   796  0215                     	;# 
   797  0215                     	;# 
   798  0216                     	;# 
   799  0217                     	;# 
   800  0291                     	;# 
   801  0291                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0294                     	;# 
   805  0295                     	;# 
   806  0295                     	;# 
   807  0296                     	;# 
   808  0298                     	;# 
   809  0298                     	;# 
   810  0299                     	;# 
   811  029A                     	;# 
   812  029B                     	;# 
   813  029C                     	;# 
   814  029C                     	;# 
   815  029D                     	;# 
   816  029E                     	;# 
   817  029F                     	;# 
   818  0311                     	;# 
   819  0311                     	;# 
   820  0312                     	;# 
   821  0313                     	;# 
   822  0314                     	;# 
   823  0315                     	;# 
   824  0315                     	;# 
   825  0316                     	;# 
   826  0318                     	;# 
   827  0318                     	;# 
   828  0319                     	;# 
   829  031A                     	;# 
   830  031C                     	;# 
   831  031C                     	;# 
   832  031D                     	;# 
   833  031E                     	;# 
   834  0394                     	;# 
   835  0395                     	;# 
   836  0396                     	;# 
   837  0415                     	;# 
   838  0416                     	;# 
   839  0417                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  0791                     	;# 
   844  0792                     	;# 
   845  0793                     	;# 
   846  0794                     	;# 
   847  0795                     	;# 
   848  0798                     	;# 
   849  0799                     	;# 
   850  079A                     	;# 
   851  07A0                     	;# 
   852  07A1                     	;# 
   853  07A2                     	;# 
   854  07A3                     	;# 
   855  07A4                     	;# 
   856  07A5                     	;# 
   857  07A6                     	;# 
   858  07A7                     	;# 
   859  07A8                     	;# 
   860  07A9                     	;# 
   861  07AA                     	;# 
   862  07AB                     	;# 
   863  0FE4                     	;# 
   864  0FE5                     	;# 
   865  0FE6                     	;# 
   866  0FE7                     	;# 
   867  0FE8                     	;# 
   868  0FE9                     	;# 
   869  0FEA                     	;# 
   870  0FEB                     	;# 
   871  0FED                     	;# 
   872  0FEE                     	;# 
   873  0FEF                     	;# 
   874  0000                     	;# 
   875  0001                     	;# 
   876  0002                     	;# 
   877  0003                     	;# 
   878  0004                     	;# 
   879  0005                     	;# 
   880  0006                     	;# 
   881  0007                     	;# 
   882  0008                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000F                     	;# 
   890  0010                     	;# 
   891  0011                     	;# 
   892  0012                     	;# 
   893  0013                     	;# 
   894  0015                     	;# 
   895  0016                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001C                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  008C                     	;# 
   906  008D                     	;# 
   907  008E                     	;# 
   908  008F                     	;# 
   909  0090                     	;# 
   910  0091                     	;# 
   911  0092                     	;# 
   912  0093                     	;# 
   913  0095                     	;# 
   914  0096                     	;# 
   915  0097                     	;# 
   916  0098                     	;# 
   917  0099                     	;# 
   918  009A                     	;# 
   919  009B                     	;# 
   920  009B                     	;# 
   921  009C                     	;# 
   922  009D                     	;# 
   923  009E                     	;# 
   924  010C                     	;# 
   925  010D                     	;# 
   926  010E                     	;# 
   927  010F                     	;# 
   928  0110                     	;# 
   929  0111                     	;# 
   930  0112                     	;# 
   931  0113                     	;# 
   932  0114                     	;# 
   933  0115                     	;# 
   934  0116                     	;# 
   935  0117                     	;# 
   936  0118                     	;# 
   937  0119                     	;# 
   938  011A                     	;# 
   939  011B                     	;# 
   940  011D                     	;# 
   941  018C                     	;# 
   942  018D                     	;# 
   943  018F                     	;# 
   944  0190                     	;# 
   945  0191                     	;# 
   946  0191                     	;# 
   947  0192                     	;# 
   948  0193                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0194                     	;# 
   952  0195                     	;# 
   953  0196                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019C                     	;# 
   961  019C                     	;# 
   962  019D                     	;# 
   963  019E                     	;# 
   964  019F                     	;# 
   965  020D                     	;# 
   966  0210                     	;# 
   967  0211                     	;# 
   968  0212                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0217                     	;# 
   975  0291                     	;# 
   976  0291                     	;# 
   977  0292                     	;# 
   978  0293                     	;# 
   979  0294                     	;# 
   980  0295                     	;# 
   981  0295                     	;# 
   982  0296                     	;# 
   983  0298                     	;# 
   984  0298                     	;# 
   985  0299                     	;# 
   986  029A                     	;# 
   987  029B                     	;# 
   988  029C                     	;# 
   989  029C                     	;# 
   990  029D                     	;# 
   991  029E                     	;# 
   992  029F                     	;# 
   993  0311                     	;# 
   994  0311                     	;# 
   995  0312                     	;# 
   996  0313                     	;# 
   997  0314                     	;# 
   998  0315                     	;# 
   999  0315                     	;# 
  1000  0316                     	;# 
  1001  0318                     	;# 
  1002  0318                     	;# 
  1003  0319                     	;# 
  1004  031A                     	;# 
  1005  031C                     	;# 
  1006  031C                     	;# 
  1007  031D                     	;# 
  1008  031E                     	;# 
  1009  0394                     	;# 
  1010  0395                     	;# 
  1011  0396                     	;# 
  1012  0415                     	;# 
  1013  0416                     	;# 
  1014  0417                     	;# 
  1015  041C                     	;# 
  1016  041D                     	;# 
  1017  041E                     	;# 
  1018  0791                     	;# 
  1019  0792                     	;# 
  1020  0793                     	;# 
  1021  0794                     	;# 
  1022  0795                     	;# 
  1023  0798                     	;# 
  1024  0799                     	;# 
  1025  079A                     	;# 
  1026  07A0                     	;# 
  1027  07A1                     	;# 
  1028  07A2                     	;# 
  1029  07A3                     	;# 
  1030  07A4                     	;# 
  1031  07A5                     	;# 
  1032  07A6                     	;# 
  1033  07A7                     	;# 
  1034  07A8                     	;# 
  1035  07A9                     	;# 
  1036  07AA                     	;# 
  1037  07AB                     	;# 
  1038  0FE4                     	;# 
  1039  0FE5                     	;# 
  1040  0FE6                     	;# 
  1041  0FE7                     	;# 
  1042  0FE8                     	;# 
  1043  0FE9                     	;# 
  1044  0FEA                     	;# 
  1045  0FEB                     	;# 
  1046  0FED                     	;# 
  1047  0FEE                     	;# 
  1048  0FEF                     	;# 
  1049  0000                     	;# 
  1050  0001                     	;# 
  1051  0002                     	;# 
  1052  0003                     	;# 
  1053  0004                     	;# 
  1054  0005                     	;# 
  1055  0006                     	;# 
  1056  0007                     	;# 
  1057  0008                     	;# 
  1058  0009                     	;# 
  1059  000A                     	;# 
  1060  000B                     	;# 
  1061  000C                     	;# 
  1062  000D                     	;# 
  1063  000E                     	;# 
  1064  000F                     	;# 
  1065  0010                     	;# 
  1066  0011                     	;# 
  1067  0012                     	;# 
  1068  0013                     	;# 
  1069  0015                     	;# 
  1070  0016                     	;# 
  1071  0016                     	;# 
  1072  0017                     	;# 
  1073  0018                     	;# 
  1074  0019                     	;# 
  1075  001A                     	;# 
  1076  001B                     	;# 
  1077  001C                     	;# 
  1078  001E                     	;# 
  1079  001F                     	;# 
  1080  008C                     	;# 
  1081  008D                     	;# 
  1082  008E                     	;# 
  1083  008F                     	;# 
  1084  0090                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0093                     	;# 
  1088  0095                     	;# 
  1089  0096                     	;# 
  1090  0097                     	;# 
  1091  0098                     	;# 
  1092  0099                     	;# 
  1093  009A                     	;# 
  1094  009B                     	;# 
  1095  009B                     	;# 
  1096  009C                     	;# 
  1097  009D                     	;# 
  1098  009E                     	;# 
  1099  010C                     	;# 
  1100  010D                     	;# 
  1101  010E                     	;# 
  1102  010F                     	;# 
  1103  0110                     	;# 
  1104  0111                     	;# 
  1105  0112                     	;# 
  1106  0113                     	;# 
  1107  0114                     	;# 
  1108  0115                     	;# 
  1109  0116                     	;# 
  1110  0117                     	;# 
  1111  0118                     	;# 
  1112  0119                     	;# 
  1113  011A                     	;# 
  1114  011B                     	;# 
  1115  011D                     	;# 
  1116  018C                     	;# 
  1117  018D                     	;# 
  1118  018F                     	;# 
  1119  0190                     	;# 
  1120  0191                     	;# 
  1121  0191                     	;# 
  1122  0192                     	;# 
  1123  0193                     	;# 
  1124  0193                     	;# 
  1125  0193                     	;# 
  1126  0194                     	;# 
  1127  0195                     	;# 
  1128  0196                     	;# 
  1129  0199                     	;# 
  1130  019A                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019C                     	;# 
  1136  019C                     	;# 
  1137  019D                     	;# 
  1138  019E                     	;# 
  1139  019F                     	;# 
  1140  020D                     	;# 
  1141  0210                     	;# 
  1142  0211                     	;# 
  1143  0212                     	;# 
  1144  0213                     	;# 
  1145  0214                     	;# 
  1146  0215                     	;# 
  1147  0215                     	;# 
  1148  0216                     	;# 
  1149  0217                     	;# 
  1150  0291                     	;# 
  1151  0291                     	;# 
  1152  0292                     	;# 
  1153  0293                     	;# 
  1154  0294                     	;# 
  1155  0295                     	;# 
  1156  0295                     	;# 
  1157  0296                     	;# 
  1158  0298                     	;# 
  1159  0298                     	;# 
  1160  0299                     	;# 
  1161  029A                     	;# 
  1162  029B                     	;# 
  1163  029C                     	;# 
  1164  029C                     	;# 
  1165  029D                     	;# 
  1166  029E                     	;# 
  1167  029F                     	;# 
  1168  0311                     	;# 
  1169  0311                     	;# 
  1170  0312                     	;# 
  1171  0313                     	;# 
  1172  0314                     	;# 
  1173  0315                     	;# 
  1174  0315                     	;# 
  1175  0316                     	;# 
  1176  0318                     	;# 
  1177  0318                     	;# 
  1178  0319                     	;# 
  1179  031A                     	;# 
  1180  031C                     	;# 
  1181  031C                     	;# 
  1182  031D                     	;# 
  1183  031E                     	;# 
  1184  0394                     	;# 
  1185  0395                     	;# 
  1186  0396                     	;# 
  1187  0415                     	;# 
  1188  0416                     	;# 
  1189  0417                     	;# 
  1190  041C                     	;# 
  1191  041D                     	;# 
  1192  041E                     	;# 
  1193  0791                     	;# 
  1194  0792                     	;# 
  1195  0793                     	;# 
  1196  0794                     	;# 
  1197  0795                     	;# 
  1198  0798                     	;# 
  1199  0799                     	;# 
  1200  079A                     	;# 
  1201  07A0                     	;# 
  1202  07A1                     	;# 
  1203  07A2                     	;# 
  1204  07A3                     	;# 
  1205  07A4                     	;# 
  1206  07A5                     	;# 
  1207  07A6                     	;# 
  1208  07A7                     	;# 
  1209  07A8                     	;# 
  1210  07A9                     	;# 
  1211  07AA                     	;# 
  1212  07AB                     	;# 
  1213  0FE4                     	;# 
  1214  0FE5                     	;# 
  1215  0FE6                     	;# 
  1216  0FE7                     	;# 
  1217  0FE8                     	;# 
  1218  0FE9                     	;# 
  1219  0FEA                     	;# 
  1220  0FEB                     	;# 
  1221  0FED                     	;# 
  1222  0FEE                     	;# 
  1223  0FEF                     	;# 
  1224  0000                     	;# 
  1225  0001                     	;# 
  1226  0002                     	;# 
  1227  0003                     	;# 
  1228  0004                     	;# 
  1229  0005                     	;# 
  1230  0006                     	;# 
  1231  0007                     	;# 
  1232  0008                     	;# 
  1233  0009                     	;# 
  1234  000A                     	;# 
  1235  000B                     	;# 
  1236  000C                     	;# 
  1237  000D                     	;# 
  1238  000E                     	;# 
  1239  000F                     	;# 
  1240  0010                     	;# 
  1241  0011                     	;# 
  1242  0012                     	;# 
  1243  0013                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001B                     	;# 
  1252  001C                     	;# 
  1253  001E                     	;# 
  1254  001F                     	;# 
  1255  008C                     	;# 
  1256  008D                     	;# 
  1257  008E                     	;# 
  1258  008F                     	;# 
  1259  0090                     	;# 
  1260  0091                     	;# 
  1261  0092                     	;# 
  1262  0093                     	;# 
  1263  0095                     	;# 
  1264  0096                     	;# 
  1265  0097                     	;# 
  1266  0098                     	;# 
  1267  0099                     	;# 
  1268  009A                     	;# 
  1269  009B                     	;# 
  1270  009B                     	;# 
  1271  009C                     	;# 
  1272  009D                     	;# 
  1273  009E                     	;# 
  1274  010C                     	;# 
  1275  010D                     	;# 
  1276  010E                     	;# 
  1277  010F                     	;# 
  1278  0110                     	;# 
  1279  0111                     	;# 
  1280  0112                     	;# 
  1281  0113                     	;# 
  1282  0114                     	;# 
  1283  0115                     	;# 
  1284  0116                     	;# 
  1285  0117                     	;# 
  1286  0118                     	;# 
  1287  0119                     	;# 
  1288  011A                     	;# 
  1289  011B                     	;# 
  1290  011D                     	;# 
  1291  018C                     	;# 
  1292  018D                     	;# 
  1293  018F                     	;# 
  1294  0190                     	;# 
  1295  0191                     	;# 
  1296  0191                     	;# 
  1297  0192                     	;# 
  1298  0193                     	;# 
  1299  0193                     	;# 
  1300  0193                     	;# 
  1301  0194                     	;# 
  1302  0195                     	;# 
  1303  0196                     	;# 
  1304  0199                     	;# 
  1305  019A                     	;# 
  1306  019B                     	;# 
  1307  019B                     	;# 
  1308  019B                     	;# 
  1309  019B                     	;# 
  1310  019C                     	;# 
  1311  019C                     	;# 
  1312  019D                     	;# 
  1313  019E                     	;# 
  1314  019F                     	;# 
  1315  020D                     	;# 
  1316  0210                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0213                     	;# 
  1320  0214                     	;# 
  1321  0215                     	;# 
  1322  0215                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0291                     	;# 
  1326  0291                     	;# 
  1327  0292                     	;# 
  1328  0293                     	;# 
  1329  0294                     	;# 
  1330  0295                     	;# 
  1331  0295                     	;# 
  1332  0296                     	;# 
  1333  0298                     	;# 
  1334  0298                     	;# 
  1335  0299                     	;# 
  1336  029A                     	;# 
  1337  029B                     	;# 
  1338  029C                     	;# 
  1339  029C                     	;# 
  1340  029D                     	;# 
  1341  029E                     	;# 
  1342  029F                     	;# 
  1343  0311                     	;# 
  1344  0311                     	;# 
  1345  0312                     	;# 
  1346  0313                     	;# 
  1347  0314                     	;# 
  1348  0315                     	;# 
  1349  0315                     	;# 
  1350  0316                     	;# 
  1351  0318                     	;# 
  1352  0318                     	;# 
  1353  0319                     	;# 
  1354  031A                     	;# 
  1355  031C                     	;# 
  1356  031C                     	;# 
  1357  031D                     	;# 
  1358  031E                     	;# 
  1359  0394                     	;# 
  1360  0395                     	;# 
  1361  0396                     	;# 
  1362  0415                     	;# 
  1363  0416                     	;# 
  1364  0417                     	;# 
  1365  041C                     	;# 
  1366  041D                     	;# 
  1367  041E                     	;# 
  1368  0791                     	;# 
  1369  0792                     	;# 
  1370  0793                     	;# 
  1371  0794                     	;# 
  1372  0795                     	;# 
  1373  0798                     	;# 
  1374  0799                     	;# 
  1375  079A                     	;# 
  1376  07A0                     	;# 
  1377  07A1                     	;# 
  1378  07A2                     	;# 
  1379  07A3                     	;# 
  1380  07A4                     	;# 
  1381  07A5                     	;# 
  1382  07A6                     	;# 
  1383  07A7                     	;# 
  1384  07A8                     	;# 
  1385  07A9                     	;# 
  1386  07AA                     	;# 
  1387  07AB                     	;# 
  1388  0FE4                     	;# 
  1389  0FE5                     	;# 
  1390  0FE6                     	;# 
  1391  0FE7                     	;# 
  1392  0FE8                     	;# 
  1393  0FE9                     	;# 
  1394  0FEA                     	;# 
  1395  0FEB                     	;# 
  1396  0FED                     	;# 
  1397  0FEE                     	;# 
  1398  0FEF                     	;# 
  1399  0000                     	;# 
  1400  0001                     	;# 
  1401  0002                     	;# 
  1402  0003                     	;# 
  1403  0004                     	;# 
  1404  0005                     	;# 
  1405  0006                     	;# 
  1406  0007                     	;# 
  1407  0008                     	;# 
  1408  0009                     	;# 
  1409  000A                     	;# 
  1410  000B                     	;# 
  1411  000C                     	;# 
  1412  000D                     	;# 
  1413  000E                     	;# 
  1414  000F                     	;# 
  1415  0010                     	;# 
  1416  0011                     	;# 
  1417  0012                     	;# 
  1418  0013                     	;# 
  1419  0015                     	;# 
  1420  0016                     	;# 
  1421  0016                     	;# 
  1422  0017                     	;# 
  1423  0018                     	;# 
  1424  0019                     	;# 
  1425  001A                     	;# 
  1426  001B                     	;# 
  1427  001C                     	;# 
  1428  001E                     	;# 
  1429  001F                     	;# 
  1430  008C                     	;# 
  1431  008D                     	;# 
  1432  008E                     	;# 
  1433  008F                     	;# 
  1434  0090                     	;# 
  1435  0091                     	;# 
  1436  0092                     	;# 
  1437  0093                     	;# 
  1438  0095                     	;# 
  1439  0096                     	;# 
  1440  0097                     	;# 
  1441  0098                     	;# 
  1442  0099                     	;# 
  1443  009A                     	;# 
  1444  009B                     	;# 
  1445  009B                     	;# 
  1446  009C                     	;# 
  1447  009D                     	;# 
  1448  009E                     	;# 
  1449  010C                     	;# 
  1450  010D                     	;# 
  1451  010E                     	;# 
  1452  010F                     	;# 
  1453  0110                     	;# 
  1454  0111                     	;# 
  1455  0112                     	;# 
  1456  0113                     	;# 
  1457  0114                     	;# 
  1458  0115                     	;# 
  1459  0116                     	;# 
  1460  0117                     	;# 
  1461  0118                     	;# 
  1462  0119                     	;# 
  1463  011A                     	;# 
  1464  011B                     	;# 
  1465  011D                     	;# 
  1466  018C                     	;# 
  1467  018D                     	;# 
  1468  018F                     	;# 
  1469  0190                     	;# 
  1470  0191                     	;# 
  1471  0191                     	;# 
  1472  0192                     	;# 
  1473  0193                     	;# 
  1474  0193                     	;# 
  1475  0193                     	;# 
  1476  0194                     	;# 
  1477  0195                     	;# 
  1478  0196                     	;# 
  1479  0199                     	;# 
  1480  019A                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019B                     	;# 
  1484  019B                     	;# 
  1485  019C                     	;# 
  1486  019C                     	;# 
  1487  019D                     	;# 
  1488  019E                     	;# 
  1489  019F                     	;# 
  1490  020D                     	;# 
  1491  0210                     	;# 
  1492  0211                     	;# 
  1493  0212                     	;# 
  1494  0213                     	;# 
  1495  0214                     	;# 
  1496  0215                     	;# 
  1497  0215                     	;# 
  1498  0216                     	;# 
  1499  0217                     	;# 
  1500  0291                     	;# 
  1501  0291                     	;# 
  1502  0292                     	;# 
  1503  0293                     	;# 
  1504  0294                     	;# 
  1505  0295                     	;# 
  1506  0295                     	;# 
  1507  0296                     	;# 
  1508  0298                     	;# 
  1509  0298                     	;# 
  1510  0299                     	;# 
  1511  029A                     	;# 
  1512  029B                     	;# 
  1513  029C                     	;# 
  1514  029C                     	;# 
  1515  029D                     	;# 
  1516  029E                     	;# 
  1517  029F                     	;# 
  1518  0311                     	;# 
  1519  0311                     	;# 
  1520  0312                     	;# 
  1521  0313                     	;# 
  1522  0314                     	;# 
  1523  0315                     	;# 
  1524  0315                     	;# 
  1525  0316                     	;# 
  1526  0318                     	;# 
  1527  0318                     	;# 
  1528  0319                     	;# 
  1529  031A                     	;# 
  1530  031C                     	;# 
  1531  031C                     	;# 
  1532  031D                     	;# 
  1533  031E                     	;# 
  1534  0394                     	;# 
  1535  0395                     	;# 
  1536  0396                     	;# 
  1537  0415                     	;# 
  1538  0416                     	;# 
  1539  0417                     	;# 
  1540  041C                     	;# 
  1541  041D                     	;# 
  1542  041E                     	;# 
  1543  0791                     	;# 
  1544  0792                     	;# 
  1545  0793                     	;# 
  1546  0794                     	;# 
  1547  0795                     	;# 
  1548  0798                     	;# 
  1549  0799                     	;# 
  1550  079A                     	;# 
  1551  07A0                     	;# 
  1552  07A1                     	;# 
  1553  07A2                     	;# 
  1554  07A3                     	;# 
  1555  07A4                     	;# 
  1556  07A5                     	;# 
  1557  07A6                     	;# 
  1558  07A7                     	;# 
  1559  07A8                     	;# 
  1560  07A9                     	;# 
  1561  07AA                     	;# 
  1562  07AB                     	;# 
  1563  0FE4                     	;# 
  1564  0FE5                     	;# 
  1565  0FE6                     	;# 
  1566  0FE7                     	;# 
  1567  0FE8                     	;# 
  1568  0FE9                     	;# 
  1569  0FEA                     	;# 
  1570  0FEB                     	;# 
  1571  0FED                     	;# 
  1572  0FEE                     	;# 
  1573  0FEF                     	;# 
  1574  0000                     	;# 
  1575  0001                     	;# 
  1576  0002                     	;# 
  1577  0003                     	;# 
  1578  0004                     	;# 
  1579  0005                     	;# 
  1580  0006                     	;# 
  1581  0007                     	;# 
  1582  0008                     	;# 
  1583  0009                     	;# 
  1584  000A                     	;# 
  1585  000B                     	;# 
  1586  000C                     	;# 
  1587  000D                     	;# 
  1588  000E                     	;# 
  1589  000F                     	;# 
  1590  0010                     	;# 
  1591  0011                     	;# 
  1592  0012                     	;# 
  1593  0013                     	;# 
  1594  0015                     	;# 
  1595  0016                     	;# 
  1596  0016                     	;# 
  1597  0017                     	;# 
  1598  0018                     	;# 
  1599  0019                     	;# 
  1600  001A                     	;# 
  1601  001B                     	;# 
  1602  001C                     	;# 
  1603  001E                     	;# 
  1604  001F                     	;# 
  1605  008C                     	;# 
  1606  008D                     	;# 
  1607  008E                     	;# 
  1608  008F                     	;# 
  1609  0090                     	;# 
  1610  0091                     	;# 
  1611  0092                     	;# 
  1612  0093                     	;# 
  1613  0095                     	;# 
  1614  0096                     	;# 
  1615  0097                     	;# 
  1616  0098                     	;# 
  1617  0099                     	;# 
  1618  009A                     	;# 
  1619  009B                     	;# 
  1620  009B                     	;# 
  1621  009C                     	;# 
  1622  009D                     	;# 
  1623  009E                     	;# 
  1624  010C                     	;# 
  1625  010D                     	;# 
  1626  010E                     	;# 
  1627  010F                     	;# 
  1628  0110                     	;# 
  1629  0111                     	;# 
  1630  0112                     	;# 
  1631  0113                     	;# 
  1632  0114                     	;# 
  1633  0115                     	;# 
  1634  0116                     	;# 
  1635  0117                     	;# 
  1636  0118                     	;# 
  1637  0119                     	;# 
  1638  011A                     	;# 
  1639  011B                     	;# 
  1640  011D                     	;# 
  1641  018C                     	;# 
  1642  018D                     	;# 
  1643  018F                     	;# 
  1644  0190                     	;# 
  1645  0191                     	;# 
  1646  0191                     	;# 
  1647  0192                     	;# 
  1648  0193                     	;# 
  1649  0193                     	;# 
  1650  0193                     	;# 
  1651  0194                     	;# 
  1652  0195                     	;# 
  1653  0196                     	;# 
  1654  0199                     	;# 
  1655  019A                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019C                     	;# 
  1661  019C                     	;# 
  1662  019D                     	;# 
  1663  019E                     	;# 
  1664  019F                     	;# 
  1665  020D                     	;# 
  1666  0210                     	;# 
  1667  0211                     	;# 
  1668  0212                     	;# 
  1669  0213                     	;# 
  1670  0214                     	;# 
  1671  0215                     	;# 
  1672  0215                     	;# 
  1673  0216                     	;# 
  1674  0217                     	;# 
  1675  0291                     	;# 
  1676  0291                     	;# 
  1677  0292                     	;# 
  1678  0293                     	;# 
  1679  0294                     	;# 
  1680  0295                     	;# 
  1681  0295                     	;# 
  1682  0296                     	;# 
  1683  0298                     	;# 
  1684  0298                     	;# 
  1685  0299                     	;# 
  1686  029A                     	;# 
  1687  029B                     	;# 
  1688  029C                     	;# 
  1689  029C                     	;# 
  1690  029D                     	;# 
  1691  029E                     	;# 
  1692  029F                     	;# 
  1693  0311                     	;# 
  1694  0311                     	;# 
  1695  0312                     	;# 
  1696  0313                     	;# 
  1697  0314                     	;# 
  1698  0315                     	;# 
  1699  0315                     	;# 
  1700  0316                     	;# 
  1701  0318                     	;# 
  1702  0318                     	;# 
  1703  0319                     	;# 
  1704  031A                     	;# 
  1705  031C                     	;# 
  1706  031C                     	;# 
  1707  031D                     	;# 
  1708  031E                     	;# 
  1709  0394                     	;# 
  1710  0395                     	;# 
  1711  0396                     	;# 
  1712  0415                     	;# 
  1713  0416                     	;# 
  1714  0417                     	;# 
  1715  041C                     	;# 
  1716  041D                     	;# 
  1717  041E                     	;# 
  1718  0791                     	;# 
  1719  0792                     	;# 
  1720  0793                     	;# 
  1721  0794                     	;# 
  1722  0795                     	;# 
  1723  0798                     	;# 
  1724  0799                     	;# 
  1725  079A                     	;# 
  1726  07A0                     	;# 
  1727  07A1                     	;# 
  1728  07A2                     	;# 
  1729  07A3                     	;# 
  1730  07A4                     	;# 
  1731  07A5                     	;# 
  1732  07A6                     	;# 
  1733  07A7                     	;# 
  1734  07A8                     	;# 
  1735  07A9                     	;# 
  1736  07AA                     	;# 
  1737  07AB                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  000F                     	;# 
  1765  0010                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0013                     	;# 
  1769  0015                     	;# 
  1770  0016                     	;# 
  1771  0016                     	;# 
  1772  0017                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001B                     	;# 
  1777  001C                     	;# 
  1778  001E                     	;# 
  1779  001F                     	;# 
  1780  008C                     	;# 
  1781  008D                     	;# 
  1782  008E                     	;# 
  1783  008F                     	;# 
  1784  0090                     	;# 
  1785  0091                     	;# 
  1786  0092                     	;# 
  1787  0093                     	;# 
  1788  0095                     	;# 
  1789  0096                     	;# 
  1790  0097                     	;# 
  1791  0098                     	;# 
  1792  0099                     	;# 
  1793  009A                     	;# 
  1794  009B                     	;# 
  1795  009B                     	;# 
  1796  009C                     	;# 
  1797  009D                     	;# 
  1798  009E                     	;# 
  1799  010C                     	;# 
  1800  010D                     	;# 
  1801  010E                     	;# 
  1802  010F                     	;# 
  1803  0110                     	;# 
  1804  0111                     	;# 
  1805  0112                     	;# 
  1806  0113                     	;# 
  1807  0114                     	;# 
  1808  0115                     	;# 
  1809  0116                     	;# 
  1810  0117                     	;# 
  1811  0118                     	;# 
  1812  0119                     	;# 
  1813  011A                     	;# 
  1814  011B                     	;# 
  1815  011D                     	;# 
  1816  018C                     	;# 
  1817  018D                     	;# 
  1818  018F                     	;# 
  1819  0190                     	;# 
  1820  0191                     	;# 
  1821  0191                     	;# 
  1822  0192                     	;# 
  1823  0193                     	;# 
  1824  0193                     	;# 
  1825  0193                     	;# 
  1826  0194                     	;# 
  1827  0195                     	;# 
  1828  0196                     	;# 
  1829  0199                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019C                     	;# 
  1836  019C                     	;# 
  1837  019D                     	;# 
  1838  019E                     	;# 
  1839  019F                     	;# 
  1840  020D                     	;# 
  1841  0210                     	;# 
  1842  0211                     	;# 
  1843  0212                     	;# 
  1844  0213                     	;# 
  1845  0214                     	;# 
  1846  0215                     	;# 
  1847  0215                     	;# 
  1848  0216                     	;# 
  1849  0217                     	;# 
  1850  0291                     	;# 
  1851  0291                     	;# 
  1852  0292                     	;# 
  1853  0293                     	;# 
  1854  0294                     	;# 
  1855  0295                     	;# 
  1856  0295                     	;# 
  1857  0296                     	;# 
  1858  0298                     	;# 
  1859  0298                     	;# 
  1860  0299                     	;# 
  1861  029A                     	;# 
  1862  029B                     	;# 
  1863  029C                     	;# 
  1864  029C                     	;# 
  1865  029D                     	;# 
  1866  029E                     	;# 
  1867  029F                     	;# 
  1868  0311                     	;# 
  1869  0311                     	;# 
  1870  0312                     	;# 
  1871  0313                     	;# 
  1872  0314                     	;# 
  1873  0315                     	;# 
  1874  0315                     	;# 
  1875  0316                     	;# 
  1876  0318                     	;# 
  1877  0318                     	;# 
  1878  0319                     	;# 
  1879  031A                     	;# 
  1880  031C                     	;# 
  1881  031C                     	;# 
  1882  031D                     	;# 
  1883  031E                     	;# 
  1884  0394                     	;# 
  1885  0395                     	;# 
  1886  0396                     	;# 
  1887  0415                     	;# 
  1888  0416                     	;# 
  1889  0417                     	;# 
  1890  041C                     	;# 
  1891  041D                     	;# 
  1892  041E                     	;# 
  1893  0791                     	;# 
  1894  0792                     	;# 
  1895  0793                     	;# 
  1896  0794                     	;# 
  1897  0795                     	;# 
  1898  0798                     	;# 
  1899  0799                     	;# 
  1900  079A                     	;# 
  1901  07A0                     	;# 
  1902  07A1                     	;# 
  1903  07A2                     	;# 
  1904  07A3                     	;# 
  1905  07A4                     	;# 
  1906  07A5                     	;# 
  1907  07A6                     	;# 
  1908  07A7                     	;# 
  1909  07A8                     	;# 
  1910  07A9                     	;# 
  1911  07AA                     	;# 
  1912  07AB                     	;# 
  1913  0FE4                     	;# 
  1914  0FE5                     	;# 
  1915  0FE6                     	;# 
  1916  0FE7                     	;# 
  1917  0FE8                     	;# 
  1918  0FE9                     	;# 
  1919  0FEA                     	;# 
  1920  0FEB                     	;# 
  1921  0FED                     	;# 
  1922  0FEE                     	;# 
  1923  0FEF                     	;# 
  1924  0000                     	;# 
  1925  0001                     	;# 
  1926  0002                     	;# 
  1927  0003                     	;# 
  1928  0004                     	;# 
  1929  0005                     	;# 
  1930  0006                     	;# 
  1931  0007                     	;# 
  1932  0008                     	;# 
  1933  0009                     	;# 
  1934  000A                     	;# 
  1935  000B                     	;# 
  1936  000C                     	;# 
  1937  000D                     	;# 
  1938  000E                     	;# 
  1939  000F                     	;# 
  1940  0010                     	;# 
  1941  0011                     	;# 
  1942  0012                     	;# 
  1943  0013                     	;# 
  1944  0015                     	;# 
  1945  0016                     	;# 
  1946  0016                     	;# 
  1947  0017                     	;# 
  1948  0018                     	;# 
  1949  0019                     	;# 
  1950  001A                     	;# 
  1951  001B                     	;# 
  1952  001C                     	;# 
  1953  001E                     	;# 
  1954  001F                     	;# 
  1955  008C                     	;# 
  1956  008D                     	;# 
  1957  008E                     	;# 
  1958  008F                     	;# 
  1959  0090                     	;# 
  1960  0091                     	;# 
  1961  0092                     	;# 
  1962  0093                     	;# 
  1963  0095                     	;# 
  1964  0096                     	;# 
  1965  0097                     	;# 
  1966  0098                     	;# 
  1967  0099                     	;# 
  1968  009A                     	;# 
  1969  009B                     	;# 
  1970  009B                     	;# 
  1971  009C                     	;# 
  1972  009D                     	;# 
  1973  009E                     	;# 
  1974  010C                     	;# 
  1975  010D                     	;# 
  1976  010E                     	;# 
  1977  010F                     	;# 
  1978  0110                     	;# 
  1979  0111                     	;# 
  1980  0112                     	;# 
  1981  0113                     	;# 
  1982  0114                     	;# 
  1983  0115                     	;# 
  1984  0116                     	;# 
  1985  0117                     	;# 
  1986  0118                     	;# 
  1987  0119                     	;# 
  1988  011A                     	;# 
  1989  011B                     	;# 
  1990  011D                     	;# 
  1991  018C                     	;# 
  1992  018D                     	;# 
  1993  018F                     	;# 
  1994  0190                     	;# 
  1995  0191                     	;# 
  1996  0191                     	;# 
  1997  0192                     	;# 
  1998  0193                     	;# 
  1999  0193                     	;# 
  2000  0193                     	;# 
  2001  0194                     	;# 
  2002  0195                     	;# 
  2003  0196                     	;# 
  2004  0199                     	;# 
  2005  019A                     	;# 
  2006  019B                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019C                     	;# 
  2011  019C                     	;# 
  2012  019D                     	;# 
  2013  019E                     	;# 
  2014  019F                     	;# 
  2015  020D                     	;# 
  2016  0210                     	;# 
  2017  0211                     	;# 
  2018  0212                     	;# 
  2019  0213                     	;# 
  2020  0214                     	;# 
  2021  0215                     	;# 
  2022  0215                     	;# 
  2023  0216                     	;# 
  2024  0217                     	;# 
  2025  0291                     	;# 
  2026  0291                     	;# 
  2027  0292                     	;# 
  2028  0293                     	;# 
  2029  0294                     	;# 
  2030  0295                     	;# 
  2031  0295                     	;# 
  2032  0296                     	;# 
  2033  0298                     	;# 
  2034  0298                     	;# 
  2035  0299                     	;# 
  2036  029A                     	;# 
  2037  029B                     	;# 
  2038  029C                     	;# 
  2039  029C                     	;# 
  2040  029D                     	;# 
  2041  029E                     	;# 
  2042  029F                     	;# 
  2043  0311                     	;# 
  2044  0311                     	;# 
  2045  0312                     	;# 
  2046  0313                     	;# 
  2047  0314                     	;# 
  2048  0315                     	;# 
  2049  0315                     	;# 
  2050  0316                     	;# 
  2051  0318                     	;# 
  2052  0318                     	;# 
  2053  0319                     	;# 
  2054  031A                     	;# 
  2055  031C                     	;# 
  2056  031C                     	;# 
  2057  031D                     	;# 
  2058  031E                     	;# 
  2059  0394                     	;# 
  2060  0395                     	;# 
  2061  0396                     	;# 
  2062  0415                     	;# 
  2063  0416                     	;# 
  2064  0417                     	;# 
  2065  041C                     	;# 
  2066  041D                     	;# 
  2067  041E                     	;# 
  2068  0791                     	;# 
  2069  0792                     	;# 
  2070  0793                     	;# 
  2071  0794                     	;# 
  2072  0795                     	;# 
  2073  0798                     	;# 
  2074  0799                     	;# 
  2075  079A                     	;# 
  2076  07A0                     	;# 
  2077  07A1                     	;# 
  2078  07A2                     	;# 
  2079  07A3                     	;# 
  2080  07A4                     	;# 
  2081  07A5                     	;# 
  2082  07A6                     	;# 
  2083  07A7                     	;# 
  2084  07A8                     	;# 
  2085  07A9                     	;# 
  2086  07AA                     	;# 
  2087  07AB                     	;# 
  2088  0FE4                     	;# 
  2089  0FE5                     	;# 
  2090  0FE6                     	;# 
  2091  0FE7                     	;# 
  2092  0FE8                     	;# 
  2093  0FE9                     	;# 
  2094  0FEA                     	;# 
  2095  0FEB                     	;# 
  2096  0FED                     	;# 
  2097  0FEE                     	;# 
  2098  0FEF                     	;# 
  2099                           
  2100                           	psect	stringtext1
  2101  1000                     __pstringtext1:	
  2102  1000                     _fsmStateTable:	
  2103  1000  34EE               	retlw	low _do_I2C_IDLE
  2104  1001  340C               	retlw	high _do_I2C_IDLE
  2105  1002  3487               	retlw	low _do_I2C_SEND_ADR_READ
  2106  1003  340D               	retlw	high _do_I2C_SEND_ADR_READ
  2107  1004  346F               	retlw	low _do_I2C_SEND_ADR_WRITE
  2108  1005  340D               	retlw	high _do_I2C_SEND_ADR_WRITE
  2109  1006  34F2               	retlw	low _do_I2C_TX
  2110  1007  3402               	retlw	high _do_I2C_TX
  2111  1008  34A1               	retlw	low _do_I2C_RX
  2112  1009  3403               	retlw	high _do_I2C_RX
  2113  100A  3440               	retlw	low _do_I2C_RCEN
  2114  100B  340D               	retlw	high _do_I2C_RCEN
  2115  100C  3490               	retlw	low _do_I2C_TX_EMPTY
  2116  100D  3405               	retlw	high _do_I2C_TX_EMPTY
  2117  100E  34F7               	retlw	low _do_I2C_SEND_RESTART_READ
  2118  100F  340C               	retlw	high _do_I2C_SEND_RESTART_READ
  2119  1010  3400               	retlw	low _do_I2C_SEND_RESTART_WRITE
  2120  1011  340D               	retlw	high _do_I2C_SEND_RESTART_WRITE
  2121  1012  3409               	retlw	low _do_I2C_SEND_RESTART
  2122  1013  340D               	retlw	high _do_I2C_SEND_RESTART
  2123  1014  3412               	retlw	low _do_I2C_SEND_STOP
  2124  1015  340D               	retlw	high _do_I2C_SEND_STOP
  2125  1016  341B               	retlw	low _do_I2C_DO_ACK
  2126  1017  340D               	retlw	high _do_I2C_DO_ACK
  2127  1018  3424               	retlw	low _do_I2C_DO_NACK_STOP
  2128  1019  340D               	retlw	high _do_I2C_DO_NACK_STOP
  2129  101A  342D               	retlw	low _do_I2C_DO_NACK_RESTART
  2130  101B  340D               	retlw	high _do_I2C_DO_NACK_RESTART
  2131  101C  3463               	retlw	low _do_I2C_RESET
  2132  101D  340D               	retlw	high _do_I2C_RESET
  2133  101E  3433               	retlw	low _do_I2C_DO_ADDRESS_NACK
  2134  101F  3406               	retlw	high _do_I2C_DO_ADDRESS_NACK
  2135  1020                     __end_of_fsmStateTable:	
  2136                           
  2137                           	psect	stringtext2
  2138  1020                     __pstringtext2:	
  2139  1020                     _displayNum:	
  2140  1020  34FC               	retlw	252
  2141  1021  3460               	retlw	96
  2142  1022  34DA               	retlw	218
  2143  1023  34F2               	retlw	242
  2144  1024  3466               	retlw	102
  2145  1025  34B6               	retlw	182
  2146  1026  34BE               	retlw	190
  2147  1027  34E0               	retlw	224
  2148  1028  34FE               	retlw	254
  2149  1029  34F6               	retlw	246
  2150  102A                     __end_of_displayNum:	
  2151                           
  2152                           	psect	nvBANK0
  2153  0057                     __pnvBANK0:	
  2154  0057                     _IOCBF4_InterruptHandler:	
  2155  0057                     	ds	2
  2156  000D                     _PORTBbits	set	13
  2157  0015                     _TMR0	set	21
  2158  0011                     _PIR1bits	set	17
  2159  0012                     _PIR2bits	set	18
  2160  000B                     _INTCONbits	set	11
  2161  009D                     _ADCON0bits	set	157
  2162  009C                     _ADRESH	set	156
  2163  009B                     _ADRESL	set	155
  2164  009E                     _ADCON1	set	158
  2165  009D                     _ADCON0	set	157
  2166  0095                     _OPTION_REG	set	149
  2167  0095                     _OPTION_REGbits	set	149
  2168  008F                     _TRISD	set	143
  2169  008E                     _TRISC	set	142
  2170  008D                     _TRISB	set	141
  2171  008C                     _TRISA	set	140
  2172  0090                     _TRISE	set	144
  2173  0097                     _WDTCON	set	151
  2174  0098                     _OSCTUNE	set	152
  2175  0099                     _OSCCON	set	153
  2176  0091                     _PIE1bits	set	145
  2177  0092                     _PIE2bits	set	146
  2178  04D6                     _PLLR	set	1238
  2179  010C                     _LATAbits	set	268
  2180  010E                     _LATCbits	set	270
  2181  0110                     _LATEbits	set	272
  2182  0117                     _FVRCONbits	set	279
  2183  0117                     _FVRCON	set	279
  2184  011D                     _APFCON	set	285
  2185  010E                     _LATC	set	270
  2186  010D                     _LATB	set	269
  2187  010C                     _LATA	set	268
  2188  010F                     _LATD	set	271
  2189  0110                     _LATE	set	272
  2190  0116                     _BORCON	set	278
  2191  018C                     _ANSELA	set	396
  2192  0190                     _ANSELE	set	400
  2193  018D                     _ANSELB	set	397
  2194  018F                     _ANSELD	set	399
  2195  0196                     _EECON2	set	406
  2196  0193                     _EEDATL	set	403
  2197  0194                     _EEDATH	set	404
  2198  0195                     _EECON1bits	set	405
  2199  0192                     _EEADRH	set	402
  2200  0191                     _EEADRL	set	401
  2201  0214                     _SSPSTATbits	set	532
  2202  0213                     _SSPMSK	set	531
  2203  0211                     _SSPBUF	set	529
  2204  0216                     _SSPCON2bits	set	534
  2205  0212                     _SSPADD	set	530
  2206  0216                     _SSPCON2	set	534
  2207  0215                     _SSPCON1	set	533
  2208  0214                     _SSPSTAT	set	532
  2209  0215                     _SSPCON1bits	set	533
  2210  020D                     _WPUB	set	525
  2211  0210                     _WPUE	set	528
  2212  0394                     _IOCBPbits	set	916
  2213  0395                     _IOCBNbits	set	917
  2214  0396                     _IOCBFbits	set	918
  2215                           
  2216                           ; #config settings
  2217  0000                     
  2218                           	psect	cinit
  2219  0046                     start_initialization:	
  2220  0046                     __initialization:	
  2221                           
  2222                           ; Clear objects allocated to COMMON
  2223  0046  01F8               	clrf	__pbssCOMMON& (0+127)
  2224  0047  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2225  0048  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2226  0049  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2227  004A  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2228  004B  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2229                           
  2230                           ; Clear objects allocated to BANK0
  2231  004C  3020               	movlw	low __pbssBANK0
  2232  004D  0084               	movwf	4
  2233  004E  3000               	movlw	high __pbssBANK0
  2234  004F  0085               	movwf	5
  2235  0050  301D               	movlw	29
  2236  0051  318C  249E  3180   	fcall	clear_ram0
  2237                           
  2238                           ; Clear objects allocated to BANK1
  2239  0054  30A0               	movlw	low __pbssBANK1
  2240  0055  0084               	movwf	4
  2241  0056  3000               	movlw	high __pbssBANK1
  2242  0057  0085               	movwf	5
  2243  0058  301D               	movlw	29
  2244  0059  318C  249E  3180   	fcall	clear_ram0
  2245  005C                     end_of_initialization:	
  2246                           ;End of C runtime variable initialization code
  2247                           
  2248  005C                     __end_of__initialization:	
  2249  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2250  005D  0020               	movlb	0
  2251  005E  3180  2860         	ljmp	_main	;jump to C main() function
  2252                           
  2253                           	psect	bssCOMMON
  2254  0078                     __pbssCOMMON:	
  2255  0078                     _TMR0_InterruptHandler:	
  2256  0078                     	ds	2
  2257  007A                     _i2c_driver_busCollisionISR:	
  2258  007A                     	ds	2
  2259  007C                     displayRefreshISR@i:	
  2260  007C                     	ds	1
  2261  007D                     _timer0ReloadVal:	
  2262  007D                     	ds	1
  2263                           
  2264                           	psect	bssBANK0
  2265  0020                     __pbssBANK0:	
  2266  0020                     _button_press_count:	
  2267  0020                     	ds	4
  2268  0024                     _flag_button_press_count:	
  2269  0024                     	ds	4
  2270  0028                     _displayBuff:	
  2271  0028                     	ds	4
  2272  002C                     _bcd_temp:	
  2273  002C                     	ds	2
  2274  002E                     _i2c_driver_i2cISR:	
  2275  002E                     	ds	2
  2276  0030                     _mode_timeout_count:	
  2277  0030                     	ds	1
  2278  0031                     _mode:	
  2279  0031                     	ds	1
  2280  0032                     _flag_dot_blink:	
  2281  0032                     	ds	1
  2282  0033                     _flag_time_display_update:	
  2283  0033                     	ds	1
  2284  0034                     _rtcData:	
  2285  0034                     	ds	9
  2286                           
  2287                           	psect	bssBANK1
  2288  00A0                     __pbssBANK1:	
  2289  00A0                     _i2c_status:	
  2290  00A0                     	ds	29
  2291                           
  2292                           	psect	clrtext
  2293  0C9E                     clear_ram0:	
  2294                           ;	Called with FSR0 containing the base address, and
  2295                           ;	WREG with the size to clear
  2296                           
  2297  0C9E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2298  0C9F                     clrloop0:	
  2299  0C9F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2300  0CA0  3101               	addfsr 0,1
  2301  0CA1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2302  0CA2  2C9F               	goto	clrloop0	;have we reached the end yet?
  2303  0CA3  3400               	retlw	0	;all done for this memory range, return
  2304                           
  2305                           	psect	cstackCOMMON
  2306  0070                     __pcstackCOMMON:	
  2307  0070                     ?_i2c_driver_open:	
  2308  0070                     ?_mssp_IRQisEnabled:	
  2309                           ; 1 bit 
  2310                           
  2311  0070                     ?_i2c_driver_isNACK:	
  2312                           ; 1 bit 
  2313                           
  2314  0070                     ?i1_i2c_driver_isNACK:	
  2315                           ; 1 bit 
  2316                           
  2317  0070                     ?_mssp_clearIRQ:	
  2318                           ; 1 bit 
  2319                           
  2320  0070                     ?_i2c_busCollisionISR:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0070                     ??_i2c_busCollisionISR:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326  0070                     ?_i2c_ISR:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329  0070                     ?_mssp_disableIRQ:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332  0070                     ?_i2c_driver_start:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0070                     ?_i2c_poller:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  0070                     ?_mssp_waitForEvent:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  0070                     ?_i2c_driver_resetBus:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  0070                     ?_i2c_driver_restart:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0070                     ?_i2c_driver_stop:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0070                     ?_i2c_driver_TXData:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0070                     ?_i2c_driver_startRX:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0070                     ?_i2c_driver_sendACK:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0070                     ?_i2c_driver_sendNACK:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0070                     ?_i2c_driver_getRXData:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0070                     ?_mssp_setIRQ:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0070                     ?_i2c_driver_clearBusCollision:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0070                     ??_i2c_driver_clearBusCollision:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0070                     ?_TMR0_ISR:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0070                     ?_PIN_MANAGER_IOC:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0070                     ??_PIN_MANAGER_IOC:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0070                     ?_PIN_MANAGER_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_OSCILLATOR_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ?_WDT_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_FVR_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_ADC_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_TMR0_Initialize:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ?_IOCBF4_DefaultInterruptHandler:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ??_IOCBF4_DefaultInterruptHandler:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ?_IOCBF4_ISR:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ??_IOCBF4_ISR:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ?_TMR0_DefaultInterruptHandler:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ??_TMR0_DefaultInterruptHandler:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ?_TMR0_CallBack:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_secondISR:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ??_secondISR:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ?_displayRefreshISR:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ??_displayRefreshISR:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ?_i2c_open:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_i2c_close:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ?_i2c_masterOperation:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_i2c_masterWrite:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ?_do_I2C_RESET:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ?_do_I2C_IDLE:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_do_I2C_SEND_RESTART_READ:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ?_do_I2C_SEND_RESTART:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_do_I2C_SEND_STOP:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_do_I2C_SEND_ADR_READ:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_do_I2C_RCEN:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     ?_do_I2C_DO_ACK:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     ?_do_I2C_DO_NACK_STOP:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ?_do_I2C_DO_NACK_RESTART:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0070                     ?_do_I2C_TX:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0070                     ?_do_I2C_RX:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0070                     ?_do_I2C_TX_EMPTY:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0070                     ?_INTERRUPT_InterruptManager:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0070                     ?_SYSTEM_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0070                     ?_initRTC:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0070                     ?_bcdHourIncr:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0070                     ?_bcdHourDecr:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0070                     ?_bcdMinuteIncr:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0070                     ?_bcdMinuteDecr:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     ?_main:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0070                     ?i1_i2c_setBuffer:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0070                     ?i1_do_I2C_RESET:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0070                     ??i1_do_I2C_RESET:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0070                     ?i1_do_I2C_IDLE:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0070                     ??i1_do_I2C_IDLE:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0070                     ?i1_do_I2C_SEND_RESTART:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0070                     ??i1_do_I2C_SEND_RESTART:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0070                     ?i1_do_I2C_SEND_STOP:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0070                     ??i1_do_I2C_SEND_STOP:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560  0070                     ??i1_do_I2C_SEND_ADR_READ:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566  0070                     ??i1_do_I2C_SEND_ADR_WRITE:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569  0070                     ?i1_do_I2C_RCEN:	
  2570                           ; 1 bytes @ 0x0
  2571                           
  2572  0070                     ??i1_do_I2C_RCEN:	
  2573                           ; 1 bytes @ 0x0
  2574                           
  2575  0070                     ?i1_do_I2C_DO_ACK:	
  2576                           ; 1 bytes @ 0x0
  2577                           
  2578  0070                     ??i1_do_I2C_DO_ACK:	
  2579                           ; 1 bytes @ 0x0
  2580                           
  2581  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599  0070                     ?i1_do_I2C_TX:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602  0070                     ??i1_do_I2C_TX:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  0070                     ?i1_do_I2C_RX:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  0070                     ??i1_do_I2C_RX:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0070                     ?i1_do_I2C_TX_EMPTY:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0070                     ??i1_do_I2C_TX_EMPTY:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0070                     ?i1_i2c_ISR:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620  0070                     ?i1_setCallBack:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0070                     ?i1_mssp_clearIRQ:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0070                     ??i1_mssp_clearIRQ:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0070                     ?i1_mssp_setIRQ:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0070                     ??i1_mssp_setIRQ:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0070                     ?i1_i2c_driver_resetBus:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0070                     ??i1_i2c_driver_resetBus:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0070                     ?i1_i2c_driver_restart:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0070                     ??i1_i2c_driver_restart:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0070                     ?i1_i2c_driver_stop:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0070                     ??i1_i2c_driver_stop:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0070                     ??i1_i2c_driver_isNACK:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0070                     ?i1_i2c_driver_startRX:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0070                     ??i1_i2c_driver_startRX:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0070                     ?i1_i2c_driver_getRXData:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0070                     ??i1_i2c_driver_getRXData:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  0070                     ?i1_i2c_driver_TXData:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671  0070                     ??i1_i2c_driver_TXData:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674  0070                     ?i1_i2c_driver_sendACK:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677  0070                     ??i1_i2c_driver_sendACK:	
  2678                           ; 1 bytes @ 0x0
  2679                           
  2680  0070                     ?i1_i2c_driver_sendNACK:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683  0070                     ??i1_i2c_driver_sendNACK:	
  2684                           ; 1 bytes @ 0x0
  2685                           
  2686  0070                     i1i2c_driver_TXData@d:	
  2687                           ; 1 bytes @ 0x0
  2688                           
  2689  0070                     i1i2c_setBuffer@bufferSize:	
  2690                           ; 1 bytes @ 0x0
  2691                           
  2692  0070                     i1setCallBack@cb:	
  2693                           ; 2 bytes @ 0x0
  2694                           
  2695                           
  2696                           ; 2 bytes @ 0x0
  2697  0070                     	ds	2
  2698  0072                     ??_TMR0_ISR:	
  2699  0072                     ??_TMR0_CallBack:	
  2700                           ; 1 bytes @ 0x2
  2701                           
  2702  0072                     ??i1_i2c_setBuffer:	
  2703                           ; 1 bytes @ 0x2
  2704                           
  2705  0072                     i1setCallBack@p:	
  2706                           ; 1 bytes @ 0x2
  2707                           
  2708                           
  2709                           ; 1 bytes @ 0x2
  2710  0072                     	ds	1
  2711  0073                     ??i1_i2c_ISR:	
  2712  0073                     ??i1_setCallBack:	
  2713                           ; 1 bytes @ 0x3
  2714                           
  2715  0073                     i1i2c_setBuffer@buffer:	
  2716                           ; 1 bytes @ 0x3
  2717                           
  2718                           
  2719                           ; 1 bytes @ 0x3
  2720  0073                     	ds	1
  2721  0074                     i1setCallBack@idx:	
  2722                           
  2723                           ; 1 bytes @ 0x4
  2724  0074                     	ds	1
  2725  0075                     ?i1_i2c_setDataCompleteCallback:	
  2726  0075                     i1i2c_setDataCompleteCallback@cb:	
  2727                           ; 1 bytes @ 0x5
  2728                           
  2729                           
  2730                           ; 2 bytes @ 0x5
  2731  0075                     	ds	1
  2732  0076                     ??_INTERRUPT_InterruptManager:	
  2733                           
  2734                           ; 1 bytes @ 0x6
  2735  0076                     	ds	1
  2736  0077                     i1i2c_setDataCompleteCallback@p:	
  2737                           
  2738                           ; 1 bytes @ 0x7
  2739  0077                     	ds	1
  2740  0078                     ??i1_returnStop:	
  2741  0078                     ??i1_returnReset:	
  2742                           ; 1 bytes @ 0x8
  2743                           
  2744  0078                     ??i1_wr1RegCompleteHandler:	
  2745                           ; 1 bytes @ 0x8
  2746                           
  2747  0078                     ??i1_rd1RegCompleteHandler:	
  2748                           ; 1 bytes @ 0x8
  2749                           
  2750  0078                     ??i1_rd2RegCompleteHandler:	
  2751                           ; 1 bytes @ 0x8
  2752                           
  2753  0078                     ??i1_wr2RegCompleteHandler:	
  2754                           ; 1 bytes @ 0x8
  2755                           
  2756  0078                     ??i1_rdBlkRegCompleteHandler:	
  2757                           ; 1 bytes @ 0x8
  2758                           
  2759  0078                     ??i1_i2c_restartWrite:	
  2760                           ; 1 bytes @ 0x8
  2761                           
  2762                           
  2763                           	psect	cstackBANK0
  2764  003D                     __pcstackBANK0:	
  2765                           ; 1 bytes @ 0x8
  2766                           
  2767  003D                     ?_setCallBack:	
  2768  003D                     ??_i2c_driver_open:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771  003D                     ??_mssp_clearIRQ:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774  003D                     ?_i2c_driver_setBusCollisionISR:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777  003D                     ?_i2c_driver_setI2cISR:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780  003D                     ??_mssp_disableIRQ:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783  003D                     ??_i2c_driver_start:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786  003D                     ??_mssp_IRQisEnabled:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789  003D                     ??_mssp_waitForEvent:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792  003D                     ??_i2c_driver_resetBus:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795  003D                     ??_i2c_driver_restart:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798  003D                     ??_i2c_driver_stop:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801  003D                     ??_i2c_driver_TXData:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804  003D                     ??_i2c_driver_startRX:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807  003D                     ??_i2c_driver_sendACK:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810  003D                     ??_i2c_driver_sendNACK:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813  003D                     ??_i2c_driver_isNACK:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  003D                     ??_i2c_driver_getRXData:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  003D                     ??_mssp_setIRQ:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  003D                     ??_OSCILLATOR_Initialize:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  003D                     ??_WDT_Initialize:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  003D                     ??_FVR_Initialize:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  003D                     ??_ADC_Initialize:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  003D                     ?_IOCBF4_SetInterruptHandler:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  003D                     ?_TMR0_SetInterruptHandler:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  003D                     ??_i2c_close:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  003D                     ?_i2c_setBuffer:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  003D                     ??_do_I2C_RESET:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  003D                     ??_do_I2C_IDLE:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  003D                     ??_do_I2C_SEND_RESTART_READ:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  003D                     ??_do_I2C_SEND_RESTART_WRITE:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  003D                     ??_do_I2C_SEND_RESTART:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  003D                     ??_do_I2C_SEND_STOP:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  003D                     ??_do_I2C_SEND_ADR_READ:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  003D                     ??_do_I2C_RCEN:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  003D                     ??_do_I2C_DO_ACK:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  003D                     ??_do_I2C_DO_NACK_STOP:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  003D                     ??_do_I2C_DO_NACK_RESTART:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879  003D                     ??_do_I2C_DO_ADDRESS_NACK:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882  003D                     ??_do_I2C_RX:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885  003D                     ??_do_I2C_TX_EMPTY:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  003D                     ??_bcdHourIncr:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  003D                     ??_bcdHourDecr:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  003D                     ??_bcdMinuteIncr:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  003D                     ??_bcdMinuteDecr:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  003D                     ??i1_i2c_setDataCompleteCallback:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  003D                     ?_ADC_GetConversion:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  003D                     ?___lwdiv:	
  2907                           ; 2 bytes @ 0x0
  2908                           
  2909  003D                     ?___lwmod:	
  2910                           ; 2 bytes @ 0x0
  2911                           
  2912  003D                     mssp_waitForEvent@timeout:	
  2913                           ; 2 bytes @ 0x0
  2914                           
  2915  003D                     i2c_driver_TXData@d:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  003D                     bcdHourIncr@hr:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  003D                     bcdHourDecr@hr:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  003D                     bcdMinuteIncr@mn:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  003D                     bcdMinuteDecr@mn:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  003D                     i2c_setBuffer@bufferSize:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  003D                     setCallBack@cb:	
  2934                           ; 2 bytes @ 0x0
  2935                           
  2936  003D                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2937                           ; 2 bytes @ 0x0
  2938                           
  2939  003D                     TMR0_SetInterruptHandler@InterruptHandler:	
  2940                           ; 2 bytes @ 0x0
  2941                           
  2942  003D                     i2c_driver_setBusCollisionISR@handler:	
  2943                           ; 2 bytes @ 0x0
  2944                           
  2945  003D                     i2c_driver_setI2cISR@handler:	
  2946                           ; 2 bytes @ 0x0
  2947                           
  2948  003D                     ___lwdiv@divisor:	
  2949                           ; 2 bytes @ 0x0
  2950                           
  2951  003D                     ___lwmod@divisor:	
  2952                           ; 2 bytes @ 0x0
  2953                           
  2954                           
  2955                           ; 2 bytes @ 0x0
  2956  003D                     	ds	1
  2957  003E                     ??_do_I2C_SEND_ADR_WRITE:	
  2958  003E                     ??_do_I2C_TX:	
  2959                           ; 1 bytes @ 0x1
  2960                           
  2961  003E                     ?i1_returnStop:	
  2962                           ; 1 bytes @ 0x1
  2963                           
  2964  003E                     ?i1_returnReset:	
  2965                           ; 1 bytes @ 0x1
  2966                           
  2967  003E                     ?i1_wr1RegCompleteHandler:	
  2968                           ; 1 bytes @ 0x1
  2969                           
  2970  003E                     ?i1_rd1RegCompleteHandler:	
  2971                           ; 1 bytes @ 0x1
  2972                           
  2973  003E                     ?i1_rd2RegCompleteHandler:	
  2974                           ; 1 bytes @ 0x1
  2975                           
  2976  003E                     ?i1_wr2RegCompleteHandler:	
  2977                           ; 1 bytes @ 0x1
  2978                           
  2979  003E                     ?i1_rdBlkRegCompleteHandler:	
  2980                           ; 1 bytes @ 0x1
  2981                           
  2982  003E                     ?i1_i2c_restartWrite:	
  2983                           ; 1 bytes @ 0x1
  2984                           
  2985  003E                     i2c_close@ret:	
  2986                           ; 1 bytes @ 0x1
  2987                           
  2988  003E                     i1returnStop@p:	
  2989                           ; 1 bytes @ 0x1
  2990                           
  2991  003E                     i1returnReset@p:	
  2992                           ; 1 bytes @ 0x1
  2993                           
  2994  003E                     i1wr1RegCompleteHandler@p:	
  2995                           ; 1 bytes @ 0x1
  2996                           
  2997  003E                     i1rd1RegCompleteHandler@p:	
  2998                           ; 1 bytes @ 0x1
  2999                           
  3000  003E                     i1rd2RegCompleteHandler@p:	
  3001                           ; 1 bytes @ 0x1
  3002                           
  3003  003E                     i1wr2RegCompleteHandler@p:	
  3004                           ; 1 bytes @ 0x1
  3005                           
  3006  003E                     i1rdBlkRegCompleteHandler@p:	
  3007                           ; 1 bytes @ 0x1
  3008                           
  3009  003E                     i1i2c_restartWrite@p:	
  3010                           ; 1 bytes @ 0x1
  3011                           
  3012                           
  3013                           ; 1 bytes @ 0x1
  3014  003E                     	ds	1
  3015  003F                     ??_i2c_driver_setBusCollisionISR:	
  3016  003F                     ??_i2c_driver_setI2cISR:	
  3017                           ; 1 bytes @ 0x2
  3018                           
  3019  003F                     ??_PIN_MANAGER_Initialize:	
  3020                           ; 1 bytes @ 0x2
  3021                           
  3022  003F                     ??_TMR0_Initialize:	
  3023                           ; 1 bytes @ 0x2
  3024                           
  3025  003F                     ??_IOCBF4_SetInterruptHandler:	
  3026                           ; 1 bytes @ 0x2
  3027                           
  3028  003F                     ??_TMR0_SetInterruptHandler:	
  3029                           ; 1 bytes @ 0x2
  3030                           
  3031  003F                     ??_i2c_open:	
  3032                           ; 1 bytes @ 0x2
  3033                           
  3034  003F                     ??_i2c_setBuffer:	
  3035                           ; 1 bytes @ 0x2
  3036                           
  3037  003F                     ??_ADC_GetConversion:	
  3038                           ; 1 bytes @ 0x2
  3039                           
  3040  003F                     setCallBack@p:	
  3041                           ; 1 bytes @ 0x2
  3042                           
  3043  003F                     ___lwdiv@dividend:	
  3044                           ; 1 bytes @ 0x2
  3045                           
  3046  003F                     ___lwmod@dividend:	
  3047                           ; 2 bytes @ 0x2
  3048                           
  3049                           
  3050                           ; 2 bytes @ 0x2
  3051  003F                     	ds	1
  3052  0040                     ??_setCallBack:	
  3053  0040                     ??_SYSTEM_Initialize:	
  3054                           ; 1 bytes @ 0x3
  3055                           
  3056  0040                     i2c_open@address:	
  3057                           ; 1 bytes @ 0x3
  3058                           
  3059  0040                     i2c_setBuffer@buffer:	
  3060                           ; 1 bytes @ 0x3
  3061                           
  3062  0040                     ADC_GetConversion@channel:	
  3063                           ; 1 bytes @ 0x3
  3064                           
  3065                           
  3066                           ; 1 bytes @ 0x3
  3067  0040                     	ds	1
  3068  0041                     ??_i2c_ISR:	
  3069  0041                     ??___lwdiv:	
  3070                           ; 1 bytes @ 0x4
  3071                           
  3072  0041                     ??___lwmod:	
  3073                           ; 1 bytes @ 0x4
  3074                           
  3075  0041                     i2c_open@ret:	
  3076                           ; 1 bytes @ 0x4
  3077                           
  3078  0041                     setCallBack@idx:	
  3079                           ; 1 bytes @ 0x4
  3080                           
  3081                           
  3082                           ; 1 bytes @ 0x4
  3083  0041                     	ds	1
  3084  0042                     ?_i2c_setDataCompleteCallback:	
  3085  0042                     ?_i2c_setAddressNACKCallback:	
  3086                           ; 1 bytes @ 0x5
  3087                           
  3088  0042                     ___lwdiv@counter:	
  3089                           ; 1 bytes @ 0x5
  3090                           
  3091  0042                     ___lwmod@counter:	
  3092                           ; 1 bytes @ 0x5
  3093                           
  3094  0042                     i2c_setDataCompleteCallback@cb:	
  3095                           ; 1 bytes @ 0x5
  3096                           
  3097  0042                     i2c_setAddressNACKCallback@cb:	
  3098                           ; 2 bytes @ 0x5
  3099                           
  3100                           
  3101                           ; 2 bytes @ 0x5
  3102  0042                     	ds	1
  3103  0043                     ___lwdiv@quotient:	
  3104                           
  3105                           ; 2 bytes @ 0x6
  3106  0043                     	ds	1
  3107  0044                     ??_i2c_poller:	
  3108  0044                     ??_i2c_masterOperation:	
  3109                           ; 1 bytes @ 0x7
  3110                           
  3111  0044                     i2c_setDataCompleteCallback@p:	
  3112                           ; 1 bytes @ 0x7
  3113                           
  3114  0044                     i2c_setAddressNACKCallback@p:	
  3115                           ; 1 bytes @ 0x7
  3116                           
  3117                           
  3118                           ; 1 bytes @ 0x7
  3119  0044                     	ds	1
  3120  0045                     ??_i2c_setDataCompleteCallback:	
  3121  0045                     ??_i2c_setAddressNACKCallback:	
  3122                           ; 1 bytes @ 0x8
  3123                           
  3124  0045                     ?_intToBCD:	
  3125                           ; 1 bytes @ 0x8
  3126                           
  3127  0045                     i2c_masterOperation@read:	
  3128                           ; 2 bytes @ 0x8
  3129                           
  3130  0045                     intToBCD@binaryInput:	
  3131                           ; 1 bytes @ 0x8
  3132                           
  3133                           
  3134                           ; 2 bytes @ 0x8
  3135  0045                     	ds	1
  3136  0046                     ?_returnStop:	
  3137  0046                     ?_returnReset:	
  3138                           ; 1 bytes @ 0x9
  3139                           
  3140  0046                     ?_i2c_restartWrite:	
  3141                           ; 1 bytes @ 0x9
  3142                           
  3143  0046                     ?_wr1RegCompleteHandler:	
  3144                           ; 1 bytes @ 0x9
  3145                           
  3146  0046                     ?_rd1RegCompleteHandler:	
  3147                           ; 1 bytes @ 0x9
  3148                           
  3149  0046                     ?_rd2RegCompleteHandler:	
  3150                           ; 1 bytes @ 0x9
  3151                           
  3152  0046                     ?_wr2RegCompleteHandler:	
  3153                           ; 1 bytes @ 0x9
  3154                           
  3155  0046                     ?_rdBlkRegCompleteHandler:	
  3156                           ; 1 bytes @ 0x9
  3157                           
  3158  0046                     i2c_masterOperation@ret:	
  3159                           ; 1 bytes @ 0x9
  3160                           
  3161  0046                     returnStop@p:	
  3162                           ; 1 bytes @ 0x9
  3163                           
  3164  0046                     returnReset@p:	
  3165                           ; 1 bytes @ 0x9
  3166                           
  3167  0046                     wr1RegCompleteHandler@p:	
  3168                           ; 1 bytes @ 0x9
  3169                           
  3170  0046                     rd1RegCompleteHandler@p:	
  3171                           ; 1 bytes @ 0x9
  3172                           
  3173  0046                     rd2RegCompleteHandler@p:	
  3174                           ; 1 bytes @ 0x9
  3175                           
  3176  0046                     wr2RegCompleteHandler@p:	
  3177                           ; 1 bytes @ 0x9
  3178                           
  3179  0046                     rdBlkRegCompleteHandler@p:	
  3180                           ; 1 bytes @ 0x9
  3181                           
  3182  0046                     i2c_restartWrite@p:	
  3183                           ; 1 bytes @ 0x9
  3184                           
  3185                           
  3186                           ; 1 bytes @ 0x9
  3187  0046                     	ds	1
  3188  0047                     ??_returnStop:	
  3189  0047                     ??_returnReset:	
  3190                           ; 1 bytes @ 0xA
  3191                           
  3192  0047                     ??_i2c_restartWrite:	
  3193                           ; 1 bytes @ 0xA
  3194                           
  3195  0047                     ??_i2c_masterWrite:	
  3196                           ; 1 bytes @ 0xA
  3197                           
  3198  0047                     ??_wr1RegCompleteHandler:	
  3199                           ; 1 bytes @ 0xA
  3200                           
  3201  0047                     ?_i2c_writeNBytes:	
  3202                           ; 1 bytes @ 0xA
  3203                           
  3204  0047                     ??_rd1RegCompleteHandler:	
  3205                           ; 1 bytes @ 0xA
  3206                           
  3207  0047                     ??_rd2RegCompleteHandler:	
  3208                           ; 1 bytes @ 0xA
  3209                           
  3210  0047                     ??_wr2RegCompleteHandler:	
  3211                           ; 1 bytes @ 0xA
  3212                           
  3213  0047                     ??_rdBlkRegCompleteHandler:	
  3214                           ; 1 bytes @ 0xA
  3215                           
  3216  0047                     ?_i2c_readDataBlock:	
  3217                           ; 1 bytes @ 0xA
  3218                           
  3219  0047                     ??_intToBCD:	
  3220                           ; 1 bytes @ 0xA
  3221                           
  3222  0047                     i2c_writeNBytes@data:	
  3223                           ; 1 bytes @ 0xA
  3224                           
  3225  0047                     i2c_readDataBlock@reg:	
  3226                           ; 1 bytes @ 0xA
  3227                           
  3228                           
  3229                           ; 1 bytes @ 0xA
  3230  0047                     	ds	1
  3231  0048                     i2c_readDataBlock@data:	
  3232  0048                     i2c_writeNBytes@len:	
  3233                           ; 1 bytes @ 0xB
  3234                           
  3235                           
  3236                           ; 2 bytes @ 0xB
  3237  0048                     	ds	1
  3238  0049                     i2c_readDataBlock@len:	
  3239                           
  3240                           ; 2 bytes @ 0xC
  3241  0049                     	ds	1
  3242  004A                     ??_i2c_writeNBytes:	
  3243  004A                     i2c_writeNBytes@address:	
  3244                           ; 1 bytes @ 0xD
  3245                           
  3246  004A                     intToBCD@bcdResult:	
  3247                           ; 1 bytes @ 0xD
  3248                           
  3249                           
  3250                           ; 2 bytes @ 0xD
  3251  004A                     	ds	1
  3252  004B                     ??_i2c_readDataBlock:	
  3253  004B                     ?_updateRTC:	
  3254                           ; 1 bytes @ 0xE
  3255                           
  3256  004B                     updateRTC@bcdMinute:	
  3257                           ; 1 bytes @ 0xE
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0xE
  3261  004B                     	ds	1
  3262  004C                     ??_updateRTC:	
  3263  004C                     i2c_readDataBlock@address:	
  3264                           ; 1 bytes @ 0xF
  3265                           
  3266  004C                     intToBCD@shift:	
  3267                           ; 1 bytes @ 0xF
  3268                           
  3269                           
  3270                           ; 2 bytes @ 0xF
  3271  004C                     	ds	1
  3272  004D                     updateRTC@bcdHour:	
  3273  004D                     i2c_readDataBlock@d:	
  3274                           ; 1 bytes @ 0x10
  3275                           
  3276                           
  3277                           ; 3 bytes @ 0x10
  3278  004D                     	ds	3
  3279  0050                     ??_initRTC:	
  3280                           
  3281                           ; 1 bytes @ 0x13
  3282  0050                     	ds	2
  3283  0052                     ??_main:	
  3284                           
  3285                           ; 1 bytes @ 0x15
  3286  0052                     	ds	5
  3287                           
  3288                           	psect	maintext
  3289  0060                     __pmaintext:	
  3290 ;;
  3291 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3292 ;;
  3293 ;; *************** function _main *****************
  3294 ;; Defined at:
  3295 ;;		line 162 in file "main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : B1F/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;Total ram usage:        5 bytes
  3314 ;; Hardware stack levels required when called:   16
  3315 ;; This function calls:
  3316 ;;		_ADC_GetConversion
  3317 ;;		_IOCBF4_SetInterruptHandler
  3318 ;;		_SYSTEM_Initialize
  3319 ;;		_TMR0_SetInterruptHandler
  3320 ;;		_bcdHourDecr
  3321 ;;		_bcdHourIncr
  3322 ;;		_bcdMinuteDecr
  3323 ;;		_bcdMinuteIncr
  3324 ;;		_i2c_readDataBlock
  3325 ;;		_initRTC
  3326 ;;		_intToBCD
  3327 ;;		_updateRTC
  3328 ;; This function is called by:
  3329 ;;		Startup code after reset
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _main
  3335  0060                     _main:	
  3336  0060                     l5974:	
  3337                           ;incstack = 0
  3338                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3339                           
  3340                           
  3341                           ;main.c: 165:     SYSTEM_Initialize();
  3342  0060  318E  2644  3180   	fcall	_SYSTEM_Initialize
  3343  0063                     l5976:	
  3344  0063  0022               	movlb	2	; select bank2
  3345  0064  1090               	bcf	16,1	;volatile
  3346  0065                     l5978:	
  3347  0065  108E               	bcf	14,1	;volatile
  3348  0066                     l5980:	
  3349  0066  120C               	bcf	12,4	;volatile
  3350  0067                     l5982:	
  3351  0067  118C               	bcf	12,3	;volatile
  3352  0068                     l5984:	
  3353                           
  3354                           ;main.c: 173:     mode = MODE_NORMAL;
  3355  0068  0020               	movlb	0	; select bank0
  3356  0069  01B1               	clrf	_mode
  3357  006A                     l5986:	
  3358                           
  3359                           ;main.c: 175:     IOCBF4_SetInterruptHandler(&secondISR);
  3360  006A  3000               	movlw	low _secondISR
  3361  006B  00BD               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3362  006C  3007               	movlw	high _secondISR
  3363  006D  00BE               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3364  006E  318C  246E  3180   	fcall	_IOCBF4_SetInterruptHandler
  3365  0071                     l5988:	
  3366                           
  3367                           ;main.c: 176:     TMR0_SetInterruptHandler(&displayRefreshISR);
  3368  0071  3082               	movlw	low _displayRefreshISR
  3369  0072  0020               	movlb	0	; select bank0
  3370  0073  00BD               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3371  0074  3002               	movlw	high _displayRefreshISR
  3372  0075  00BE               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3373  0076  318C  2474  3180   	fcall	_TMR0_SetInterruptHandler
  3374  0079                     l5990:	
  3375                           
  3376                           ;main.c: 181:     (INTCONbits.GIE = 1);
  3377  0079  178B               	bsf	11,7	;volatile
  3378  007A                     l5992:	
  3379                           
  3380                           ;main.c: 184:     (INTCONbits.PEIE = 1);
  3381  007A  170B               	bsf	11,6	;volatile
  3382  007B                     l5994:	
  3383                           
  3384                           ;main.c: 192:     initRTC();
  3385  007B  3184  24D7  3180   	fcall	_initRTC
  3386  007E                     l855:	
  3387                           ;main.c: 194:     while (1)
  3388                           
  3389  007E  0064               	clrwdt	;# 
  3390  007F                     l5996:	
  3391                           
  3392                           ;main.c: 200:         if(PORTBbits.RB0 == 0){
  3393  007F  0020               	movlb	0	; select bank0
  3394  0080  180D               	btfsc	13,0	;volatile
  3395  0081  2883               	goto	u3681
  3396  0082  2884               	goto	u3680
  3397  0083                     u3681:	
  3398  0083  2887               	goto	l856
  3399  0084                     u3680:	
  3400  0084                     l5998:	
  3401                           
  3402                           ;main.c: 201:             flag_button_press_count[0] = 1;
  3403  0084  01A4               	clrf	_flag_button_press_count
  3404  0085  0AA4               	incf	_flag_button_press_count,f
  3405                           
  3406                           ;main.c: 202:         } else if(PORTBbits.RB1 == 0){
  3407  0086  295D               	goto	l6094
  3408  0087                     l856:	
  3409  0087  188D               	btfsc	13,1	;volatile
  3410  0088  288A               	goto	u3691
  3411  0089  288B               	goto	u3690
  3412  008A                     u3691:	
  3413  008A  288E               	goto	l858
  3414  008B                     u3690:	
  3415  008B                     l6000:	
  3416                           
  3417                           ;main.c: 203:             flag_button_press_count[1] = 1;
  3418  008B  01A5               	clrf	_flag_button_press_count+1
  3419  008C  0AA5               	incf	_flag_button_press_count+1,f
  3420                           
  3421                           ;main.c: 204:         } else if(PORTBbits.RB2 == 0){
  3422  008D  295D               	goto	l6094
  3423  008E                     l858:	
  3424  008E  190D               	btfsc	13,2	;volatile
  3425  008F  2891               	goto	u3701
  3426  0090  2892               	goto	u3700
  3427  0091                     u3701:	
  3428  0091  2895               	goto	l860
  3429  0092                     u3700:	
  3430  0092                     l6002:	
  3431                           
  3432                           ;main.c: 205:             flag_button_press_count[2] = 1;
  3433  0092  01A6               	clrf	_flag_button_press_count+2
  3434  0093  0AA6               	incf	_flag_button_press_count+2,f
  3435                           
  3436                           ;main.c: 206:         } else if(PORTBbits.RB3 == 0){
  3437  0094  295D               	goto	l6094
  3438  0095                     l860:	
  3439  0095  198D               	btfsc	13,3	;volatile
  3440  0096  2898               	goto	u3711
  3441  0097  2899               	goto	u3710
  3442  0098                     u3711:	
  3443  0098  289C               	goto	l6006
  3444  0099                     u3710:	
  3445  0099                     l6004:	
  3446                           
  3447                           ;main.c: 207:             flag_button_press_count[3] = 1;
  3448  0099  01A7               	clrf	_flag_button_press_count+3
  3449  009A  0AA7               	incf	_flag_button_press_count+3,f
  3450                           
  3451                           ;main.c: 208:         } else {
  3452  009B  295D               	goto	l6094
  3453  009C                     l6006:	
  3454                           
  3455                           ;main.c: 209:             if(flag_button_press_count[0] == 1){
  3456  009C  0324               	decf	_flag_button_press_count,w
  3457  009D  1D03               	btfss	3,2
  3458  009E  28A0               	goto	u3721
  3459  009F  28A1               	goto	u3720
  3460  00A0                     u3721:	
  3461  00A0  28CF               	goto	l6026
  3462  00A1                     u3720:	
  3463  00A1                     l6008:	
  3464                           
  3465                           ;main.c: 210:                 if(button_press_count[0] > 5 && button_press_count[0] < 10
      +                          0){
  3466  00A1  3006               	movlw	6
  3467  00A2  0220               	subwf	_button_press_count,w
  3468  00A3  1C03               	skipc
  3469  00A4  28A6               	goto	u3731
  3470  00A5  28A7               	goto	u3730
  3471  00A6                     u3731:	
  3472  00A6  28CD               	goto	l865
  3473  00A7                     u3730:	
  3474  00A7                     l6010:	
  3475  00A7  3064               	movlw	100
  3476  00A8  0220               	subwf	_button_press_count,w
  3477  00A9  1803               	skipnc
  3478  00AA  28AC               	goto	u3741
  3479  00AB  28AD               	goto	u3740
  3480  00AC                     u3741:	
  3481  00AC  28CD               	goto	l865
  3482  00AD                     u3740:	
  3483  00AD                     l6012:	
  3484                           
  3485                           ;main.c: 211:                     if(mode == MODE_NORMAL){
  3486  00AD  0831               	movf	_mode,w
  3487  00AE  1D03               	btfss	3,2
  3488  00AF  28B1               	goto	u3751
  3489  00B0  28B2               	goto	u3750
  3490  00B1                     u3751:	
  3491  00B1  28BD               	goto	l6018
  3492  00B2                     u3750:	
  3493  00B2                     l6014:	
  3494                           
  3495                           ;main.c: 212:                         mode = MODE_SET_HOUR;
  3496  00B2  3002               	movlw	2
  3497  00B3  00D2               	movwf	??_main
  3498  00B4  0852               	movf	??_main,w
  3499  00B5  00B1               	movwf	_mode
  3500                           
  3501                           ;main.c: 213:                         mode_timeout_count = 8;
  3502  00B6  3008               	movlw	8
  3503  00B7  00D2               	movwf	??_main
  3504  00B8  0852               	movf	??_main,w
  3505  00B9  00B0               	movwf	_mode_timeout_count
  3506  00BA                     l6016:	
  3507                           
  3508                           ;main.c: 214:                         flag_time_display_update = 1;
  3509  00BA  01B3               	clrf	_flag_time_display_update
  3510  00BB  0AB3               	incf	_flag_time_display_update,f
  3511                           
  3512                           ;main.c: 215:                     } else if(mode == MODE_SET_HOUR){
  3513  00BC  28CD               	goto	l865
  3514  00BD                     l6018:	
  3515  00BD  3002               	movlw	2
  3516  00BE  0631               	xorwf	_mode,w
  3517  00BF  1D03               	btfss	3,2
  3518  00C0  28C2               	goto	u3761
  3519  00C1  28C3               	goto	u3760
  3520  00C2                     u3761:	
  3521  00C2  28CC               	goto	l6024
  3522  00C3                     u3760:	
  3523  00C3                     l6020:	
  3524                           
  3525                           ;main.c: 216:                         mode = MODE_SET_MINUTE;
  3526  00C3  3003               	movlw	3
  3527  00C4  00D2               	movwf	??_main
  3528  00C5  0852               	movf	??_main,w
  3529  00C6  00B1               	movwf	_mode
  3530                           
  3531                           ;main.c: 217:                         mode_timeout_count = 8;
  3532  00C7  3008               	movlw	8
  3533  00C8  00D2               	movwf	??_main
  3534  00C9  0852               	movf	??_main,w
  3535  00CA  00B0               	movwf	_mode_timeout_count
  3536  00CB  28BA               	goto	l6016
  3537  00CC                     l6024:	
  3538                           
  3539                           ;main.c: 220:                         mode = MODE_NORMAL;
  3540  00CC  01B1               	clrf	_mode
  3541  00CD                     l865:	
  3542                           ;main.c: 223:                 }
  3543                           
  3544                           
  3545                           ;main.c: 224:                 button_press_count[0] = 0;
  3546  00CD  01A0               	clrf	_button_press_count
  3547                           
  3548                           ;main.c: 225:                 flag_button_press_count[0] = 0;
  3549  00CE  01A4               	clrf	_flag_button_press_count
  3550  00CF                     l6026:	
  3551                           
  3552                           ;main.c: 228:             if(flag_button_press_count[1] == 1){
  3553  00CF  0325               	decf	_flag_button_press_count+1,w
  3554  00D0  1D03               	btfss	3,2
  3555  00D1  28D3               	goto	u3771
  3556  00D2  28D4               	goto	u3770
  3557  00D3                     u3771:	
  3558  00D3  2906               	goto	l6052
  3559  00D4                     u3770:	
  3560  00D4                     l6028:	
  3561                           
  3562                           ;main.c: 229:                 if(button_press_count[1] > 5 && button_press_count[1] < 10
      +                          0){
  3563  00D4  3006               	movlw	6
  3564  00D5  0221               	subwf	_button_press_count+1,w
  3565  00D6  1C03               	skipc
  3566  00D7  28D9               	goto	u3781
  3567  00D8  28DA               	goto	u3780
  3568  00D9                     u3781:	
  3569  00D9  2904               	goto	l6048
  3570  00DA                     u3780:	
  3571  00DA                     l6030:	
  3572  00DA  3064               	movlw	100
  3573  00DB  0221               	subwf	_button_press_count+1,w
  3574  00DC  1803               	skipnc
  3575  00DD  28DF               	goto	u3791
  3576  00DE  28E0               	goto	u3790
  3577  00DF                     u3791:	
  3578  00DF  2904               	goto	l6048
  3579  00E0                     u3790:	
  3580  00E0                     l6032:	
  3581                           
  3582                           ;main.c: 231:                     if(mode == MODE_SET_HOUR){
  3583  00E0  3002               	movlw	2
  3584  00E1  0631               	xorwf	_mode,w
  3585  00E2  1D03               	btfss	3,2
  3586  00E3  28E5               	goto	u3801
  3587  00E4  28E6               	goto	u3800
  3588  00E5                     u3801:	
  3589  00E5  28F5               	goto	l6040
  3590  00E6                     u3800:	
  3591  00E6                     l6034:	
  3592                           
  3593                           ;main.c: 232:                         rtcData[2] = bcdHourIncr(rtcData[2]);
  3594  00E6  0836               	movf	_rtcData+2,w
  3595  00E7  318F  2730  3180   	fcall	_bcdHourIncr
  3596  00EA  0020               	movlb	0	; select bank0
  3597  00EB  00D2               	movwf	??_main
  3598  00EC  0852               	movf	??_main,w
  3599  00ED  00B6               	movwf	_rtcData+2
  3600  00EE                     l6036:	
  3601                           
  3602                           ;main.c: 233:                         mode_timeout_count = 8;
  3603  00EE  3008               	movlw	8
  3604  00EF  00D2               	movwf	??_main
  3605  00F0  0852               	movf	??_main,w
  3606  00F1  00B0               	movwf	_mode_timeout_count
  3607  00F2                     l6038:	
  3608                           
  3609                           ;main.c: 234:                         flag_time_display_update = 1;
  3610  00F2  01B3               	clrf	_flag_time_display_update
  3611  00F3  0AB3               	incf	_flag_time_display_update,f
  3612                           
  3613                           ;main.c: 235:                     } else if(mode == MODE_SET_MINUTE){
  3614  00F4  2904               	goto	l6048
  3615  00F5                     l6040:	
  3616  00F5  3003               	movlw	3
  3617  00F6  0631               	xorwf	_mode,w
  3618  00F7  1D03               	btfss	3,2
  3619  00F8  28FA               	goto	u3811
  3620  00F9  28FB               	goto	u3810
  3621  00FA                     u3811:	
  3622  00FA  2904               	goto	l6048
  3623  00FB                     u3810:	
  3624  00FB                     l6042:	
  3625                           
  3626                           ;main.c: 236:                         rtcData[1] = bcdMinuteIncr(rtcData[1]);
  3627  00FB  0835               	movf	_rtcData+1,w
  3628  00FC  3185  25FE  3180   	fcall	_bcdMinuteIncr
  3629  00FF  0020               	movlb	0	; select bank0
  3630  0100  00D2               	movwf	??_main
  3631  0101  0852               	movf	??_main,w
  3632  0102  00B5               	movwf	_rtcData+1
  3633  0103  28EE               	goto	l6036
  3634  0104                     l6048:	
  3635                           
  3636                           ;main.c: 242:                 button_press_count[1] = 0;
  3637  0104  01A1               	clrf	_button_press_count+1
  3638  0105                     l6050:	
  3639                           
  3640                           ;main.c: 243:                 flag_button_press_count[1] = 0;
  3641  0105  01A5               	clrf	_flag_button_press_count+1
  3642  0106                     l6052:	
  3643                           
  3644                           ;main.c: 246:             if(flag_button_press_count[2] == 1){
  3645  0106  0326               	decf	_flag_button_press_count+2,w
  3646  0107  1D03               	btfss	3,2
  3647  0108  290A               	goto	u3821
  3648  0109  290B               	goto	u3820
  3649  010A                     u3821:	
  3650  010A  293D               	goto	l6078
  3651  010B                     u3820:	
  3652  010B                     l6054:	
  3653                           
  3654                           ;main.c: 247:                 if(button_press_count[2] > 5 && button_press_count[2] < 10
      +                          0){
  3655  010B  3006               	movlw	6
  3656  010C  0222               	subwf	_button_press_count+2,w
  3657  010D  1C03               	skipc
  3658  010E  2910               	goto	u3831
  3659  010F  2911               	goto	u3830
  3660  0110                     u3831:	
  3661  0110  293B               	goto	l6074
  3662  0111                     u3830:	
  3663  0111                     l6056:	
  3664  0111  3064               	movlw	100
  3665  0112  0222               	subwf	_button_press_count+2,w
  3666  0113  1803               	skipnc
  3667  0114  2916               	goto	u3841
  3668  0115  2917               	goto	u3840
  3669  0116                     u3841:	
  3670  0116  293B               	goto	l6074
  3671  0117                     u3840:	
  3672  0117                     l6058:	
  3673                           
  3674                           ;main.c: 249:                     if(mode == MODE_SET_HOUR){
  3675  0117  3002               	movlw	2
  3676  0118  0631               	xorwf	_mode,w
  3677  0119  1D03               	btfss	3,2
  3678  011A  291C               	goto	u3851
  3679  011B  291D               	goto	u3850
  3680  011C                     u3851:	
  3681  011C  292C               	goto	l6066
  3682  011D                     u3850:	
  3683  011D                     l6060:	
  3684                           
  3685                           ;main.c: 250:                         rtcData[2] = bcdHourDecr(rtcData[2]);
  3686  011D  0836               	movf	_rtcData+2,w
  3687  011E  318F  2714  3180   	fcall	_bcdHourDecr
  3688  0121  0020               	movlb	0	; select bank0
  3689  0122  00D2               	movwf	??_main
  3690  0123  0852               	movf	??_main,w
  3691  0124  00B6               	movwf	_rtcData+2
  3692  0125                     l6062:	
  3693                           
  3694                           ;main.c: 251:                         mode_timeout_count = 8;
  3695  0125  3008               	movlw	8
  3696  0126  00D2               	movwf	??_main
  3697  0127  0852               	movf	??_main,w
  3698  0128  00B0               	movwf	_mode_timeout_count
  3699  0129                     l6064:	
  3700                           
  3701                           ;main.c: 252:                         flag_time_display_update = 1;
  3702  0129  01B3               	clrf	_flag_time_display_update
  3703  012A  0AB3               	incf	_flag_time_display_update,f
  3704                           
  3705                           ;main.c: 253:                     } else if(mode == MODE_SET_MINUTE){
  3706  012B  293B               	goto	l6074
  3707  012C                     l6066:	
  3708  012C  3003               	movlw	3
  3709  012D  0631               	xorwf	_mode,w
  3710  012E  1D03               	btfss	3,2
  3711  012F  2931               	goto	u3861
  3712  0130  2932               	goto	u3860
  3713  0131                     u3861:	
  3714  0131  293B               	goto	l6074
  3715  0132                     u3860:	
  3716  0132                     l6068:	
  3717                           
  3718                           ;main.c: 254:                         rtcData[1] = bcdMinuteDecr(rtcData[1]);
  3719  0132  0835               	movf	_rtcData+1,w
  3720  0133  3186  2667  3180   	fcall	_bcdMinuteDecr
  3721  0136  0020               	movlb	0	; select bank0
  3722  0137  00D2               	movwf	??_main
  3723  0138  0852               	movf	??_main,w
  3724  0139  00B5               	movwf	_rtcData+1
  3725  013A  2925               	goto	l6062
  3726  013B                     l6074:	
  3727                           
  3728                           ;main.c: 259:                 button_press_count[2] = 0;
  3729  013B  01A2               	clrf	_button_press_count+2
  3730  013C                     l6076:	
  3731                           
  3732                           ;main.c: 260:                 flag_button_press_count[2] = 0;
  3733  013C  01A6               	clrf	_flag_button_press_count+2
  3734  013D                     l6078:	
  3735                           
  3736                           ;main.c: 263:             if(flag_button_press_count[3] == 1){
  3737  013D  0327               	decf	_flag_button_press_count+3,w
  3738  013E  1D03               	btfss	3,2
  3739  013F  2941               	goto	u3871
  3740  0140  2942               	goto	u3870
  3741  0141                     u3871:	
  3742  0141  295D               	goto	l859
  3743  0142                     u3870:	
  3744  0142                     l6080:	
  3745                           
  3746                           ;main.c: 264:                 if(button_press_count[3] > 5 && button_press_count[3] < 10
      +                          0){
  3747  0142  3006               	movlw	6
  3748  0143  0223               	subwf	_button_press_count+3,w
  3749  0144  1C03               	skipc
  3750  0145  2947               	goto	u3881
  3751  0146  2948               	goto	u3880
  3752  0147                     u3881:	
  3753  0147  295A               	goto	l6090
  3754  0148                     u3880:	
  3755  0148                     l6082:	
  3756  0148  3064               	movlw	100
  3757  0149  0223               	subwf	_button_press_count+3,w
  3758  014A  1803               	skipnc
  3759  014B  294D               	goto	u3891
  3760  014C  294E               	goto	u3890
  3761  014D                     u3891:	
  3762  014D  295A               	goto	l6090
  3763  014E                     u3890:	
  3764  014E                     l6084:	
  3765                           
  3766                           ;main.c: 265:                     updateRTC(rtcData[2],rtcData[1]);
  3767  014E  0835               	movf	_rtcData+1,w
  3768  014F  00D2               	movwf	??_main
  3769  0150  0852               	movf	??_main,w
  3770  0151  00CB               	movwf	updateRTC@bcdMinute
  3771  0152  0836               	movf	_rtcData+2,w
  3772  0153  318E  26F9  3180   	fcall	_updateRTC
  3773  0156                     l6086:	
  3774                           
  3775                           ;main.c: 267:                     mode = MODE_NORMAL;
  3776  0156  0020               	movlb	0	; select bank0
  3777  0157  01B1               	clrf	_mode
  3778  0158                     l6088:	
  3779                           
  3780                           ;main.c: 268:                     flag_time_display_update = 1;
  3781  0158  01B3               	clrf	_flag_time_display_update
  3782  0159  0AB3               	incf	_flag_time_display_update,f
  3783  015A                     l6090:	
  3784                           
  3785                           ;main.c: 270:                 button_press_count[3] = 0;
  3786  015A  01A3               	clrf	_button_press_count+3
  3787  015B                     l6092:	
  3788                           
  3789                           ;main.c: 271:                 flag_button_press_count[3] = 0;
  3790  015B  01A7               	clrf	_flag_button_press_count+3
  3791  015C  295D               	goto	l6094
  3792  015D                     l859:	
  3793  015D                     l6094:	
  3794                           
  3795                           ;main.c: 275:         if(mode == MODE_NORMAL){
  3796  015D  0831               	movf	_mode,w
  3797  015E  1D03               	btfss	3,2
  3798  015F  2961               	goto	u3901
  3799  0160  2962               	goto	u3900
  3800  0161                     u3901:	
  3801  0161  29C2               	goto	l6116
  3802  0162                     u3900:	
  3803  0162                     l6096:	
  3804                           
  3805                           ;main.c: 276:             if(flag_time_display_update == 1){
  3806  0162  0333               	decf	_flag_time_display_update,w
  3807  0163  1D03               	btfss	3,2
  3808  0164  2966               	goto	u3911
  3809  0165  2967               	goto	u3910
  3810  0166                     u3911:	
  3811  0166  287E               	goto	l855
  3812  0167                     u3910:	
  3813  0167                     l6098:	
  3814                           
  3815                           ;main.c: 277:                 i2c_readDataBlock(0x68,0x00,rtcData,sizeof(rtcData));
  3816  0167  01C7               	clrf	i2c_readDataBlock@reg
  3817  0168  3034               	movlw	(low (_rtcData| 0))& (0+255)
  3818  0169  00D2               	movwf	??_main
  3819  016A  0852               	movf	??_main,w
  3820  016B  00C8               	movwf	i2c_readDataBlock@data
  3821  016C  3009               	movlw	9
  3822  016D  00C9               	movwf	i2c_readDataBlock@len
  3823  016E  3000               	movlw	0
  3824  016F  00CA               	movwf	i2c_readDataBlock@len+1
  3825  0170  3068               	movlw	104
  3826  0171  3185  2515  3180   	fcall	_i2c_readDataBlock
  3827  0174                     l6100:	
  3828                           
  3829                           ;main.c: 279:                 displayBuff[0] = displayNum[((rtcData[2] >> 4) & 0x03)];
  3830  0174  0020               	movlb	0	; select bank0
  3831  0175  0836               	movf	_rtcData+2,w
  3832  0176  00D2               	movwf	??_main
  3833  0177  3004               	movlw	4
  3834  0178                     u3925:	
  3835  0178  36D2               	lsrf	??_main,f
  3836  0179  0B89               	decfsz	9,f
  3837  017A  2978               	goto	u3925
  3838  017B  0852               	movf	??_main,w
  3839  017C  3903               	andlw	3
  3840  017D  3E20               	addlw	low (_displayNum| (0+32768))
  3841  017E  0084               	movwf	4
  3842  017F  3090               	movlw	high (_displayNum| (0+32768))
  3843  0180  1803               	skipnc
  3844  0181  3E01               	addlw	1
  3845  0182  0085               	movwf	5
  3846  0183  0800               	movf	0,w	;code access
  3847  0184  00D3               	movwf	??_main+1
  3848  0185  0853               	movf	??_main+1,w
  3849  0186  00A8               	movwf	_displayBuff
  3850  0187                     l6102:	
  3851                           
  3852                           ;main.c: 280:                 displayBuff[1] = displayNum[(rtcData[2]& 0x0F)];
  3853  0187  0836               	movf	_rtcData+2,w
  3854  0188  390F               	andlw	15
  3855  0189  3E20               	addlw	low (_displayNum| (0+32768))
  3856  018A  0084               	movwf	4
  3857  018B  3090               	movlw	high (_displayNum| (0+32768))
  3858  018C  1803               	skipnc
  3859  018D  3E01               	addlw	1
  3860  018E  0085               	movwf	5
  3861  018F  0800               	movf	0,w	;code access
  3862  0190  00D2               	movwf	??_main
  3863  0191  0852               	movf	??_main,w
  3864  0192  00A9               	movwf	_displayBuff+1
  3865  0193                     l6104:	
  3866                           
  3867                           ;main.c: 281:                 displayBuff[2] = displayNum[((rtcData[1] >> 4) & 0x0F)];
  3868  0193  0835               	movf	_rtcData+1,w
  3869  0194  00D2               	movwf	??_main
  3870  0195  3004               	movlw	4
  3871  0196                     u3935:	
  3872  0196  36D2               	lsrf	??_main,f
  3873  0197  0B89               	decfsz	9,f
  3874  0198  2996               	goto	u3935
  3875  0199  0852               	movf	??_main,w
  3876  019A  390F               	andlw	15
  3877  019B  3E20               	addlw	low (_displayNum| (0+32768))
  3878  019C  0084               	movwf	4
  3879  019D  3090               	movlw	high (_displayNum| (0+32768))
  3880  019E  1803               	skipnc
  3881  019F  3E01               	addlw	1
  3882  01A0  0085               	movwf	5
  3883  01A1  0800               	movf	0,w	;code access
  3884  01A2  00D3               	movwf	??_main+1
  3885  01A3  0853               	movf	??_main+1,w
  3886  01A4  00AA               	movwf	_displayBuff+2
  3887  01A5                     l6106:	
  3888                           
  3889                           ;main.c: 282:                 displayBuff[3] = displayNum[(rtcData[1]& 0x0F)];
  3890  01A5  0835               	movf	_rtcData+1,w
  3891  01A6  390F               	andlw	15
  3892  01A7  3E20               	addlw	low (_displayNum| (0+32768))
  3893  01A8  0084               	movwf	4
  3894  01A9  3090               	movlw	high (_displayNum| (0+32768))
  3895  01AA  1803               	skipnc
  3896  01AB  3E01               	addlw	1
  3897  01AC  0085               	movwf	5
  3898  01AD  0800               	movf	0,w	;code access
  3899  01AE  00D2               	movwf	??_main
  3900  01AF  0852               	movf	??_main,w
  3901  01B0  00AB               	movwf	_displayBuff+3
  3902  01B1                     l6108:	
  3903                           
  3904                           ;main.c: 284:                 flag_time_display_update = 0;
  3905  01B1  01B3               	clrf	_flag_time_display_update
  3906  01B2                     l6110:	
  3907                           
  3908                           ;main.c: 286:                 if((rtcData[0]& 0x0F) == 0x07){
  3909  01B2  300F               	movlw	15
  3910  01B3  0534               	andwf	_rtcData,w
  3911  01B4  00D2               	movwf	??_main
  3912  01B5  3007               	movlw	7
  3913  01B6  0652               	xorwf	??_main,w
  3914  01B7  1D03               	btfss	3,2
  3915  01B8  29BA               	goto	u3941
  3916  01B9  29BB               	goto	u3940
  3917  01BA                     u3941:	
  3918  01BA  2A7F               	goto	l885
  3919  01BB                     u3940:	
  3920  01BB                     l6112:	
  3921                           
  3922                           ;main.c: 287:                     mode = MODE_TEMPERATURE;
  3923  01BB  01B1               	clrf	_mode
  3924  01BC  0AB1               	incf	_mode,f
  3925  01BD                     l6114:	
  3926                           
  3927                           ;main.c: 288:                     mode_timeout_count = 3;
  3928  01BD  3003               	movlw	3
  3929  01BE  00D2               	movwf	??_main
  3930  01BF  0852               	movf	??_main,w
  3931  01C0  00B0               	movwf	_mode_timeout_count
  3932  01C1  287E               	goto	l855
  3933  01C2                     l6116:	
  3934  01C2  0331               	decf	_mode,w
  3935  01C3  1D03               	btfss	3,2
  3936  01C4  29C6               	goto	u3951
  3937  01C5  29C7               	goto	u3950
  3938  01C6                     u3951:	
  3939  01C6  2A26               	goto	l6132
  3940  01C7                     u3950:	
  3941  01C7                     l6118:	
  3942                           
  3943                           ;main.c: 292:             if(flag_time_display_update == 1){
  3944  01C7  0333               	decf	_flag_time_display_update,w
  3945  01C8  1D03               	btfss	3,2
  3946  01C9  29CB               	goto	u3961
  3947  01CA  29CC               	goto	u3960
  3948  01CB                     u3961:	
  3949  01CB  2A7F               	goto	l885
  3950  01CC                     u3960:	
  3951  01CC                     l888:	
  3952                           ;main.c: 294:                 do { LATAbits.LATA7 = 0; } while(0);
  3953                           
  3954  01CC  0022               	movlb	2	; select bank2
  3955  01CD  138C               	bcf	12,7	;volatile
  3956  01CE                     l6120:	
  3957                           
  3958                           ;main.c: 296:                 bcd_temp = intToBCD(ADC_GetConversion(channel_AN13));
  3959  01CE  300D               	movlw	13
  3960  01CF  3187  27DC  3180   	fcall	_ADC_GetConversion
  3961  01D2  0020               	movlb	0	; select bank0
  3962  01D3  083E               	movf	?_ADC_GetConversion+1,w
  3963  01D4  00C6               	movwf	intToBCD@binaryInput+1
  3964  01D5  083D               	movf	?_ADC_GetConversion,w
  3965  01D6  00C5               	movwf	intToBCD@binaryInput
  3966  01D7  3184  2490  3180   	fcall	_intToBCD
  3967  01DA  0020               	movlb	0	; select bank0
  3968  01DB  0846               	movf	?_intToBCD+1,w
  3969  01DC  00AD               	movwf	_bcd_temp+1
  3970  01DD  0845               	movf	?_intToBCD,w
  3971  01DE  00AC               	movwf	_bcd_temp
  3972  01DF                     l6122:	
  3973                           
  3974                           ;main.c: 298:                 displayBuff[0] = displayNum[((bcd_temp >> 8) & 0x0F)];
  3975  01DF  082D               	movf	_bcd_temp+1,w
  3976  01E0  00D3               	movwf	??_main+1
  3977  01E1  082C               	movf	_bcd_temp,w
  3978  01E2  00D2               	movwf	??_main
  3979  01E3  0853               	movf	??_main+1,w
  3980  01E4  00D2               	movwf	??_main
  3981  01E5  01D3               	clrf	??_main+1
  3982  01E6  300F               	movlw	15
  3983  01E7  0552               	andwf	??_main,w
  3984  01E8  00D4               	movwf	??_main+2
  3985  01E9  3000               	movlw	0
  3986  01EA  0553               	andwf	??_main+1,w
  3987  01EB  00D5               	movwf	??_main+3
  3988  01EC  3020               	movlw	low (_displayNum| (0+32768))
  3989  01ED  0754               	addwf	??_main+2,w
  3990  01EE  0084               	movwf	4
  3991  01EF  3090               	movlw	high (_displayNum| (0+32768))
  3992  01F0  3D55               	addwfc	??_main+3,w
  3993  01F1  0085               	movwf	5
  3994  01F2  0800               	movf	0,w	;code access
  3995  01F3  00D6               	movwf	??_main+4
  3996  01F4  0856               	movf	??_main+4,w
  3997  01F5  00A8               	movwf	_displayBuff
  3998  01F6                     l6124:	
  3999                           
  4000                           ;main.c: 299:                 displayBuff[1] = displayNum[((bcd_temp >> 4) & 0x0F)] | (1
      +                           << 0);
  4001  01F6  082D               	movf	_bcd_temp+1,w
  4002  01F7  00D3               	movwf	??_main+1
  4003  01F8  082C               	movf	_bcd_temp,w
  4004  01F9  00D2               	movwf	??_main
  4005  01FA  3004               	movlw	4
  4006  01FB                     u3975:	
  4007  01FB  36D3               	lsrf	??_main+1,f
  4008  01FC  0CD2               	rrf	??_main,f
  4009  01FD  0B89               	decfsz	9,f
  4010  01FE  29FB               	goto	u3975
  4011  01FF  300F               	movlw	15
  4012  0200  0552               	andwf	??_main,w
  4013  0201  00D4               	movwf	??_main+2
  4014  0202  3000               	movlw	0
  4015  0203  0553               	andwf	??_main+1,w
  4016  0204  00D5               	movwf	??_main+3
  4017  0205  3020               	movlw	low (_displayNum| (0+32768))
  4018  0206  0754               	addwf	??_main+2,w
  4019  0207  0084               	movwf	4
  4020  0208  3090               	movlw	high (_displayNum| (0+32768))
  4021  0209  3D55               	addwfc	??_main+3,w
  4022  020A  0085               	movwf	5
  4023  020B  0800               	movf	0,w	;code access
  4024  020C  3801               	iorlw	1
  4025  020D  00D6               	movwf	??_main+4
  4026  020E  0856               	movf	??_main+4,w
  4027  020F  00A9               	movwf	_displayBuff+1
  4028  0210                     l6126:	
  4029                           
  4030                           ;main.c: 300:                 displayBuff[2] = displayNum[(bcd_temp & 0x0F)];
  4031  0210  300F               	movlw	15
  4032  0211  052C               	andwf	_bcd_temp,w
  4033  0212  00D2               	movwf	??_main
  4034  0213  3000               	movlw	0
  4035  0214  052D               	andwf	_bcd_temp+1,w
  4036  0215  00D3               	movwf	??_main+1
  4037  0216  3020               	movlw	low (_displayNum| (0+32768))
  4038  0217  0752               	addwf	??_main,w
  4039  0218  0084               	movwf	4
  4040  0219  3090               	movlw	high (_displayNum| (0+32768))
  4041  021A  3D53               	addwfc	??_main+1,w
  4042  021B  0085               	movwf	5
  4043  021C  0800               	movf	0,w	;code access
  4044  021D  00D4               	movwf	??_main+2
  4045  021E  0854               	movf	??_main+2,w
  4046  021F  00AA               	movwf	_displayBuff+2
  4047  0220                     l6128:	
  4048                           
  4049                           ;main.c: 301:                 displayBuff[3] = ((1 << 7) | (1 << 4) | (1 << 3) | (1 << 2
      +                          ));
  4050  0220  309C               	movlw	156
  4051  0221  00D2               	movwf	??_main
  4052  0222  0852               	movf	??_main,w
  4053  0223  00AB               	movwf	_displayBuff+3
  4054  0224                     l6130:	
  4055                           
  4056                           ;main.c: 303:                 flag_time_display_update = 0;
  4057  0224  01B3               	clrf	_flag_time_display_update
  4058  0225  287E               	goto	l855
  4059  0226                     l6132:	
  4060                           
  4061                           ;main.c: 306:             if(flag_time_display_update == 1){
  4062  0226  0333               	decf	_flag_time_display_update,w
  4063  0227  1D03               	btfss	3,2
  4064  0228  2A2A               	goto	u3981
  4065  0229  2A2B               	goto	u3980
  4066  022A                     u3981:	
  4067  022A  2A7F               	goto	l885
  4068  022B                     u3980:	
  4069  022B                     l892:	
  4070                           ;main.c: 307:                 do { LATAbits.LATA7 = 1; } while(0);
  4071                           
  4072  022B  0022               	movlb	2	; select bank2
  4073  022C  178C               	bsf	12,7	;volatile
  4074  022D                     l6134:	
  4075                           
  4076                           ;main.c: 308:                 displayBuff[0] = displayNum[((rtcData[2] >> 4) & 0x03)];
  4077  022D  0020               	movlb	0	; select bank0
  4078  022E  0836               	movf	_rtcData+2,w
  4079  022F  00D2               	movwf	??_main
  4080  0230  3004               	movlw	4
  4081  0231                     u3995:	
  4082  0231  36D2               	lsrf	??_main,f
  4083  0232  0B89               	decfsz	9,f
  4084  0233  2A31               	goto	u3995
  4085  0234  0852               	movf	??_main,w
  4086  0235  3903               	andlw	3
  4087  0236  3E20               	addlw	low (_displayNum| (0+32768))
  4088  0237  0084               	movwf	4
  4089  0238  3090               	movlw	high (_displayNum| (0+32768))
  4090  0239  1803               	skipnc
  4091  023A  3E01               	addlw	1
  4092  023B  0085               	movwf	5
  4093  023C  0800               	movf	0,w	;code access
  4094  023D  00D3               	movwf	??_main+1
  4095  023E  0853               	movf	??_main+1,w
  4096  023F  00A8               	movwf	_displayBuff
  4097  0240                     l6136:	
  4098                           
  4099                           ;main.c: 309:                 displayBuff[1] = displayNum[(rtcData[2]& 0x0F)];
  4100  0240  0836               	movf	_rtcData+2,w
  4101  0241  390F               	andlw	15
  4102  0242  3E20               	addlw	low (_displayNum| (0+32768))
  4103  0243  0084               	movwf	4
  4104  0244  3090               	movlw	high (_displayNum| (0+32768))
  4105  0245  1803               	skipnc
  4106  0246  3E01               	addlw	1
  4107  0247  0085               	movwf	5
  4108  0248  0800               	movf	0,w	;code access
  4109  0249  00D2               	movwf	??_main
  4110  024A  0852               	movf	??_main,w
  4111  024B  00A9               	movwf	_displayBuff+1
  4112  024C                     l6138:	
  4113                           
  4114                           ;main.c: 310:                 displayBuff[2] = displayNum[((rtcData[1] >> 4) & 0x0F)];
  4115  024C  0835               	movf	_rtcData+1,w
  4116  024D  00D2               	movwf	??_main
  4117  024E  3004               	movlw	4
  4118  024F                     u4005:	
  4119  024F  36D2               	lsrf	??_main,f
  4120  0250  0B89               	decfsz	9,f
  4121  0251  2A4F               	goto	u4005
  4122  0252  0852               	movf	??_main,w
  4123  0253  390F               	andlw	15
  4124  0254  3E20               	addlw	low (_displayNum| (0+32768))
  4125  0255  0084               	movwf	4
  4126  0256  3090               	movlw	high (_displayNum| (0+32768))
  4127  0257  1803               	skipnc
  4128  0258  3E01               	addlw	1
  4129  0259  0085               	movwf	5
  4130  025A  0800               	movf	0,w	;code access
  4131  025B  00D3               	movwf	??_main+1
  4132  025C  0853               	movf	??_main+1,w
  4133  025D  00AA               	movwf	_displayBuff+2
  4134                           
  4135                           ;main.c: 311:                 displayBuff[3] = displayNum[(rtcData[1]& 0x0F)];
  4136  025E  0835               	movf	_rtcData+1,w
  4137  025F  390F               	andlw	15
  4138  0260  3E20               	addlw	low (_displayNum| (0+32768))
  4139  0261  0084               	movwf	4
  4140  0262  3090               	movlw	high (_displayNum| (0+32768))
  4141  0263  1803               	skipnc
  4142  0264  3E01               	addlw	1
  4143  0265  0085               	movwf	5
  4144  0266  0800               	movf	0,w	;code access
  4145  0267  00D2               	movwf	??_main
  4146  0268  0852               	movf	??_main,w
  4147  0269  00AB               	movwf	_displayBuff+3
  4148  026A                     l6140:	
  4149                           
  4150                           ;main.c: 312:                 if(flag_dot_blink){
  4151  026A  0832               	movf	_flag_dot_blink,w
  4152  026B  1903               	btfsc	3,2
  4153  026C  2A6E               	goto	u4011
  4154  026D  2A6F               	goto	u4010
  4155  026E                     u4011:	
  4156  026E  2A24               	goto	l6130
  4157  026F                     u4010:	
  4158  026F                     l6142:	
  4159                           
  4160                           ;main.c: 313:                     if(mode == MODE_SET_HOUR){
  4161  026F  3002               	movlw	2
  4162  0270  0631               	xorwf	_mode,w
  4163  0271  1D03               	btfss	3,2
  4164  0272  2A74               	goto	u4021
  4165  0273  2A75               	goto	u4020
  4166  0274                     u4021:	
  4167  0274  2A77               	goto	l6146
  4168  0275                     u4020:	
  4169  0275                     l6144:	
  4170                           
  4171                           ;main.c: 314:                         displayBuff[1] |= (1 << 0);
  4172  0275  1429               	bsf	_displayBuff+1,0
  4173                           
  4174                           ;main.c: 315:                     } else if(mode == MODE_SET_MINUTE){
  4175  0276  2A24               	goto	l6130
  4176  0277                     l6146:	
  4177  0277  3003               	movlw	3
  4178  0278  0631               	xorwf	_mode,w
  4179  0279  1D03               	btfss	3,2
  4180  027A  2A7C               	goto	u4031
  4181  027B  2A7D               	goto	u4030
  4182  027C                     u4031:	
  4183  027C  2A24               	goto	l6130
  4184  027D                     u4030:	
  4185  027D                     l6148:	
  4186                           
  4187                           ;main.c: 316:                         displayBuff[3] |= (1 << 0);
  4188  027D  142B               	bsf	_displayBuff+3,0
  4189  027E  2A24               	goto	l6130
  4190  027F                     l885:	
  4191  027F  287E               	goto	l855
  4192  0280  3180  2844         	ljmp	start
  4193  0282                     __end_of_main:	
  4194                           
  4195                           	psect	text1
  4196  0EF9                     __ptext1:	
  4197 ;; *************** function _updateRTC *****************
  4198 ;; Defined at:
  4199 ;;		line 106 in file "main.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  bcdHour         1    wreg     unsigned char 
  4202 ;;  bcdMinute       1   14[BANK0 ] unsigned char 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  bcdHour         1   16[BANK0 ] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4214 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;Total ram usage:        3 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:   15
  4221 ;; This function calls:
  4222 ;;		_i2c_writeNBytes
  4223 ;; This function is called by:
  4224 ;;		_main
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           
  4229                           ;psect for function _updateRTC
  4230  0EF9                     _updateRTC:	
  4231                           
  4232                           ;incstack = 0
  4233                           ; Regs used in _updateRTC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4234                           ;updateRTC@bcdHour stored from wreg
  4235  0EF9  0020               	movlb	0	; select bank0
  4236  0EFA  00CD               	movwf	updateRTC@bcdHour
  4237  0EFB                     l5708:	
  4238                           
  4239                           ;main.c: 107:     rtcData[0] = 0x00;
  4240  0EFB  01B4               	clrf	_rtcData
  4241                           
  4242                           ;main.c: 108:     rtcData[1] = 0x00;
  4243  0EFC  01B5               	clrf	_rtcData+1
  4244  0EFD                     l5710:	
  4245                           
  4246                           ;main.c: 109:     rtcData[2] = bcdMinute & 0x7F;
  4247  0EFD  084B               	movf	updateRTC@bcdMinute,w
  4248  0EFE  397F               	andlw	127
  4249  0EFF  00CC               	movwf	??_updateRTC
  4250  0F00  084C               	movf	??_updateRTC,w
  4251  0F01  00B6               	movwf	_rtcData+2
  4252  0F02                     l5712:	
  4253                           
  4254                           ;main.c: 110:     rtcData[3] = bcdHour & 0x3F;
  4255  0F02  084D               	movf	updateRTC@bcdHour,w
  4256  0F03  393F               	andlw	63
  4257  0F04  00CC               	movwf	??_updateRTC
  4258  0F05  084C               	movf	??_updateRTC,w
  4259  0F06  00B7               	movwf	_rtcData+3
  4260  0F07                     l5714:	
  4261                           
  4262                           ;main.c: 111:     i2c_writeNBytes(0x68,rtcData,4);
  4263  0F07  3034               	movlw	(low (_rtcData| 0))& (0+255)
  4264  0F08  00CC               	movwf	??_updateRTC
  4265  0F09  084C               	movf	??_updateRTC,w
  4266  0F0A  00C7               	movwf	i2c_writeNBytes@data
  4267  0F0B  3004               	movlw	4
  4268  0F0C  00C8               	movwf	i2c_writeNBytes@len
  4269  0F0D  3000               	movlw	0
  4270  0F0E  00C9               	movwf	i2c_writeNBytes@len+1
  4271  0F0F  3068               	movlw	104
  4272  0F10  3187  2788  318E   	fcall	_i2c_writeNBytes
  4273  0F13                     l806:	
  4274  0F13  0008               	return
  4275  0F14                     __end_of_updateRTC:	
  4276                           
  4277                           	psect	text2
  4278  0490                     __ptext2:	
  4279 ;; *************** function _intToBCD *****************
  4280 ;; Defined at:
  4281 ;;		line 150 in file "main.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  binaryInput     2    8[BANK0 ] unsigned short 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  shift           2   15[BANK0 ] unsigned short 
  4286 ;;  bcdResult       2   13[BANK0 ] unsigned short 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    8[BANK0 ] unsigned short 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;Total ram usage:        9 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    7
  4303 ;; This function calls:
  4304 ;;		___lwdiv
  4305 ;;		___lwmod
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function _intToBCD
  4313  0490                     _intToBCD:	
  4314  0490                     l5840:	
  4315                           ;incstack = 0
  4316                           ; Regs used in _intToBCD: [wreg+status,2+status,0+pclath+cstack]
  4317                           
  4318                           
  4319                           ;main.c: 151:     uint16_t bcdResult = 0;
  4320  0490  0020               	movlb	0	; select bank0
  4321  0491  01CA               	clrf	intToBCD@bcdResult
  4322  0492  01CB               	clrf	intToBCD@bcdResult+1
  4323                           
  4324                           ;main.c: 152:     uint16_t shift = 0;
  4325  0493  01CC               	clrf	intToBCD@shift
  4326  0494  01CD               	clrf	intToBCD@shift+1
  4327                           
  4328                           ;main.c: 154:     while (binaryInput > 0) {
  4329  0495  2CCC               	goto	l5848
  4330  0496                     l5842:	
  4331                           
  4332                           ;main.c: 155:       bcdResult |= (binaryInput % 10) << (shift++ << 2);
  4333  0496  300A               	movlw	10
  4334  0497  00BD               	movwf	___lwmod@divisor
  4335  0498  3000               	movlw	0
  4336  0499  00BE               	movwf	___lwmod@divisor+1
  4337  049A  0846               	movf	intToBCD@binaryInput+1,w
  4338  049B  00C0               	movwf	___lwmod@dividend+1
  4339  049C  0845               	movf	intToBCD@binaryInput,w
  4340  049D  00BF               	movwf	___lwmod@dividend
  4341  049E  3185  25C9  3184   	fcall	___lwmod
  4342  04A1  0020               	movlb	0	; select bank0
  4343  04A2  083D               	movf	?___lwmod,w
  4344  04A3  00C7               	movwf	??_intToBCD
  4345  04A4  083E               	movf	?___lwmod+1,w
  4346  04A5  00C8               	movwf	??_intToBCD+1
  4347  04A6  084C               	movf	intToBCD@shift,w
  4348  04A7  00C9               	movwf	??_intToBCD+2
  4349  04A8  3001               	movlw	1
  4350  04A9                     u3425:	
  4351  04A9  35C9               	lslf	??_intToBCD+2,f
  4352  04AA  3EFF               	addlw	-1
  4353  04AB  1D03               	skipz
  4354  04AC  2CA9               	goto	u3425
  4355  04AD  3549               	lslf	??_intToBCD+2,w
  4356  04AE  0A89               	incf	9,f
  4357  04AF  2CB2               	goto	u3434
  4358  04B0                     u3435:	
  4359  04B0  35C7               	lslf	??_intToBCD,f
  4360  04B1  0DC8               	rlf	??_intToBCD+1,f
  4361  04B2                     u3434:	
  4362  04B2  0B89               	decfsz	9,f
  4363  04B3  2CB0               	goto	u3435
  4364  04B4  0847               	movf	??_intToBCD,w
  4365  04B5  04CA               	iorwf	intToBCD@bcdResult,f
  4366  04B6  0848               	movf	??_intToBCD+1,w
  4367  04B7  04CB               	iorwf	intToBCD@bcdResult+1,f
  4368  04B8                     l5844:	
  4369  04B8  3001               	movlw	1
  4370  04B9  07CC               	addwf	intToBCD@shift,f
  4371  04BA  3000               	movlw	0
  4372  04BB  3DCD               	addwfc	intToBCD@shift+1,f
  4373  04BC                     l5846:	
  4374                           
  4375                           ;main.c: 156:       binaryInput /= 10;
  4376  04BC  300A               	movlw	10
  4377  04BD  00BD               	movwf	___lwdiv@divisor
  4378  04BE  3000               	movlw	0
  4379  04BF  00BE               	movwf	___lwdiv@divisor+1
  4380  04C0  0846               	movf	intToBCD@binaryInput+1,w
  4381  04C1  00C0               	movwf	___lwdiv@dividend+1
  4382  04C2  0845               	movf	intToBCD@binaryInput,w
  4383  04C3  00BF               	movwf	___lwdiv@dividend
  4384  04C4  3185  2553  3184   	fcall	___lwdiv
  4385  04C7  0020               	movlb	0	; select bank0
  4386  04C8  083E               	movf	?___lwdiv+1,w
  4387  04C9  00C6               	movwf	intToBCD@binaryInput+1
  4388  04CA  083D               	movf	?___lwdiv,w
  4389  04CB  00C5               	movwf	intToBCD@binaryInput
  4390  04CC                     l5848:	
  4391                           
  4392                           ;main.c: 154:     while (binaryInput > 0) {
  4393  04CC  0845               	movf	intToBCD@binaryInput,w
  4394  04CD  0446               	iorwf	intToBCD@binaryInput+1,w
  4395  04CE  1D03               	btfss	3,2
  4396  04CF  2CD1               	goto	u3441
  4397  04D0  2CD2               	goto	u3440
  4398  04D1                     u3441:	
  4399  04D1  2C96               	goto	l5842
  4400  04D2                     u3440:	
  4401  04D2                     l5850:	
  4402                           
  4403                           ;main.c: 159:     return bcdResult;
  4404  04D2  084B               	movf	intToBCD@bcdResult+1,w
  4405  04D3  00C6               	movwf	?_intToBCD+1
  4406  04D4  084A               	movf	intToBCD@bcdResult,w
  4407  04D5  00C5               	movwf	?_intToBCD
  4408  04D6                     l842:	
  4409  04D6  0008               	return
  4410  04D7                     __end_of_intToBCD:	
  4411                           
  4412                           	psect	text3
  4413  05C9                     __ptext3:	
  4414 ;; *************** function ___lwmod *****************
  4415 ;; Defined at:
  4416 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwmod.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  divisor         2    0[BANK0 ] unsigned int 
  4419 ;;  dividend        2    2[BANK0 ] unsigned int 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  counter         1    5[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  2    0[BANK0 ] unsigned int 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4431 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4433 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;Total ram usage:        6 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    6
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_intToBCD
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function ___lwmod
  4447  05C9                     ___lwmod:	
  4448  05C9                     l5534:	
  4449                           ;incstack = 0
  4450                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4451                           
  4452  05C9  0020               	movlb	0	; select bank0
  4453  05CA  083D               	movf	___lwmod@divisor,w
  4454  05CB  043E               	iorwf	___lwmod@divisor+1,w
  4455  05CC  1903               	btfsc	3,2
  4456  05CD  2DCF               	goto	u3131
  4457  05CE  2DD0               	goto	u3130
  4458  05CF                     u3131:	
  4459  05CF  2DF9               	goto	l5552
  4460  05D0                     u3130:	
  4461  05D0                     l5536:	
  4462  05D0  01C2               	clrf	___lwmod@counter
  4463  05D1  0AC2               	incf	___lwmod@counter,f
  4464  05D2  2DDC               	goto	l5542
  4465  05D3                     l5538:	
  4466  05D3  3001               	movlw	1
  4467  05D4                     u3145:	
  4468  05D4  35BD               	lslf	___lwmod@divisor,f
  4469  05D5  0DBE               	rlf	___lwmod@divisor+1,f
  4470  05D6  0B89               	decfsz	9,f
  4471  05D7  2DD4               	goto	u3145
  4472  05D8                     l5540:	
  4473  05D8  3001               	movlw	1
  4474  05D9  00C1               	movwf	??___lwmod
  4475  05DA  0841               	movf	??___lwmod,w
  4476  05DB  07C2               	addwf	___lwmod@counter,f
  4477  05DC                     l5542:	
  4478  05DC  1FBE               	btfss	___lwmod@divisor+1,7
  4479  05DD  2DDF               	goto	u3151
  4480  05DE  2DE0               	goto	u3150
  4481  05DF                     u3151:	
  4482  05DF  2DD3               	goto	l5538
  4483  05E0                     u3150:	
  4484  05E0                     l5544:	
  4485  05E0  083E               	movf	___lwmod@divisor+1,w
  4486  05E1  0240               	subwf	___lwmod@dividend+1,w
  4487  05E2  1D03               	skipz
  4488  05E3  2DE6               	goto	u3165
  4489  05E4  083D               	movf	___lwmod@divisor,w
  4490  05E5  023F               	subwf	___lwmod@dividend,w
  4491  05E6                     u3165:	
  4492  05E6  1C03               	skipc
  4493  05E7  2DE9               	goto	u3161
  4494  05E8  2DEA               	goto	u3160
  4495  05E9                     u3161:	
  4496  05E9  2DEE               	goto	l5548
  4497  05EA                     u3160:	
  4498  05EA                     l5546:	
  4499  05EA  083D               	movf	___lwmod@divisor,w
  4500  05EB  02BF               	subwf	___lwmod@dividend,f
  4501  05EC  083E               	movf	___lwmod@divisor+1,w
  4502  05ED  3BC0               	subwfb	___lwmod@dividend+1,f
  4503  05EE                     l5548:	
  4504  05EE  3001               	movlw	1
  4505  05EF                     u3175:	
  4506  05EF  36BE               	lsrf	___lwmod@divisor+1,f
  4507  05F0  0CBD               	rrf	___lwmod@divisor,f
  4508  05F1  0B89               	decfsz	9,f
  4509  05F2  2DEF               	goto	u3175
  4510  05F3                     l5550:	
  4511  05F3  3001               	movlw	1
  4512  05F4  02C2               	subwf	___lwmod@counter,f
  4513  05F5  1D03               	btfss	3,2
  4514  05F6  2DF8               	goto	u3181
  4515  05F7  2DF9               	goto	u3180
  4516  05F8                     u3181:	
  4517  05F8  2DE0               	goto	l5544
  4518  05F9                     u3180:	
  4519  05F9                     l5552:	
  4520  05F9  0840               	movf	___lwmod@dividend+1,w
  4521  05FA  00BE               	movwf	?___lwmod+1
  4522  05FB  083F               	movf	___lwmod@dividend,w
  4523  05FC  00BD               	movwf	?___lwmod
  4524  05FD                     l1386:	
  4525  05FD  0008               	return
  4526  05FE                     __end_of___lwmod:	
  4527                           
  4528                           	psect	text4
  4529  0553                     __ptext4:	
  4530 ;; *************** function ___lwdiv *****************
  4531 ;; Defined at:
  4532 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  divisor         2    0[BANK0 ] unsigned int 
  4535 ;;  dividend        2    2[BANK0 ] unsigned int 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  quotient        2    6[BANK0 ] unsigned int 
  4538 ;;  counter         1    5[BANK0 ] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  2    0[BANK0 ] unsigned int 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;Total ram usage:        8 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    6
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_intToBCD
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function ___lwdiv
  4564  0553                     ___lwdiv:	
  4565  0553                     l5508:	
  4566                           ;incstack = 0
  4567                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4568                           
  4569  0553  0020               	movlb	0	; select bank0
  4570  0554  01C3               	clrf	___lwdiv@quotient
  4571  0555  01C4               	clrf	___lwdiv@quotient+1
  4572  0556                     l5510:	
  4573  0556  083D               	movf	___lwdiv@divisor,w
  4574  0557  043E               	iorwf	___lwdiv@divisor+1,w
  4575  0558  1903               	btfsc	3,2
  4576  0559  2D5B               	goto	u3061
  4577  055A  2D5C               	goto	u3060
  4578  055B                     u3061:	
  4579  055B  2D8B               	goto	l5530
  4580  055C                     u3060:	
  4581  055C                     l5512:	
  4582  055C  01C2               	clrf	___lwdiv@counter
  4583  055D  0AC2               	incf	___lwdiv@counter,f
  4584  055E  2D68               	goto	l5518
  4585  055F                     l5514:	
  4586  055F  3001               	movlw	1
  4587  0560                     u3075:	
  4588  0560  35BD               	lslf	___lwdiv@divisor,f
  4589  0561  0DBE               	rlf	___lwdiv@divisor+1,f
  4590  0562  0B89               	decfsz	9,f
  4591  0563  2D60               	goto	u3075
  4592  0564                     l5516:	
  4593  0564  3001               	movlw	1
  4594  0565  00C1               	movwf	??___lwdiv
  4595  0566  0841               	movf	??___lwdiv,w
  4596  0567  07C2               	addwf	___lwdiv@counter,f
  4597  0568                     l5518:	
  4598  0568  1FBE               	btfss	___lwdiv@divisor+1,7
  4599  0569  2D6B               	goto	u3081
  4600  056A  2D6C               	goto	u3080
  4601  056B                     u3081:	
  4602  056B  2D5F               	goto	l5514
  4603  056C                     u3080:	
  4604  056C                     l5520:	
  4605  056C  3001               	movlw	1
  4606  056D                     u3095:	
  4607  056D  35C3               	lslf	___lwdiv@quotient,f
  4608  056E  0DC4               	rlf	___lwdiv@quotient+1,f
  4609  056F  0B89               	decfsz	9,f
  4610  0570  2D6D               	goto	u3095
  4611  0571  083E               	movf	___lwdiv@divisor+1,w
  4612  0572  0240               	subwf	___lwdiv@dividend+1,w
  4613  0573  1D03               	skipz
  4614  0574  2D77               	goto	u3105
  4615  0575  083D               	movf	___lwdiv@divisor,w
  4616  0576  023F               	subwf	___lwdiv@dividend,w
  4617  0577                     u3105:	
  4618  0577  1C03               	skipc
  4619  0578  2D7A               	goto	u3101
  4620  0579  2D7B               	goto	u3100
  4621  057A                     u3101:	
  4622  057A  2D80               	goto	l5526
  4623  057B                     u3100:	
  4624  057B                     l5522:	
  4625  057B  083D               	movf	___lwdiv@divisor,w
  4626  057C  02BF               	subwf	___lwdiv@dividend,f
  4627  057D  083E               	movf	___lwdiv@divisor+1,w
  4628  057E  3BC0               	subwfb	___lwdiv@dividend+1,f
  4629  057F                     l5524:	
  4630  057F  1443               	bsf	___lwdiv@quotient,0
  4631  0580                     l5526:	
  4632  0580  3001               	movlw	1
  4633  0581                     u3115:	
  4634  0581  36BE               	lsrf	___lwdiv@divisor+1,f
  4635  0582  0CBD               	rrf	___lwdiv@divisor,f
  4636  0583  0B89               	decfsz	9,f
  4637  0584  2D81               	goto	u3115
  4638  0585                     l5528:	
  4639  0585  3001               	movlw	1
  4640  0586  02C2               	subwf	___lwdiv@counter,f
  4641  0587  1D03               	btfss	3,2
  4642  0588  2D8A               	goto	u3121
  4643  0589  2D8B               	goto	u3120
  4644  058A                     u3121:	
  4645  058A  2D6C               	goto	l5520
  4646  058B                     u3120:	
  4647  058B                     l5530:	
  4648  058B  0844               	movf	___lwdiv@quotient+1,w
  4649  058C  00BE               	movwf	?___lwdiv+1
  4650  058D  0843               	movf	___lwdiv@quotient,w
  4651  058E  00BD               	movwf	?___lwdiv
  4652  058F                     l1376:	
  4653  058F  0008               	return
  4654  0590                     __end_of___lwdiv:	
  4655                           
  4656                           	psect	text5
  4657  04D7                     __ptext5:	
  4658 ;; *************** function _initRTC *****************
  4659 ;; Defined at:
  4660 ;;		line 84 in file "main.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;Total ram usage:        2 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:   15
  4681 ;; This function calls:
  4682 ;;		_i2c_readDataBlock
  4683 ;;		_i2c_writeNBytes
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _initRTC
  4691  04D7                     _initRTC:	
  4692  04D7                     l5688:	
  4693                           ;incstack = 0
  4694                           ; Regs used in _initRTC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4695                           
  4696                           
  4697                           ;main.c: 85:     _delay((unsigned long)((30)*(32000000/4000.0)));
  4698  04D7  3002               	movlw	2
  4699  04D8  0020               	movlb	0	; select bank0
  4700  04D9  00D1               	movwf	??_initRTC+1
  4701  04DA  3038               	movlw	56
  4702  04DB  00D0               	movwf	??_initRTC
  4703  04DC  30AD               	movlw	173
  4704  04DD                     u4047:	
  4705  04DD  0B89               	decfsz	9,f
  4706  04DE  2CDD               	goto	u4047
  4707  04DF  0BD0               	decfsz	??_initRTC,f
  4708  04E0  2CDD               	goto	u4047
  4709  04E1  0BD1               	decfsz	??_initRTC+1,f
  4710  04E2  2CDD               	goto	u4047
  4711  04E3                     l5690:	
  4712                           
  4713                           ;main.c: 89:     i2c_readDataBlock(0x68,0x00,rtcData,sizeof(rtcData));
  4714  04E3  0020               	movlb	0	; select bank0
  4715  04E4  01C7               	clrf	i2c_readDataBlock@reg
  4716  04E5  3034               	movlw	(low (_rtcData| 0))& (0+255)
  4717  04E6  00D0               	movwf	??_initRTC
  4718  04E7  0850               	movf	??_initRTC,w
  4719  04E8  00C8               	movwf	i2c_readDataBlock@data
  4720  04E9  3009               	movlw	9
  4721  04EA  00C9               	movwf	i2c_readDataBlock@len
  4722  04EB  3000               	movlw	0
  4723  04EC  00CA               	movwf	i2c_readDataBlock@len+1
  4724  04ED  3068               	movlw	104
  4725  04EE  3185  2515  3184   	fcall	_i2c_readDataBlock
  4726  04F1                     l5692:	
  4727                           
  4728                           ;main.c: 90:     if((rtcData[0] & 0x80) == 0x80){
  4729  04F1  0020               	movlb	0	; select bank0
  4730  04F2  1FB4               	btfss	_rtcData,7
  4731  04F3  2CF5               	goto	u3231
  4732  04F4  2CF6               	goto	u3230
  4733  04F5                     u3231:	
  4734  04F5  2D14               	goto	l803
  4735  04F6                     u3230:	
  4736  04F6                     l5694:	
  4737                           
  4738                           ;main.c: 92:         rtcData[0] = 0x00;
  4739  04F6  01B4               	clrf	_rtcData
  4740                           
  4741                           ;main.c: 93:         rtcData[1] = 0x00;
  4742  04F7  01B5               	clrf	_rtcData+1
  4743                           
  4744                           ;main.c: 94:         rtcData[2] = 0x00;
  4745  04F8  01B6               	clrf	_rtcData+2
  4746                           
  4747                           ;main.c: 95:         rtcData[3] = 0x00;
  4748  04F9  01B7               	clrf	_rtcData+3
  4749  04FA                     l5696:	
  4750                           
  4751                           ;main.c: 96:         rtcData[4] = 0x01;
  4752  04FA  01B8               	clrf	_rtcData+4
  4753  04FB  0AB8               	incf	_rtcData+4,f
  4754  04FC                     l5698:	
  4755                           
  4756                           ;main.c: 97:         rtcData[5] = 0x01;
  4757  04FC  01B9               	clrf	_rtcData+5
  4758  04FD  0AB9               	incf	_rtcData+5,f
  4759  04FE                     l5700:	
  4760                           
  4761                           ;main.c: 98:         rtcData[6] = 0x01;
  4762  04FE  01BA               	clrf	_rtcData+6
  4763  04FF  0ABA               	incf	_rtcData+6,f
  4764  0500                     l5702:	
  4765                           
  4766                           ;main.c: 99:         rtcData[7] = 0x19;
  4767  0500  3019               	movlw	25
  4768  0501  00D0               	movwf	??_initRTC
  4769  0502  0850               	movf	??_initRTC,w
  4770  0503  00BB               	movwf	_rtcData+7
  4771  0504                     l5704:	
  4772                           
  4773                           ;main.c: 100:         rtcData[8] = 0x10;
  4774  0504  3010               	movlw	16
  4775  0505  00D0               	movwf	??_initRTC
  4776  0506  0850               	movf	??_initRTC,w
  4777  0507  00BC               	movwf	_rtcData+8
  4778  0508                     l5706:	
  4779                           
  4780                           ;main.c: 102:         i2c_writeNBytes(0x68,rtcData,sizeof(rtcData));
  4781  0508  3034               	movlw	(low (_rtcData| 0))& (0+255)
  4782  0509  00D0               	movwf	??_initRTC
  4783  050A  0850               	movf	??_initRTC,w
  4784  050B  00C7               	movwf	i2c_writeNBytes@data
  4785  050C  3009               	movlw	9
  4786  050D  00C8               	movwf	i2c_writeNBytes@len
  4787  050E  3000               	movlw	0
  4788  050F  00C9               	movwf	i2c_writeNBytes@len+1
  4789  0510  3068               	movlw	104
  4790  0511  3187  2788  3184   	fcall	_i2c_writeNBytes
  4791  0514                     l803:	
  4792  0514  0008               	return
  4793  0515                     __end_of_initRTC:	
  4794                           
  4795                           	psect	text6
  4796  0788                     __ptext6:	
  4797 ;; *************** function _i2c_writeNBytes *****************
  4798 ;; Defined at:
  4799 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  address         1    wreg     unsigned char 
  4802 ;;  data            1   10[BANK0 ] PTR void 
  4803 ;;		 -> rtcData(9), 
  4804 ;;  len             2   11[BANK0 ] unsigned int 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  address         1   13[BANK0 ] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4816 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;Total ram usage:        4 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:   14
  4823 ;; This function calls:
  4824 ;;		_i2c_close
  4825 ;;		_i2c_masterWrite
  4826 ;;		_i2c_open
  4827 ;;		_i2c_setAddressNACKCallback
  4828 ;;		_i2c_setBuffer
  4829 ;; This function is called by:
  4830 ;;		_initRTC
  4831 ;;		_updateRTC
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function _i2c_writeNBytes
  4837  0788                     _i2c_writeNBytes:	
  4838                           
  4839                           ;incstack = 0
  4840                           ; Regs used in _i2c_writeNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4841                           ;i2c_writeNBytes@address stored from wreg
  4842  0788  0020               	movlb	0	; select bank0
  4843  0789  00CA               	movwf	i2c_writeNBytes@address
  4844  078A                     l5420:	
  4845  078A                     l5422:	
  4846                           ;mcc_generated_files/drivers/i2c_simple_master.c: 48: void i2c_writeNBytes(i2c_address_t
      +                           address, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 49: {
      +                          ;mcc_generated_files/drivers/i2c_simple_master.c: 50:     while(!i2c_open(address));
  4847                           
  4848  078A  0020               	movlb	0	; select bank0
  4849  078B  084A               	movf	i2c_writeNBytes@address,w
  4850  078C  3183  23F4  3187   	fcall	_i2c_open
  4851  078F  3A00               	xorlw	0
  4852  0790  1903               	skipnz
  4853  0791  2F93               	goto	u3011
  4854  0792  2F94               	goto	u3010
  4855  0793                     u3011:	
  4856  0793  2F8A               	goto	l5422
  4857  0794                     u3010:	
  4858  0794                     l5424:	
  4859                           
  4860                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51:     i2c_setBuffer(data,len);
  4861  0794  0020               	movlb	0	; select bank0
  4862  0795  0849               	movf	i2c_writeNBytes@len+1,w
  4863  0796  00BE               	movwf	i2c_setBuffer@bufferSize+1
  4864  0797  0848               	movf	i2c_writeNBytes@len,w
  4865  0798  00BD               	movwf	i2c_setBuffer@bufferSize
  4866  0799  0847               	movf	i2c_writeNBytes@data,w
  4867  079A  318E  266D  3187   	fcall	_i2c_setBuffer
  4868  079D                     l5426:	
  4869                           
  4870                           ;mcc_generated_files/drivers/i2c_simple_master.c: 52:     i2c_setAddressNACKCallback(i2c
      +                          _restartWrite,((void*)0));
  4871  079D  3086               	movlw	low _i2c_restartWrite
  4872  079E  0020               	movlb	0	; select bank0
  4873  079F  00C2               	movwf	i2c_setAddressNACKCallback@cb
  4874  07A0  300C               	movlw	high _i2c_restartWrite
  4875  07A1  00C3               	movwf	i2c_setAddressNACKCallback@cb+1
  4876  07A2  01C4               	clrf	i2c_setAddressNACKCallback@p
  4877  07A3  318D  25BE  3187   	fcall	_i2c_setAddressNACKCallback
  4878  07A6                     l5428:	
  4879                           
  4880                           ;mcc_generated_files/drivers/i2c_simple_master.c: 53:     i2c_masterWrite();
  4881  07A6  318C  2469  3187   	fcall	_i2c_masterWrite
  4882  07A9                     l5430:	
  4883                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     while(I2C_BUSY == i2c_close())
      +                          ;
  4884                           
  4885  07A9  318F  274D  3187   	fcall	_i2c_close
  4886  07AC  3A01               	xorlw	1
  4887  07AD  1903               	skipnz
  4888  07AE  2FB0               	goto	u3021
  4889  07AF  2FB1               	goto	u3020
  4890  07B0                     u3021:	
  4891  07B0  2FA9               	goto	l5430
  4892  07B1                     u3020:	
  4893  07B1                     l249:	
  4894  07B1  0008               	return
  4895  07B2                     __end_of_i2c_writeNBytes:	
  4896                           
  4897                           	psect	text7
  4898  0515                     __ptext7:	
  4899 ;; *************** function _i2c_readDataBlock *****************
  4900 ;; Defined at:
  4901 ;;		line 141 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  address         1    wreg     unsigned char 
  4904 ;;  reg             1   10[BANK0 ] unsigned char 
  4905 ;;  data            1   11[BANK0 ] PTR void 
  4906 ;;		 -> rtcData(9), 
  4907 ;;  len             2   12[BANK0 ] unsigned int 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  address         1   15[BANK0 ] unsigned char 
  4910 ;;  d               3   16[BANK0 ] struct .
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4924 ;;Total ram usage:        9 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   14
  4927 ;; This function calls:
  4928 ;;		_i2c_close
  4929 ;;		_i2c_masterWrite
  4930 ;;		_i2c_open
  4931 ;;		_i2c_setAddressNACKCallback
  4932 ;;		_i2c_setBuffer
  4933 ;;		_i2c_setDataCompleteCallback
  4934 ;; This function is called by:
  4935 ;;		_initRTC
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function _i2c_readDataBlock
  4942  0515                     _i2c_readDataBlock:	
  4943                           
  4944                           ;incstack = 0
  4945                           ; Regs used in _i2c_readDataBlock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4946                           ;i2c_readDataBlock@address stored from wreg
  4947  0515  0020               	movlb	0	; select bank0
  4948  0516  00CC               	movwf	i2c_readDataBlock@address
  4949  0517                     l5432:	
  4950                           
  4951                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141: void i2c_readDataBlock(i2c_addres
      +                          s_t address, uint8_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simple
      +                          _master.c: 142: {;mcc_generated_files/drivers/i2c_simple_master.c: 144:     buf_t d;;mcc
      +                          _generated_files/drivers/i2c_simple_master.c: 145:     d.data = data;
  4952  0517  0848               	movf	i2c_readDataBlock@data,w
  4953  0518  00CB               	movwf	??_i2c_readDataBlock
  4954  0519  084B               	movf	??_i2c_readDataBlock,w
  4955  051A  00CF               	movwf	low ((i2c_readDataBlock@d| 0+2))
  4956                           
  4957                           ;mcc_generated_files/drivers/i2c_simple_master.c: 146:     d.len = len;
  4958  051B  084A               	movf	i2c_readDataBlock@len+1,w
  4959  051C  00CE               	movwf	i2c_readDataBlock@d+1
  4960  051D  0849               	movf	i2c_readDataBlock@len,w
  4961  051E  00CD               	movwf	i2c_readDataBlock@d
  4962  051F                     l5434:	
  4963                           ;mcc_generated_files/drivers/i2c_simple_master.c: 148:     while(!i2c_open(address));
  4964                           
  4965  051F  0020               	movlb	0	; select bank0
  4966  0520  084C               	movf	i2c_readDataBlock@address,w
  4967  0521  3183  23F4  3185   	fcall	_i2c_open
  4968  0524  3A00               	xorlw	0
  4969  0525  1903               	skipnz
  4970  0526  2D28               	goto	u3031
  4971  0527  2D29               	goto	u3030
  4972  0528                     u3031:	
  4973  0528  2D1F               	goto	l5434
  4974  0529                     u3030:	
  4975  0529                     l5436:	
  4976                           
  4977                           ;mcc_generated_files/drivers/i2c_simple_master.c: 149:     i2c_setDataCompleteCallback(r
      +                          dBlkRegCompleteHandler,&d);
  4978  0529  306B               	movlw	low _rdBlkRegCompleteHandler
  4979  052A  0020               	movlb	0	; select bank0
  4980  052B  00C2               	movwf	i2c_setDataCompleteCallback@cb
  4981  052C  300F               	movlw	high _rdBlkRegCompleteHandler
  4982  052D  00C3               	movwf	i2c_setDataCompleteCallback@cb+1
  4983  052E  304D               	movlw	(low (i2c_readDataBlock@d| 0))& (0+255)
  4984  052F  00CB               	movwf	??_i2c_readDataBlock
  4985  0530  084B               	movf	??_i2c_readDataBlock,w
  4986  0531  00C4               	movwf	i2c_setDataCompleteCallback@p
  4987  0532  318D  25A2  3185   	fcall	_i2c_setDataCompleteCallback
  4988  0535                     l5438:	
  4989                           
  4990                           ;mcc_generated_files/drivers/i2c_simple_master.c: 150:     i2c_setBuffer(&reg,1);
  4991  0535  3001               	movlw	1
  4992  0536  0020               	movlb	0	; select bank0
  4993  0537  00BD               	movwf	i2c_setBuffer@bufferSize
  4994  0538  3000               	movlw	0
  4995  0539  00BE               	movwf	i2c_setBuffer@bufferSize+1
  4996  053A  3047               	movlw	(low (i2c_readDataBlock@reg| 0))& (0+255)
  4997  053B  318E  266D  3185   	fcall	_i2c_setBuffer
  4998  053E                     l5440:	
  4999                           
  5000                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     i2c_setAddressNACKCallback(i2
      +                          c_restartWrite,((void*)0));
  5001  053E  3086               	movlw	low _i2c_restartWrite
  5002  053F  0020               	movlb	0	; select bank0
  5003  0540  00C2               	movwf	i2c_setAddressNACKCallback@cb
  5004  0541  300C               	movlw	high _i2c_restartWrite
  5005  0542  00C3               	movwf	i2c_setAddressNACKCallback@cb+1
  5006  0543  01C4               	clrf	i2c_setAddressNACKCallback@p
  5007  0544  318D  25BE  3185   	fcall	_i2c_setAddressNACKCallback
  5008  0547                     l5442:	
  5009                           
  5010                           ;mcc_generated_files/drivers/i2c_simple_master.c: 152:     i2c_masterWrite();
  5011  0547  318C  2469  3185   	fcall	_i2c_masterWrite
  5012  054A                     l5444:	
  5013                           ;mcc_generated_files/drivers/i2c_simple_master.c: 153:     while(I2C_BUSY == i2c_close()
      +                          );
  5014                           
  5015  054A  318F  274D  3185   	fcall	_i2c_close
  5016  054D  3A01               	xorlw	1
  5017  054E  1903               	skipnz
  5018  054F  2D51               	goto	u3041
  5019  0550  2D52               	goto	u3040
  5020  0551                     u3041:	
  5021  0551  2D4A               	goto	l5444
  5022  0552                     u3040:	
  5023  0552                     l300:	
  5024  0552  0008               	return
  5025  0553                     __end_of_i2c_readDataBlock:	
  5026                           
  5027                           	psect	text8
  5028  0DBE                     __ptext8:	
  5029 ;; *************** function _i2c_setAddressNACKCallback *****************
  5030 ;; Defined at:
  5031 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  5034 ;;		 -> i2c_restartWrite(1), 
  5035 ;;  p               1    7[BANK0 ] PTR void 
  5036 ;;		 -> NULL(0), 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5048 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;Total ram usage:        4 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    7
  5055 ;; This function calls:
  5056 ;;		_setCallBack
  5057 ;; This function is called by:
  5058 ;;		_i2c_writeNBytes
  5059 ;;		_i2c_readDataBlock
  5060 ;;		_i2c_write1ByteRegister
  5061 ;;		_i2c_read1ByteRegister
  5062 ;;		_i2c_read2ByteRegister
  5063 ;;		_i2c_write2ByteRegister
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function _i2c_setAddressNACKCallback
  5069  0DBE                     _i2c_setAddressNACKCallback:	
  5070  0DBE                     l5312:	
  5071                           ;incstack = 0
  5072                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5073                           
  5074                           
  5075                           ;mcc_generated_files/drivers/i2c_master.c: 99: void i2c_setAddressNACKCallback(i2c_callb
      +                          ack cb, void *p);mcc_generated_files/drivers/i2c_master.c: 100: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 101:     setCallBack(i2c_addressNACK,cb,p);
  5076  0DBE  0020               	movlb	0	; select bank0
  5077  0DBF  0843               	movf	i2c_setAddressNACKCallback@cb+1,w
  5078  0DC0  00BE               	movwf	setCallBack@cb+1
  5079  0DC1  0842               	movf	i2c_setAddressNACKCallback@cb,w
  5080  0DC2  00BD               	movwf	setCallBack@cb
  5081  0DC3  0844               	movf	i2c_setAddressNACKCallback@p,w
  5082  0DC4  00C5               	movwf	??_i2c_setAddressNACKCallback
  5083  0DC5  0845               	movf	??_i2c_setAddressNACKCallback,w
  5084  0DC6  00BF               	movwf	setCallBack@p
  5085  0DC7  3002               	movlw	2
  5086  0DC8  318F  27AF  318D   	fcall	_setCallBack
  5087  0DCB                     l67:	
  5088  0DCB  0008               	return
  5089  0DCC                     __end_of_i2c_setAddressNACKCallback:	
  5090                           
  5091                           	psect	text9
  5092  03F4                     __ptext9:	
  5093 ;; *************** function _i2c_open *****************
  5094 ;; Defined at:
  5095 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  address         1    wreg     unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  address         1    3[BANK0 ] unsigned char 
  5100 ;;  ret             1    4[BANK0 ] enum E3252
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      enum E3252
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;Total ram usage:        3 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    7
  5117 ;; This function calls:
  5118 ;;		_i2c_driver_open
  5119 ;;		_i2c_driver_setBusCollisionISR
  5120 ;;		_i2c_driver_setI2cISR
  5121 ;;		_mssp_clearIRQ
  5122 ;; This function is called by:
  5123 ;;		_i2c_writeNBytes
  5124 ;;		_i2c_readDataBlock
  5125 ;;		_i2c_write1ByteRegister
  5126 ;;		_i2c_read1ByteRegister
  5127 ;;		_i2c_read2ByteRegister
  5128 ;;		_i2c_write2ByteRegister
  5129 ;;		_i2c_readNBytes
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           
  5134                           ;psect for function _i2c_open
  5135  03F4                     _i2c_open:	
  5136                           
  5137                           ;incstack = 0
  5138                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
  5139                           ;i2c_open@address stored from wreg
  5140  03F4  0020               	movlb	0	; select bank0
  5141  03F5  00C0               	movwf	i2c_open@address
  5142  03F6                     l5314:	
  5143                           
  5144                           ;mcc_generated_files/drivers/i2c_master.c: 116: i2c_error_t i2c_open(i2c_address_t addre
      +                          ss);mcc_generated_files/drivers/i2c_master.c: 117: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 118:     i2c_error_t ret = I2C_BUSY;
  5145  03F6  01C1               	clrf	i2c_open@ret
  5146  03F7  0AC1               	incf	i2c_open@ret,f
  5147                           
  5148                           ;mcc_generated_files/drivers/i2c_master.c: 120:     if(!i2c_status.inUse)
  5149  03F8  0021               	movlb	1	; select bank1
  5150  03F9  18A0               	btfsc	_i2c_status^(0+128),1
  5151  03FA  2BFC               	goto	u2991
  5152  03FB  2BFD               	goto	u2990
  5153  03FC                     u2991:	
  5154  03FC  2C42               	goto	l76
  5155  03FD                     u2990:	
  5156  03FD                     l5316:	
  5157                           
  5158                           ;mcc_generated_files/drivers/i2c_master.c: 121:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 122:         i2c_status.address = address;
  5159  03FD  0020               	movlb	0	; select bank0
  5160  03FE  0840               	movf	i2c_open@address,w
  5161  03FF  00BF               	movwf	??_i2c_open
  5162  0400  083F               	movf	??_i2c_open,w
  5163  0401  0021               	movlb	1	; select bank1
  5164  0402  00A1               	movwf	(_i2c_status^(0+128)+1)
  5165  0403                     l5318:	
  5166                           
  5167                           ;mcc_generated_files/drivers/i2c_master.c: 123:         i2c_status.busy = 0;
  5168  0403  1020               	bcf	_i2c_status^(0+128),0
  5169  0404                     l5320:	
  5170                           
  5171                           ;mcc_generated_files/drivers/i2c_master.c: 124:         i2c_status.inUse = 1;
  5172  0404  14A0               	bsf	_i2c_status^(0+128),1
  5173  0405                     l5322:	
  5174                           
  5175                           ;mcc_generated_files/drivers/i2c_master.c: 125:         i2c_status.addressNACKCheck = 0;
  5176  0405  11A0               	bcf	_i2c_status^(0+128),3
  5177                           
  5178                           ;mcc_generated_files/drivers/i2c_master.c: 126:         i2c_status.state = I2C_RESET;
  5179  0406  300E               	movlw	14
  5180  0407  0020               	movlb	0	; select bank0
  5181  0408  00BF               	movwf	??_i2c_open
  5182  0409  083F               	movf	??_i2c_open,w
  5183  040A  0021               	movlb	1	; select bank1
  5184  040B  00A9               	movwf	(_i2c_status^(0+128)+9)
  5185                           
  5186                           ;mcc_generated_files/drivers/i2c_master.c: 127:         i2c_status.time_out_value = 500;
  5187  040C  30F4               	movlw	244
  5188  040D  00A7               	movwf	(_i2c_status^(0+128)+7)
  5189  040E  3001               	movlw	1
  5190  040F  00A8               	movwf	(_i2c_status^(0+128)+8)
  5191  0410                     l5324:	
  5192                           
  5193                           ;mcc_generated_files/drivers/i2c_master.c: 128:         i2c_status.bufferFree = 1;
  5194  0410  1520               	bsf	_i2c_status^(0+128),2
  5195                           
  5196                           ;mcc_generated_files/drivers/i2c_master.c: 131:         i2c_status.callbackTable[i2c_dat
      +                          aComplete]=returnStop;
  5197  0411  307A               	movlw	low _returnStop
  5198  0412  00AB               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
  5199  0413  300C               	movlw	high _returnStop
  5200  0414  00AC               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
  5201  0415                     l5326:	
  5202                           
  5203                           ;mcc_generated_files/drivers/i2c_master.c: 132:         i2c_status.callbackPayload[i2c_d
      +                          ataComplete] = ((void*)0);
  5204  0415  01B7               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
  5205  0416                     l5328:	
  5206                           
  5207                           ;mcc_generated_files/drivers/i2c_master.c: 133:         i2c_status.callbackTable[i2c_wri
      +                          teCollision]=returnStop;
  5208  0416  307A               	movlw	low _returnStop
  5209  0417  00AD               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
  5210  0418  300C               	movlw	high _returnStop
  5211  0419  00AE               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
  5212                           
  5213                           ;mcc_generated_files/drivers/i2c_master.c: 134:         i2c_status.callbackPayload[i2c_w
      +                          riteCollision] = ((void*)0);
  5214  041A  01B8               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
  5215  041B                     l5330:	
  5216                           
  5217                           ;mcc_generated_files/drivers/i2c_master.c: 135:         i2c_status.callbackTable[i2c_add
      +                          ressNACK]=returnStop;
  5218  041B  307A               	movlw	low _returnStop
  5219  041C  00AF               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
  5220  041D  300C               	movlw	high _returnStop
  5221  041E  00B0               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
  5222  041F                     l5332:	
  5223                           
  5224                           ;mcc_generated_files/drivers/i2c_master.c: 136:         i2c_status.callbackPayload[i2c_a
      +                          ddressNACK] = ((void*)0);
  5225  041F  01B9               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
  5226                           
  5227                           ;mcc_generated_files/drivers/i2c_master.c: 137:         i2c_status.callbackTable[i2c_dat
      +                          aNACK]=returnStop;
  5228  0420  307A               	movlw	low _returnStop
  5229  0421  00B1               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
  5230  0422  300C               	movlw	high _returnStop
  5231  0423  00B2               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
  5232  0424                     l5334:	
  5233                           
  5234                           ;mcc_generated_files/drivers/i2c_master.c: 138:         i2c_status.callbackPayload[i2c_d
      +                          ataNACK] = ((void*)0);
  5235  0424  01BA               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
  5236  0425                     l5336:	
  5237                           
  5238                           ;mcc_generated_files/drivers/i2c_master.c: 139:         i2c_status.callbackTable[i2c_tim
      +                          eOut]=returnReset;
  5239  0425  3080               	movlw	low _returnReset
  5240  0426  00B3               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
  5241  0427  300C               	movlw	high _returnReset
  5242  0428  00B4               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
  5243                           
  5244                           ;mcc_generated_files/drivers/i2c_master.c: 140:         i2c_status.callbackPayload[i2c_t
      +                          imeOut] = ((void*)0);
  5245  0429  01BB               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
  5246  042A                     l5338:	
  5247                           
  5248                           ;mcc_generated_files/drivers/i2c_master.c: 142:         i2c_driver_open();
  5249  042A  318D  257B  3183   	fcall	_i2c_driver_open
  5250  042D                     l5340:	
  5251                           
  5252                           ;mcc_generated_files/drivers/i2c_master.c: 143:         mssp_clearIRQ();
  5253  042D  318C  2408  3183   	fcall	_mssp_clearIRQ
  5254  0430                     l5342:	
  5255                           
  5256                           ;mcc_generated_files/drivers/i2c_master.c: 145:         i2c_driver_setBusCollisionISR(i2
      +                          c_busCollisionISR);
  5257  0430  3020               	movlw	low _i2c_busCollisionISR
  5258  0431  0020               	movlb	0	; select bank0
  5259  0432  00BD               	movwf	i2c_driver_setBusCollisionISR@handler
  5260  0433  300C               	movlw	high _i2c_busCollisionISR
  5261  0434  00BE               	movwf	i2c_driver_setBusCollisionISR@handler+1
  5262  0435  318C  2492  3183   	fcall	_i2c_driver_setBusCollisionISR
  5263  0438                     l5344:	
  5264                           
  5265                           ;mcc_generated_files/drivers/i2c_master.c: 146:         i2c_driver_setI2cISR(i2c_ISR);
  5266  0438  30CF               	movlw	low _i2c_ISR
  5267  0439  0020               	movlb	0	; select bank0
  5268  043A  00BD               	movwf	i2c_driver_setI2cISR@handler
  5269  043B  3006               	movlw	high _i2c_ISR
  5270  043C  00BE               	movwf	i2c_driver_setI2cISR@handler+1
  5271  043D  318C  2498  3183   	fcall	_i2c_driver_setI2cISR
  5272  0440                     l5346:	
  5273                           
  5274                           ;mcc_generated_files/drivers/i2c_master.c: 151:         ret = I2C_NOERR;
  5275  0440  0020               	movlb	0	; select bank0
  5276  0441  01C1               	clrf	i2c_open@ret
  5277  0442                     l76:	
  5278                           ;mcc_generated_files/drivers/i2c_master.c: 152:     }
  5279                           
  5280                           
  5281                           ;mcc_generated_files/drivers/i2c_master.c: 153:     return ret;
  5282  0442  0020               	movlb	0	; select bank0
  5283  0443  0841               	movf	i2c_open@ret,w
  5284  0444                     l77:	
  5285  0444  0008               	return
  5286  0445                     __end_of_i2c_open:	
  5287                           
  5288                           	psect	text10
  5289  0C98                     __ptext10:	
  5290 ;; *************** function _i2c_driver_setI2cISR *****************
  5291 ;; Defined at:
  5292 ;;		line 263 in file "mcc_generated_files/i2c_driver.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  5295 ;;		 -> i2c_ISR(1), 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;Total ram usage:        2 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    6
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_i2c_open
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           
  5322                           ;psect for function _i2c_driver_setI2cISR
  5323  0C98                     _i2c_driver_setI2cISR:	
  5324  0C98                     l5286:	
  5325                           ;incstack = 0
  5326                           ; Regs used in _i2c_driver_setI2cISR: [wreg]
  5327                           
  5328                           
  5329                           ;mcc_generated_files/i2c_driver.c: 264:     i2c_driver_i2cISR = handler;
  5330  0C98  0020               	movlb	0	; select bank0
  5331  0C99  083E               	movf	i2c_driver_setI2cISR@handler+1,w
  5332  0C9A  00AF               	movwf	_i2c_driver_i2cISR+1
  5333  0C9B  083D               	movf	i2c_driver_setI2cISR@handler,w
  5334  0C9C  00AE               	movwf	_i2c_driver_i2cISR
  5335  0C9D                     l699:	
  5336  0C9D  0008               	return
  5337  0C9E                     __end_of_i2c_driver_setI2cISR:	
  5338                           
  5339                           	psect	text11
  5340  0C92                     __ptext11:	
  5341 ;; *************** function _i2c_driver_setBusCollisionISR *****************
  5342 ;; Defined at:
  5343 ;;		line 259 in file "mcc_generated_files/i2c_driver.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  5346 ;;		 -> i2c_busCollisionISR(1), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;Total ram usage:        2 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    6
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_i2c_open
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           
  5373                           ;psect for function _i2c_driver_setBusCollisionISR
  5374  0C92                     _i2c_driver_setBusCollisionISR:	
  5375  0C92                     l5284:	
  5376                           ;incstack = 0
  5377                           ; Regs used in _i2c_driver_setBusCollisionISR: [wreg]
  5378                           
  5379                           
  5380                           ;mcc_generated_files/i2c_driver.c: 260:     i2c_driver_busCollisionISR = handler;
  5381  0C92  0020               	movlb	0	; select bank0
  5382  0C93  083E               	movf	i2c_driver_setBusCollisionISR@handler+1,w
  5383  0C94  00FB               	movwf	_i2c_driver_busCollisionISR+1
  5384  0C95  083D               	movf	i2c_driver_setBusCollisionISR@handler,w
  5385  0C96  00FA               	movwf	_i2c_driver_busCollisionISR
  5386  0C97                     l696:	
  5387  0C97  0008               	return
  5388  0C98                     __end_of_i2c_driver_setBusCollisionISR:	
  5389                           
  5390                           	psect	text12
  5391  0D7B                     __ptext12:	
  5392 ;; *************** function _i2c_driver_open *****************
  5393 ;; Defined at:
  5394 ;;		line 84 in file "mcc_generated_files/i2c_driver.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, status,2
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    6
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_i2c_open
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function _i2c_driver_open
  5424  0D7B                     _i2c_driver_open:	
  5425  0D7B                     l5272:	
  5426                           ;incstack = 0
  5427                           ; Regs used in _i2c_driver_open: [wreg+status,2]
  5428                           
  5429  0D7B  0024               	movlb	4	; select bank4
  5430  0D7C  1A95               	btfsc	21,5	;volatile
  5431  0D7D  2D7F               	goto	u2951
  5432  0D7E  2D80               	goto	u2950
  5433  0D7F                     u2951:	
  5434  0D7F  2D86               	goto	l615
  5435  0D80                     u2950:	
  5436  0D80                     l5274:	
  5437  0D80  0194               	clrf	20	;volatile
  5438  0D81                     l5276:	
  5439  0D81  3028               	movlw	40
  5440  0D82  0095               	movwf	21	;volatile
  5441  0D83                     l5278:	
  5442  0D83  0196               	clrf	22	;volatile
  5443  0D84  304F               	movlw	79
  5444  0D85  0092               	movwf	18	;volatile
  5445  0D86                     l615:	
  5446  0D86  0008               	return
  5447  0D87                     __end_of_i2c_driver_open:	
  5448                           
  5449                           	psect	text13
  5450  0C69                     __ptext13:	
  5451 ;; *************** function _i2c_masterWrite *****************
  5452 ;; Defined at:
  5453 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      enum E3252
  5460 ;; Registers used:
  5461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:   13
  5474 ;; This function calls:
  5475 ;;		_i2c_masterOperation
  5476 ;; This function is called by:
  5477 ;;		_i2c_writeNBytes
  5478 ;;		_i2c_readDataBlock
  5479 ;;		_i2c_write1ByteRegister
  5480 ;;		_i2c_read1ByteRegister
  5481 ;;		_i2c_read2ByteRegister
  5482 ;;		_i2c_write2ByteRegister
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function _i2c_masterWrite
  5488  0C69                     _i2c_masterWrite:	
  5489  0C69                     l5362:	
  5490                           ;incstack = 0
  5491                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5492                           
  5493                           
  5494                           ;mcc_generated_files/drivers/i2c_master.c: 224:     return i2c_masterOperation(0);;	Retu
      +                          rn value of _i2c_masterWrite is never used
  5495  0C69  3000               	movlw	0
  5496  0C6A  3187  27B2  318C   	fcall	_i2c_masterOperation
  5497  0C6D                     l104:	
  5498  0C6D  0008               	return
  5499  0C6E                     __end_of_i2c_masterWrite:	
  5500                           
  5501                           	psect	text14
  5502  07B2                     __ptext14:	
  5503 ;; *************** function _i2c_masterOperation *****************
  5504 ;; Defined at:
  5505 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  read            1    wreg     _Bool 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  read            1    8[BANK0 ] _Bool 
  5510 ;;  ret             1    9[BANK0 ] enum E3252
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      enum E3252
  5513 ;; Registers used:
  5514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;Total ram usage:        3 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:   12
  5527 ;; This function calls:
  5528 ;;		_i2c_driver_start
  5529 ;;		_i2c_poller
  5530 ;;		_mssp_IRQisEnabled
  5531 ;; This function is called by:
  5532 ;;		_i2c_masterWrite
  5533 ;;		_i2c_masterRead
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _i2c_masterOperation
  5539  07B2                     _i2c_masterOperation:	
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5543                           ;i2c_masterOperation@read stored from wreg
  5544  07B2  0020               	movlb	0	; select bank0
  5545  07B3  00C5               	movwf	i2c_masterOperation@read
  5546  07B4                     l5290:	
  5547                           
  5548                           ;mcc_generated_files/drivers/i2c_master.c: 193: i2c_error_t i2c_masterOperation(_Bool re
      +                          ad);mcc_generated_files/drivers/i2c_master.c: 194: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 195:     i2c_error_t ret = I2C_BUSY;
  5549  07B4  01C6               	clrf	i2c_masterOperation@ret
  5550  07B5  0AC6               	incf	i2c_masterOperation@ret,f
  5551                           
  5552                           ;mcc_generated_files/drivers/i2c_master.c: 196:     if(!i2c_status.busy)
  5553  07B6  0021               	movlb	1	; select bank1
  5554  07B7  1820               	btfsc	_i2c_status^(0+128),0
  5555  07B8  2FBA               	goto	u2961
  5556  07B9  2FBB               	goto	u2960
  5557  07BA                     u2961:	
  5558  07BA  2FD9               	goto	l5306
  5559  07BB                     u2960:	
  5560  07BB                     l5292:	
  5561                           
  5562                           ;mcc_generated_files/drivers/i2c_master.c: 197:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 198:         i2c_status.busy = 1;
  5563  07BB  1420               	bsf	_i2c_status^(0+128),0
  5564  07BC                     l5294:	
  5565                           
  5566                           ;mcc_generated_files/drivers/i2c_master.c: 199:         ret = I2C_NOERR;
  5567  07BC  0020               	movlb	0	; select bank0
  5568  07BD  01C6               	clrf	i2c_masterOperation@ret
  5569  07BE                     l5296:	
  5570                           
  5571                           ;mcc_generated_files/drivers/i2c_master.c: 201:         if(read)
  5572  07BE  0845               	movf	i2c_masterOperation@read,w
  5573  07BF  1903               	btfsc	3,2
  5574  07C0  2FC2               	goto	u2971
  5575  07C1  2FC3               	goto	u2970
  5576  07C2                     u2971:	
  5577  07C2  2FC7               	goto	l5300
  5578  07C3                     u2970:	
  5579  07C3                     l5298:	
  5580                           
  5581                           ;mcc_generated_files/drivers/i2c_master.c: 202:         {;mcc_generated_files/drivers/i2
      +                          c_master.c: 203:             i2c_status.state = I2C_SEND_ADR_READ;
  5582  07C3  0021               	movlb	1	; select bank1
  5583  07C4  01A9               	clrf	(_i2c_status^(0+128)+9)
  5584  07C5  0AA9               	incf	(_i2c_status^(0+128)+9),f
  5585                           
  5586                           ;mcc_generated_files/drivers/i2c_master.c: 204:         }
  5587  07C6  2FCC               	goto	l5302
  5588  07C7                     l5300:	
  5589                           
  5590                           ;mcc_generated_files/drivers/i2c_master.c: 206:         {;mcc_generated_files/drivers/i2
      +                          c_master.c: 207:             i2c_status.state = I2C_SEND_ADR_WRITE;
  5591  07C7  3002               	movlw	2
  5592  07C8  00C4               	movwf	??_i2c_masterOperation
  5593  07C9  0844               	movf	??_i2c_masterOperation,w
  5594  07CA  0021               	movlb	1	; select bank1
  5595  07CB  00A9               	movwf	(_i2c_status^(0+128)+9)
  5596  07CC                     l5302:	
  5597                           
  5598                           ;mcc_generated_files/drivers/i2c_master.c: 209:         i2c_driver_start();
  5599  07CC  318C  240E  3187   	fcall	_i2c_driver_start
  5600                           
  5601                           ;mcc_generated_files/drivers/i2c_master.c: 211:         if(! mssp_IRQisEnabled())
  5602  07CF  318D  2536  3187   	fcall	_mssp_IRQisEnabled
  5603  07D2  1803               	btfsc	3,0
  5604  07D3  2FD5               	goto	u2981
  5605  07D4  2FD6               	goto	u2980
  5606  07D5                     u2981:	
  5607  07D5  2FD9               	goto	l5306
  5608  07D6                     u2980:	
  5609  07D6                     l5304:	
  5610                           
  5611                           ;mcc_generated_files/drivers/i2c_master.c: 212:             i2c_poller();
  5612  07D6  318D  25B0  3187   	fcall	_i2c_poller
  5613  07D9                     l5306:	
  5614                           
  5615                           ;mcc_generated_files/drivers/i2c_master.c: 214:     return ret;
  5616  07D9  0020               	movlb	0	; select bank0
  5617  07DA  0846               	movf	i2c_masterOperation@ret,w
  5618  07DB                     l98:	
  5619  07DB  0008               	return
  5620  07DC                     __end_of_i2c_masterOperation:	
  5621                           
  5622                           	psect	text15
  5623  0D36                     __ptext15:	
  5624 ;; *************** function _mssp_IRQisEnabled *****************
  5625 ;; Defined at:
  5626 ;;		line 44 in file "mcc_generated_files/i2c_driver.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;		None               void
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;Total ram usage:        2 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    6
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_i2c_masterOperation
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           
  5655                           ;psect for function _mssp_IRQisEnabled
  5656  0D36                     _mssp_IRQisEnabled:	
  5657  0D36                     l5254:	
  5658                           ;incstack = 0
  5659                           ; Regs used in _mssp_IRQisEnabled: [wreg+status,2+status,0]
  5660                           
  5661                           
  5662                           ;mcc_generated_files/i2c_driver.c: 46:             _delay((unsigned long)((100)*(3200000
      +                          0/4000000.0)));
  5663  0D36  0021               	movlb	1	; select bank1
  5664  0D37  0C11               	rrf	17,w	;volatile
  5665  0D38  0020               	movlb	0	; select bank0
  5666  0D39  00BD               	movwf	??_mssp_IRQisEnabled
  5667  0D3A  0CBD               	rrf	??_mssp_IRQisEnabled,f
  5668  0D3B  0C3D               	rrf	??_mssp_IRQisEnabled,w
  5669  0D3C  3901               	andlw	1
  5670  0D3D  00BE               	movwf	??_mssp_IRQisEnabled+1
  5671  0D3E  0C3E               	rrf	??_mssp_IRQisEnabled+1,w
  5672  0D3F                     l591:	
  5673  0D3F  0008               	return
  5674  0D40                     __end_of_mssp_IRQisEnabled:	
  5675                           
  5676                           	psect	text16
  5677  0DB0                     __ptext16:	
  5678 ;; *************** function _i2c_poller *****************
  5679 ;; Defined at:
  5680 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:   11
  5701 ;; This function calls:
  5702 ;;		_i2c_ISR
  5703 ;;		_mssp_waitForEvent
  5704 ;; This function is called by:
  5705 ;;		_i2c_masterOperation
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _i2c_poller
  5711  0DB0                     _i2c_poller:	
  5712  0DB0                     l5258:	
  5713                           ;incstack = 0
  5714                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5715                           
  5716                           
  5717                           ;mcc_generated_files/drivers/i2c_master.c: 232:     while(i2c_status.busy)
  5718  0DB0  2DB8               	goto	l5264
  5719  0DB1                     l5260:	
  5720                           
  5721                           ;mcc_generated_files/drivers/i2c_master.c: 233:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 234:         mssp_waitForEvent(((void*)0));
  5722  0DB1  3000               	movlw	0
  5723  0DB2  318D  25EB  318D   	fcall	_mssp_waitForEvent
  5724  0DB5                     l5262:	
  5725                           
  5726                           ;mcc_generated_files/drivers/i2c_master.c: 235:         i2c_ISR();
  5727  0DB5  3186  26CF  318D   	fcall	_i2c_ISR
  5728  0DB8                     l5264:	
  5729                           
  5730                           ;mcc_generated_files/drivers/i2c_master.c: 232:     while(i2c_status.busy)
  5731  0DB8  0021               	movlb	1	; select bank1
  5732  0DB9  1820               	btfsc	_i2c_status^(0+128),0
  5733  0DBA  2DBC               	goto	u2931
  5734  0DBB  2DBD               	goto	u2930
  5735  0DBC                     u2931:	
  5736  0DBC  2DB1               	goto	l5260
  5737  0DBD                     u2930:	
  5738  0DBD                     l110:	
  5739  0DBD  0008               	return
  5740  0DBE                     __end_of_i2c_poller:	
  5741                           
  5742                           	psect	text17
  5743  0DEB                     __ptext17:	
  5744 ;; *************** function _mssp_waitForEvent *****************
  5745 ;; Defined at:
  5746 ;;		line 69 in file "mcc_generated_files/i2c_driver.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  timeout         1    wreg     PTR unsigned short 
  5749 ;;		 -> NULL(0), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  timeout         1    0[BANK0 ] PTR unsigned short 
  5752 ;;		 -> NULL(0), 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;Total ram usage:        1 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    6
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_i2c_poller
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function _mssp_waitForEvent
  5778  0DEB                     _mssp_waitForEvent:	
  5779  0DEB                     l5236:	
  5780                           ;incstack = 0
  5781                           ; Regs used in _mssp_waitForEvent: [wreg]
  5782                           
  5783  0DEB  0020               	movlb	0	; select bank0
  5784  0DEC  1991               	btfsc	17,3	;volatile
  5785  0DED  2DEF               	goto	u2891
  5786  0DEE  2DF0               	goto	u2890
  5787  0DEF                     u2891:	
  5788  0DEF  2DFB               	goto	l611
  5789  0DF0                     u2890:	
  5790  0DF0                     l607:	
  5791  0DF0  0020               	movlb	0	; select bank0
  5792  0DF1  1D91               	btfss	17,3	;volatile
  5793  0DF2  2DF4               	goto	u2901
  5794  0DF3  2DF5               	goto	u2900
  5795  0DF4                     u2901:	
  5796  0DF4  2DF6               	goto	l5240
  5797  0DF5                     u2900:	
  5798  0DF5  2DFB               	goto	l611
  5799  0DF6                     l5240:	
  5800  0DF6  30A0               	movlw	160
  5801  0DF7                     u4057:	
  5802  0DF7  3200               	nop2
  5803  0DF8  0B89               	decfsz	9,f
  5804  0DF9  2DF7               	goto	u4057
  5805  0DFA  2DF0               	goto	l607
  5806  0DFB                     l611:	
  5807  0DFB  0008               	return
  5808  0DFC                     __end_of_mssp_waitForEvent:	
  5809                           
  5810                           	psect	text18
  5811  06CF                     __ptext18:	
  5812 ;; *************** function _i2c_ISR *****************
  5813 ;; Defined at:
  5814 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        3 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:   10
  5835 ;; This function calls:
  5836 ;;		_do_I2C_DO_ACK
  5837 ;;		_do_I2C_DO_ADDRESS_NACK
  5838 ;;		_do_I2C_DO_NACK_RESTART
  5839 ;;		_do_I2C_DO_NACK_STOP
  5840 ;;		_do_I2C_IDLE
  5841 ;;		_do_I2C_RCEN
  5842 ;;		_do_I2C_RESET
  5843 ;;		_do_I2C_RX
  5844 ;;		_do_I2C_SEND_ADR_READ
  5845 ;;		_do_I2C_SEND_ADR_WRITE
  5846 ;;		_do_I2C_SEND_RESTART
  5847 ;;		_do_I2C_SEND_RESTART_READ
  5848 ;;		_do_I2C_SEND_RESTART_WRITE
  5849 ;;		_do_I2C_SEND_STOP
  5850 ;;		_do_I2C_TX
  5851 ;;		_do_I2C_TX_EMPTY
  5852 ;;		_i2c_driver_isNACK
  5853 ;;		_mssp_clearIRQ
  5854 ;; This function is called by:
  5855 ;;		_i2c_open
  5856 ;;		_i2c_poller
  5857 ;;		_INTERRUPT_InterruptManager
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function _i2c_ISR
  5863  06CF                     _i2c_ISR:	
  5864                           
  5865                           ;Skip over the trampoline to the duplicate function for level 1
  5866  06CF  1C7E               	btfss	int$flags,0
  5867  06D0  2ED3               	goto	_i2c_ISR$intlevel0
  5868  06D1  318F  2FD6         	ljmp	i1_i2c_ISR
  5869  06D3                     _i2c_ISR$intlevel0:	
  5870  06D3                     l5242:	
  5871                           ;incstack = 0
  5872                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5873                           
  5874                           
  5875                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp_clearIRQ();
  5876  06D3  318C  2408  3186   	fcall	_mssp_clearIRQ
  5877  06D6                     l5244:	
  5878                           
  5879                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c_driver_isNACK())
  5880  06D6  0021               	movlb	1	; select bank1
  5881  06D7  1DA0               	btfss	_i2c_status^(0+128),3
  5882  06D8  2EDA               	goto	u2911
  5883  06D9  2EDB               	goto	u2910
  5884  06DA                     u2911:	
  5885  06DA  2EE8               	goto	l5250
  5886  06DB                     u2910:	
  5887  06DB                     l5246:	
  5888  06DB  318C  24E5  3186   	fcall	_i2c_driver_isNACK
  5889  06DE  1C03               	btfss	3,0
  5890  06DF  2EE1               	goto	u2921
  5891  06E0  2EE2               	goto	u2920
  5892  06E1                     u2921:	
  5893  06E1  2EE8               	goto	l5250
  5894  06E2                     u2920:	
  5895  06E2                     l5248:	
  5896                           
  5897                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  5898  06E2  300F               	movlw	15
  5899  06E3  0020               	movlb	0	; select bank0
  5900  06E4  00C1               	movwf	??_i2c_ISR
  5901  06E5  0841               	movf	??_i2c_ISR,w
  5902  06E6  0021               	movlb	1	; select bank1
  5903  06E7  00A9               	movwf	(_i2c_status^(0+128)+9)
  5904  06E8                     l5250:	
  5905                           
  5906                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  5907  06E8  0021               	movlb	1	; select bank1
  5908  06E9  0829               	movf	(_i2c_status^(0+128)+9),w
  5909  06EA  0020               	movlb	0	; select bank0
  5910  06EB  00C1               	movwf	??_i2c_ISR
  5911  06EC  01C2               	clrf	??_i2c_ISR+1
  5912  06ED  35C1               	lslf	??_i2c_ISR,f
  5913  06EE  0DC2               	rlf	??_i2c_ISR+1,f
  5914  06EF  3000               	movlw	low (_fsmStateTable| (0+32768))
  5915  06F0  0741               	addwf	??_i2c_ISR,w
  5916  06F1  0084               	movwf	4
  5917  06F2  3090               	movlw	high (_fsmStateTable| (0+32768))
  5918  06F3  3D42               	addwfc	??_i2c_ISR+1,w
  5919  06F4  0085               	movwf	5
  5920  06F5  3F01               	moviw [1]fsr0
  5921  06F6  008A               	movwf	10
  5922  06F7  3F00               	moviw [0]fsr0
  5923  06F8  000A               	callw
  5924  06F9  3186               	pagesel	$
  5925  06FA  0020               	movlb	0	; select bank0
  5926  06FB  00C3               	movwf	??_i2c_ISR+2
  5927  06FC  0843               	movf	??_i2c_ISR+2,w
  5928  06FD  0021               	movlb	1	; select bank1
  5929  06FE  00A9               	movwf	(_i2c_status^(0+128)+9)
  5930  06FF                     l198:	
  5931  06FF  0008               	return
  5932  0700                     __end_of_i2c_ISR:	
  5933                           
  5934                           	psect	text19
  5935  03A1                     __ptext19:	
  5936 ;; *************** function _do_I2C_RX *****************
  5937 ;; Defined at:
  5938 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      enum E3411
  5945 ;; Registers used:
  5946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;Total ram usage:        3 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    9
  5959 ;; This function calls:
  5960 ;;		Absolute function
  5961 ;;		_do_I2C_DO_NACK_RESTART
  5962 ;;		_do_I2C_DO_NACK_STOP
  5963 ;;		_i2c_driver_getRXData
  5964 ;;		_i2c_driver_sendACK
  5965 ;;		_i2c_restartWrite
  5966 ;;		_rd1RegCompleteHandler
  5967 ;;		_rd2RegCompleteHandler
  5968 ;;		_rdBlkRegCompleteHandler
  5969 ;;		_returnReset
  5970 ;;		_returnStop
  5971 ;;		_wr1RegCompleteHandler
  5972 ;;		_wr2RegCompleteHandler
  5973 ;; This function is called by:
  5974 ;;		_i2c_ISR
  5975 ;;		i1_i2c_ISR
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function _do_I2C_RX
  5981  03A1                     _do_I2C_RX:	
  5982                           
  5983                           ;Skip over the trampoline to the duplicate function for level 1
  5984  03A1  1C7E               	btfss	int$flags,0
  5985  03A2  2BA5               	goto	_do_I2C_RX$intlevel0
  5986  03A3  3184  2C45         	ljmp	i1_do_I2C_RX
  5987  03A5                     _do_I2C_RX$intlevel0:	
  5988  03A5                     l5182:	
  5989                           ;incstack = 0
  5990                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5991                           
  5992                           
  5993                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c_driver_
      +                          getRXData();
  5994  03A5  318C  241A  3183   	fcall	_i2c_driver_getRXData
  5995  03A8  0020               	movlb	0	; select bank0
  5996  03A9  00BD               	movwf	??_do_I2C_RX
  5997  03AA  0021               	movlb	1	; select bank1
  5998  03AB  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
  5999  03AC  0086               	movwf	6
  6000  03AD  0187               	clrf	7
  6001  03AE  0020               	movlb	0	; select bank0
  6002  03AF  083D               	movf	??_do_I2C_RX,w
  6003  03B0  0081               	movwf	1
  6004  03B1                     l5184:	
  6005  03B1  3001               	movlw	1
  6006  03B2  00BD               	movwf	??_do_I2C_RX
  6007  03B3  083D               	movf	??_do_I2C_RX,w
  6008  03B4  0021               	movlb	1	; select bank1
  6009  03B5  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
  6010  03B6                     l5186:	
  6011                           
  6012                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  6013  03B6  3001               	movlw	1
  6014  03B7  02A3               	subwf	(_i2c_status^(0+128)+3),f
  6015  03B8  3000               	movlw	0
  6016  03B9  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
  6017  03BA  0823               	movf	(_i2c_status^(0+128)+3),w
  6018  03BB  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
  6019  03BC  1903               	btfsc	3,2
  6020  03BD  2BBF               	goto	u2881
  6021  03BE  2BC0               	goto	u2880
  6022  03BF                     u2881:	
  6023  03BF  2BC5               	goto	l173
  6024  03C0                     u2880:	
  6025  03C0                     l5188:	
  6026                           
  6027                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c_driver_sendACK();
  6028  03C0  318C  2434  3183   	fcall	_i2c_driver_sendACK
  6029  03C3                     l5190:	
  6030                           
  6031                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  6032  03C3  3005               	movlw	5
  6033  03C4  2BF3               	goto	l174
  6034  03C5                     l173:	
  6035                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  6036                           
  6037                           
  6038                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  6039  03C5  1520               	bsf	_i2c_status^(0+128),2
  6040                           
  6041                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  6042  03C6  2BCF               	goto	l5206
  6043  03C7                     l5196:	
  6044                           
  6045                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  6046  03C7  318D  252D  3183   	fcall	_do_I2C_DO_NACK_RESTART
  6047  03CA  2BF3               	goto	l174
  6048  03CB                     l5200:	
  6049                           
  6050                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  6051  03CB  318D  2524  3183   	fcall	_do_I2C_DO_NACK_STOP
  6052  03CE  2BF3               	goto	l174
  6053  03CF                     l5206:	
  6054  03CF  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  6055  03D0  0020               	movlb	0	; select bank0
  6056  03D1  00BD               	movwf	??_do_I2C_RX
  6057  03D2  083D               	movf	??_do_I2C_RX,w
  6058  03D3  00C6               	movwf	wr1RegCompleteHandler@p
  6059  03D4  300B               	movlw	11
  6060  03D5  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6061  03D6  0086               	movwf	6
  6062  03D7  0187               	clrf	7
  6063  03D8  3F41               	moviw [1]fsr1
  6064  03D9  008A               	movwf	10
  6065  03DA  3F40               	moviw [0]fsr1
  6066  03DB  000A               	callw
  6067  03DC  3183               	pagesel	$
  6068  03DD  0020               	movlb	0	; select bank0
  6069  03DE  00BE               	movwf	??_do_I2C_RX+1
  6070  03DF  01BF               	clrf	??_do_I2C_RX+2
  6071                           
  6072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6073                           ; Switch size 1, requested type "simple"
  6074                           ; Number of cases is 1, Range of values is 0 to 0
  6075                           ; switch strategies available:
  6076                           ; Name         Instructions Cycles
  6077                           ; simple_byte            4     3 (average)
  6078                           ; direct_byte            8     6 (fixed)
  6079                           ; jumptable            260     6 (fixed)
  6080                           ;	Chosen strategy is simple_byte
  6081  03E0  083F               	movf	??_do_I2C_RX+2,w
  6082  03E1  3A00               	xorlw	0	; case 0
  6083  03E2  1903               	skipnz
  6084  03E3  2BE5               	goto	l6362
  6085  03E4  2BCB               	goto	l5200
  6086  03E5                     l6362:	
  6087                           
  6088                           ; Switch size 1, requested type "simple"
  6089                           ; Number of cases is 4, Range of values is 1 to 4
  6090                           ; switch strategies available:
  6091                           ; Name         Instructions Cycles
  6092                           ; simple_byte           13     7 (average)
  6093                           ; direct_byte           17     9 (fixed)
  6094                           ; jumptable            263     9 (fixed)
  6095                           ;	Chosen strategy is simple_byte
  6096  03E5  083E               	movf	??_do_I2C_RX+1,w
  6097  03E6  3A01               	xorlw	1	; case 1
  6098  03E7  1903               	skipnz
  6099  03E8  2BCB               	goto	l5200
  6100  03E9  3A03               	xorlw	3	; case 2
  6101  03EA  1903               	skipnz
  6102  03EB  2BC7               	goto	l5196
  6103  03EC  3A01               	xorlw	1	; case 3
  6104  03ED  1903               	skipnz
  6105  03EE  2BC7               	goto	l5196
  6106  03EF  3A07               	xorlw	7	; case 4
  6107  03F0  1903               	skipnz
  6108  03F1  2BCB               	goto	l5200
  6109  03F2  2BCB               	goto	l5200
  6110  03F3                     l174:	
  6111  03F3  0008               	return
  6112  03F4                     __end_of_do_I2C_RX:	
  6113                           
  6114                           	psect	text20
  6115  02F2                     __ptext20:	
  6116 ;; *************** function _do_I2C_TX *****************
  6117 ;; Defined at:
  6118 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      enum E3411
  6125 ;; Registers used:
  6126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;Total ram usage:        3 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    9
  6139 ;; This function calls:
  6140 ;;		Absolute function
  6141 ;;		_do_I2C_SEND_RESTART_READ
  6142 ;;		_do_I2C_SEND_RESTART_WRITE
  6143 ;;		_do_I2C_SEND_STOP
  6144 ;;		_i2c_driver_TXData
  6145 ;;		_i2c_driver_isNACK
  6146 ;;		_i2c_restartWrite
  6147 ;;		_rd1RegCompleteHandler
  6148 ;;		_rd2RegCompleteHandler
  6149 ;;		_rdBlkRegCompleteHandler
  6150 ;;		_returnReset
  6151 ;;		_returnStop
  6152 ;;		_wr1RegCompleteHandler
  6153 ;;		_wr2RegCompleteHandler
  6154 ;; This function is called by:
  6155 ;;		_i2c_ISR
  6156 ;;		i1_i2c_ISR
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function _do_I2C_TX
  6162  02F2                     _do_I2C_TX:	
  6163                           
  6164                           ;Skip over the trampoline to the duplicate function for level 1
  6165  02F2  1C7E               	btfss	int$flags,0
  6166  02F3  2AF6               	goto	_do_I2C_TX$intlevel0
  6167  02F4  3183  2B4C         	ljmp	i1_do_I2C_TX
  6168  02F6                     _do_I2C_TX$intlevel0:	
  6169  02F6                     l5148:	
  6170                           ;incstack = 0
  6171                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6172                           
  6173                           
  6174                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c_driver_isNACK())
  6175  02F6  318C  24E5  3182   	fcall	_i2c_driver_isNACK
  6176  02F9  1C03               	btfss	3,0
  6177  02FA  2AFC               	goto	u2861
  6178  02FB  2AFD               	goto	u2860
  6179  02FC                     u2861:	
  6180  02FC  2B2F               	goto	l157
  6181  02FD                     u2860:	
  6182  02FD  2B0A               	goto	l5166
  6183  02FE                     l5152:	
  6184                           
  6185                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  6186  02FE  318C  24F7  3182   	fcall	_do_I2C_SEND_RESTART_READ
  6187  0301  2B4B               	goto	l160
  6188  0302                     l5156:	
  6189                           
  6190                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  6191  0302  318D  2500  3182   	fcall	_do_I2C_SEND_RESTART_WRITE
  6192  0305  2B4B               	goto	l160
  6193  0306                     l5160:	
  6194                           
  6195                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  6196  0306  318D  2512  3182   	fcall	_do_I2C_SEND_STOP
  6197  0309  2B4B               	goto	l160
  6198  030A                     l5166:	
  6199  030A  0021               	movlb	1	; select bank1
  6200  030B  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
  6201  030C  0020               	movlb	0	; select bank0
  6202  030D  00BE               	movwf	??_do_I2C_TX
  6203  030E  083E               	movf	??_do_I2C_TX,w
  6204  030F  00C6               	movwf	wr1RegCompleteHandler@p
  6205  0310  3011               	movlw	17
  6206  0311  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6207  0312  0086               	movwf	6
  6208  0313  0187               	clrf	7
  6209  0314  3F41               	moviw [1]fsr1
  6210  0315  008A               	movwf	10
  6211  0316  3F40               	moviw [0]fsr1
  6212  0317  000A               	callw
  6213  0318  3182               	pagesel	$
  6214  0319  0020               	movlb	0	; select bank0
  6215  031A  00BF               	movwf	??_do_I2C_TX+1
  6216  031B  01C0               	clrf	??_do_I2C_TX+2
  6217                           
  6218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6219                           ; Switch size 1, requested type "simple"
  6220                           ; Number of cases is 1, Range of values is 0 to 0
  6221                           ; switch strategies available:
  6222                           ; Name         Instructions Cycles
  6223                           ; simple_byte            4     3 (average)
  6224                           ; direct_byte            8     6 (fixed)
  6225                           ; jumptable            260     6 (fixed)
  6226                           ;	Chosen strategy is simple_byte
  6227  031C  0840               	movf	??_do_I2C_TX+2,w
  6228  031D  3A00               	xorlw	0	; case 0
  6229  031E  1903               	skipnz
  6230  031F  2B21               	goto	l6364
  6231  0320  2B06               	goto	l5160
  6232  0321                     l6364:	
  6233                           
  6234                           ; Switch size 1, requested type "simple"
  6235                           ; Number of cases is 4, Range of values is 1 to 4
  6236                           ; switch strategies available:
  6237                           ; Name         Instructions Cycles
  6238                           ; simple_byte           13     7 (average)
  6239                           ; direct_byte           17     9 (fixed)
  6240                           ; jumptable            263     9 (fixed)
  6241                           ;	Chosen strategy is simple_byte
  6242  0321  083F               	movf	??_do_I2C_TX+1,w
  6243  0322  3A01               	xorlw	1	; case 1
  6244  0323  1903               	skipnz
  6245  0324  2B06               	goto	l5160
  6246  0325  3A03               	xorlw	3	; case 2
  6247  0326  1903               	skipnz
  6248  0327  2AFE               	goto	l5152
  6249  0328  3A01               	xorlw	1	; case 3
  6250  0329  1903               	skipnz
  6251  032A  2B02               	goto	l5156
  6252  032B  3A07               	xorlw	7	; case 4
  6253  032C  1903               	skipnz
  6254  032D  2B06               	goto	l5160
  6255  032E  2B06               	goto	l5160
  6256  032F                     l157:	
  6257                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  6258                           
  6259                           
  6260                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  6261  032F  0021               	movlb	1	; select bank1
  6262  0330  11A0               	bcf	_i2c_status^(0+128),3
  6263  0331                     l5168:	
  6264                           
  6265                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c_driver_TXData(*i2c_status.da
      +                          ta_ptr++);
  6266  0331  3002               	movlw	2
  6267  0332  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6268  0333  0086               	movwf	6
  6269  0334  0187               	clrf	7
  6270  0335  3F40               	moviw [0]fsr1
  6271  0336  0084               	movwf	4
  6272  0337  0185               	clrf	5
  6273  0338  0A81               	incf	1,f
  6274  0339  0800               	movf	0,w
  6275  033A  318C  248C  3182   	fcall	_i2c_driver_TXData
  6276  033D                     l5170:	
  6277                           
  6278                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  6279  033D  3001               	movlw	1
  6280  033E  0021               	movlb	1	; select bank1
  6281  033F  02A3               	subwf	(_i2c_status^(0+128)+3),f
  6282  0340  3000               	movlw	0
  6283  0341  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
  6284  0342  0823               	movf	(_i2c_status^(0+128)+3),w
  6285  0343  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
  6286  0344  1D03               	btfss	3,2
  6287  0345  2B47               	goto	u2871
  6288  0346  2B48               	goto	u2870
  6289  0347                     u2871:	
  6290  0347  2B4A               	goto	l5174
  6291  0348                     u2870:	
  6292  0348                     l5172:	
  6293  0348  3006               	movlw	6
  6294  0349  2B4B               	goto	l160
  6295  034A                     l5174:	
  6296  034A  3003               	movlw	3
  6297  034B                     l160:	
  6298  034B  0008               	return
  6299  034C                     __end_of_do_I2C_TX:	
  6300                           
  6301                           	psect	text21
  6302  0633                     __ptext21:	
  6303 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  6304 ;; Defined at:
  6305 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      enum E3411
  6312 ;; Registers used:
  6313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;Total ram usage:        3 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    9
  6326 ;; This function calls:
  6327 ;;		Absolute function
  6328 ;;		_do_I2C_SEND_RESTART
  6329 ;;		_do_I2C_SEND_STOP
  6330 ;;		_i2c_restartWrite
  6331 ;;		_rd1RegCompleteHandler
  6332 ;;		_rd2RegCompleteHandler
  6333 ;;		_rdBlkRegCompleteHandler
  6334 ;;		_returnReset
  6335 ;;		_returnStop
  6336 ;;		_wr1RegCompleteHandler
  6337 ;;		_wr2RegCompleteHandler
  6338 ;; This function is called by:
  6339 ;;		_i2c_ISR
  6340 ;;		i1_i2c_ISR
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  6346  0633                     _do_I2C_DO_ADDRESS_NACK:	
  6347                           
  6348                           ;Skip over the trampoline to the duplicate function for level 1
  6349  0633  1C7E               	btfss	int$flags,0
  6350  0634  2E37               	goto	_do_I2C_DO_ADDRESS_NACK$intlevel0
  6351  0635  3187  2F5B         	ljmp	i1_do_I2C_DO_ADDRESS_NACK
  6352  0637                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
  6353  0637                     l5128:	
  6354                           ;incstack = 0
  6355                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6356                           
  6357                           
  6358                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  6359  0637  0021               	movlb	1	; select bank1
  6360  0638  11A0               	bcf	_i2c_status^(0+128),3
  6361  0639                     l5130:	
  6362                           
  6363                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  6364  0639  3002               	movlw	2
  6365  063A  0020               	movlb	0	; select bank0
  6366  063B  00BD               	movwf	??_do_I2C_DO_ADDRESS_NACK
  6367  063C  083D               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  6368  063D  0021               	movlb	1	; select bank1
  6369  063E  00AA               	movwf	(_i2c_status^(0+128)+10)
  6370                           
  6371                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  6372  063F  2E48               	goto	l5142
  6373  0640                     l5132:	
  6374                           
  6375                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  6376  0640  318D  2509  3186   	fcall	_do_I2C_SEND_RESTART
  6377  0643  2E66               	goto	l152
  6378  0644                     l5136:	
  6379                           
  6380                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  6381  0644  318D  2512  3186   	fcall	_do_I2C_SEND_STOP
  6382  0647  2E66               	goto	l152
  6383  0648                     l5142:	
  6384  0648  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
  6385  0649  0020               	movlb	0	; select bank0
  6386  064A  00BD               	movwf	??_do_I2C_DO_ADDRESS_NACK
  6387  064B  083D               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  6388  064C  00C6               	movwf	wr1RegCompleteHandler@p
  6389  064D  300F               	movlw	15
  6390  064E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6391  064F  0086               	movwf	6
  6392  0650  0187               	clrf	7
  6393  0651  3F41               	moviw [1]fsr1
  6394  0652  008A               	movwf	10
  6395  0653  3F40               	moviw [0]fsr1
  6396  0654  000A               	callw
  6397  0655  3186               	pagesel	$
  6398  0656  0020               	movlb	0	; select bank0
  6399  0657  00BE               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  6400  0658  01BF               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  6401                           
  6402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6403                           ; Switch size 1, requested type "simple"
  6404                           ; Number of cases is 1, Range of values is 0 to 0
  6405                           ; switch strategies available:
  6406                           ; Name         Instructions Cycles
  6407                           ; simple_byte            4     3 (average)
  6408                           ; direct_byte            8     6 (fixed)
  6409                           ; jumptable            260     6 (fixed)
  6410                           ;	Chosen strategy is simple_byte
  6411  0659  083F               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  6412  065A  3A00               	xorlw	0	; case 0
  6413  065B  1903               	skipnz
  6414  065C  2E5E               	goto	l6366
  6415  065D  2E44               	goto	l5136
  6416  065E                     l6366:	
  6417                           
  6418                           ; Switch size 1, requested type "simple"
  6419                           ; Number of cases is 2, Range of values is 2 to 3
  6420                           ; switch strategies available:
  6421                           ; Name         Instructions Cycles
  6422                           ; simple_byte            7     4 (average)
  6423                           ; direct_byte           13     9 (fixed)
  6424                           ; jumptable            263     9 (fixed)
  6425                           ;	Chosen strategy is simple_byte
  6426  065E  083E               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  6427  065F  3A02               	xorlw	2	; case 2
  6428  0660  1903               	skipnz
  6429  0661  2E40               	goto	l5132
  6430  0662  3A01               	xorlw	1	; case 3
  6431  0663  1903               	skipnz
  6432  0664  2E40               	goto	l5132
  6433  0665  2E44               	goto	l5136
  6434  0666                     l152:	
  6435  0666  0008               	return
  6436  0667                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  6437                           
  6438                           	psect	text22
  6439  0D2D                     __ptext22:	
  6440 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  6441 ;; Defined at:
  6442 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1    wreg      enum E3411
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0, pclath, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;Total ram usage:        0 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:    7
  6463 ;; This function calls:
  6464 ;;		_i2c_driver_sendNACK
  6465 ;; This function is called by:
  6466 ;;		_do_I2C_RX
  6467 ;;		_i2c_ISR
  6468 ;;		i1_i2c_ISR
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           
  6473                           ;psect for function _do_I2C_DO_NACK_RESTART
  6474  0D2D                     _do_I2C_DO_NACK_RESTART:	
  6475                           
  6476                           ;Skip over the trampoline to the duplicate function for level 1
  6477  0D2D  1C7E               	btfss	int$flags,0
  6478  0D2E  2D31               	goto	_do_I2C_DO_NACK_RESTART$intlevel0
  6479  0D2F  318C  2C64         	ljmp	i1_do_I2C_DO_NACK_RESTART
  6480  0D31                     _do_I2C_DO_NACK_RESTART$intlevel0:	
  6481  0D31                     l5012:	
  6482                           ;incstack = 0
  6483                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6484                           
  6485                           
  6486                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c_driver_sendNACK();
  6487  0D31  318C  2438  318D   	fcall	_i2c_driver_sendNACK
  6488  0D34                     l5014:	
  6489                           
  6490                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  6491  0D34  3009               	movlw	9
  6492  0D35                     l146:	
  6493  0D35  0008               	return
  6494  0D36                     __end_of_do_I2C_DO_NACK_RESTART:	
  6495                           
  6496                           	psect	text23
  6497  0D24                     __ptext23:	
  6498 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  6499 ;; Defined at:
  6500 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      enum E3411
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0, pclath, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    7
  6521 ;; This function calls:
  6522 ;;		_i2c_driver_sendNACK
  6523 ;; This function is called by:
  6524 ;;		_do_I2C_RX
  6525 ;;		_i2c_ISR
  6526 ;;		i1_i2c_ISR
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function _do_I2C_DO_NACK_STOP
  6532  0D24                     _do_I2C_DO_NACK_STOP:	
  6533                           
  6534                           ;Skip over the trampoline to the duplicate function for level 1
  6535  0D24  1C7E               	btfss	int$flags,0
  6536  0D25  2D28               	goto	_do_I2C_DO_NACK_STOP$intlevel0
  6537  0D26  318C  2C5F         	ljmp	i1_do_I2C_DO_NACK_STOP
  6538  0D28                     _do_I2C_DO_NACK_STOP$intlevel0:	
  6539  0D28                     l5006:	
  6540                           ;incstack = 0
  6541                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  6542                           
  6543                           
  6544                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c_driver_sendNACK();
  6545  0D28  318C  2438  318D   	fcall	_i2c_driver_sendNACK
  6546  0D2B                     l5008:	
  6547                           
  6548                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  6549  0D2B  300A               	movlw	10
  6550  0D2C                     l143:	
  6551  0D2C  0008               	return
  6552  0D2D                     __end_of_do_I2C_DO_NACK_STOP:	
  6553                           
  6554                           	psect	text24
  6555  0D1B                     __ptext24:	
  6556 ;; *************** function _do_I2C_DO_ACK *****************
  6557 ;; Defined at:
  6558 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;		None
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      enum E3411
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0, pclath, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;Total ram usage:        0 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    7
  6579 ;; This function calls:
  6580 ;;		_i2c_driver_sendACK
  6581 ;; This function is called by:
  6582 ;;		_i2c_ISR
  6583 ;;		i1_i2c_ISR
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           
  6588                           ;psect for function _do_I2C_DO_ACK
  6589  0D1B                     _do_I2C_DO_ACK:	
  6590                           
  6591                           ;Skip over the trampoline to the duplicate function for level 1
  6592  0D1B  1C7E               	btfss	int$flags,0
  6593  0D1C  2D1F               	goto	_do_I2C_DO_ACK$intlevel0
  6594  0D1D  318C  2C5A         	ljmp	i1_do_I2C_DO_ACK
  6595  0D1F                     _do_I2C_DO_ACK$intlevel0:	
  6596  0D1F                     l5122:	
  6597                           ;incstack = 0
  6598                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  6599                           
  6600                           
  6601                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c_driver_sendACK();
  6602  0D1F  318C  2434  318D   	fcall	_i2c_driver_sendACK
  6603  0D22                     l5124:	
  6604                           
  6605                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  6606  0D22  3005               	movlw	5
  6607  0D23                     l140:	
  6608  0D23  0008               	return
  6609  0D24                     __end_of_do_I2C_DO_ACK:	
  6610                           
  6611                           	psect	text25
  6612  0D40                     __ptext25:	
  6613 ;; *************** function _do_I2C_RCEN *****************
  6614 ;; Defined at:
  6615 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      enum E3411
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, pclath, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;Total ram usage:        0 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    7
  6636 ;; This function calls:
  6637 ;;		_i2c_driver_startRX
  6638 ;; This function is called by:
  6639 ;;		_i2c_ISR
  6640 ;;		i1_i2c_ISR
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           
  6645                           ;psect for function _do_I2C_RCEN
  6646  0D40                     _do_I2C_RCEN:	
  6647                           
  6648                           ;Skip over the trampoline to the duplicate function for level 1
  6649  0D40  1C7E               	btfss	int$flags,0
  6650  0D41  2D44               	goto	_do_I2C_RCEN$intlevel0
  6651  0D42  318C  2CA4         	ljmp	i1_do_I2C_RCEN
  6652  0D44                     _do_I2C_RCEN$intlevel0:	
  6653  0D44                     l5114:	
  6654                           ;incstack = 0
  6655                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6656                           
  6657                           
  6658                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  6659  0D44  0021               	movlb	1	; select bank1
  6660  0D45  11A0               	bcf	_i2c_status^(0+128),3
  6661  0D46                     l5116:	
  6662                           
  6663                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c_driver_startRX();
  6664  0D46  318C  2417  318D   	fcall	_i2c_driver_startRX
  6665  0D49                     l5118:	
  6666                           
  6667                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  6668  0D49  3004               	movlw	4
  6669  0D4A                     l137:	
  6670  0D4A  0008               	return
  6671  0D4B                     __end_of_do_I2C_RCEN:	
  6672                           
  6673                           	psect	text26
  6674  0D6F                     __ptext26:	
  6675 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  6676 ;; Defined at:
  6677 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;		None
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;		None
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  1    wreg      enum E3411
  6684 ;; Registers used:
  6685 ;;		wreg, status,2, status,0, pclath, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;Total ram usage:        0 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:    7
  6698 ;; This function calls:
  6699 ;;		_i2c_driver_TXData
  6700 ;; This function is called by:
  6701 ;;		_i2c_ISR
  6702 ;;		i1_i2c_ISR
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           
  6707                           ;psect for function _do_I2C_SEND_ADR_WRITE
  6708  0D6F                     _do_I2C_SEND_ADR_WRITE:	
  6709                           
  6710                           ;Skip over the trampoline to the duplicate function for level 1
  6711  0D6F  1C7E               	btfss	int$flags,0
  6712  0D70  2D73               	goto	_do_I2C_SEND_ADR_WRITE$intlevel0
  6713  0D71  318C  2CC3         	ljmp	i1_do_I2C_SEND_ADR_WRITE
  6714  0D73                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
  6715  0D73                     l5106:	
  6716                           ;incstack = 0
  6717                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6718                           
  6719                           
  6720                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  6721  0D73  0021               	movlb	1	; select bank1
  6722  0D74  15A0               	bsf	_i2c_status^(0+128),3
  6723  0D75                     l5108:	
  6724                           
  6725                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c_driver_TXData(i2c_status.address
      +                           << 1);
  6726  0D75  3521               	lslf	(_i2c_status^(0+128)+1),w
  6727  0D76  318C  248C  318D   	fcall	_i2c_driver_TXData
  6728  0D79                     l5110:	
  6729                           
  6730                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  6731  0D79  3003               	movlw	3
  6732  0D7A                     l134:	
  6733  0D7A  0008               	return
  6734  0D7B                     __end_of_do_I2C_SEND_ADR_WRITE:	
  6735                           
  6736                           	psect	text27
  6737  0D87                     __ptext27:	
  6738 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  6739 ;; Defined at:
  6740 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      enum E3411
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    7
  6761 ;; This function calls:
  6762 ;;		_i2c_driver_TXData
  6763 ;; This function is called by:
  6764 ;;		_i2c_ISR
  6765 ;;		i1_i2c_ISR
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function _do_I2C_SEND_ADR_READ
  6771  0D87                     _do_I2C_SEND_ADR_READ:	
  6772                           
  6773                           ;Skip over the trampoline to the duplicate function for level 1
  6774  0D87  1C7E               	btfss	int$flags,0
  6775  0D88  2D8B               	goto	_do_I2C_SEND_ADR_READ$intlevel0
  6776  0D89  318C  2CDC         	ljmp	i1_do_I2C_SEND_ADR_READ
  6777  0D8B                     _do_I2C_SEND_ADR_READ$intlevel0:	
  6778  0D8B                     l5098:	
  6779                           ;incstack = 0
  6780                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6781                           
  6782                           
  6783                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  6784  0D8B  0021               	movlb	1	; select bank1
  6785  0D8C  15A0               	bsf	_i2c_status^(0+128),3
  6786  0D8D                     l5100:	
  6787                           
  6788                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c_driver_TXData(i2c_status.address
      +                           << 1 | 1);
  6789  0D8D  1403               	setc
  6790  0D8E  0D21               	rlf	(_i2c_status^(0+128)+1),w
  6791  0D8F  318C  248C  318D   	fcall	_i2c_driver_TXData
  6792  0D92                     l5102:	
  6793                           
  6794                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  6795  0D92  3005               	movlw	5
  6796  0D93                     l131:	
  6797  0D93  0008               	return
  6798  0D94                     __end_of_do_I2C_SEND_ADR_READ:	
  6799                           
  6800                           	psect	text28
  6801  0D12                     __ptext28:	
  6802 ;; *************** function _do_I2C_SEND_STOP *****************
  6803 ;; Defined at:
  6804 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      enum E3411
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0, pclath, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;Total ram usage:        0 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    7
  6825 ;; This function calls:
  6826 ;;		_i2c_driver_stop
  6827 ;; This function is called by:
  6828 ;;		_do_I2C_DO_ADDRESS_NACK
  6829 ;;		_do_I2C_TX
  6830 ;;		_do_I2C_TX_EMPTY
  6831 ;;		_i2c_ISR
  6832 ;;		i1_i2c_ISR
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           
  6837                           ;psect for function _do_I2C_SEND_STOP
  6838  0D12                     _do_I2C_SEND_STOP:	
  6839                           
  6840                           ;Skip over the trampoline to the duplicate function for level 1
  6841  0D12  1C7E               	btfss	int$flags,0
  6842  0D13  2D16               	goto	_do_I2C_SEND_STOP$intlevel0
  6843  0D14  318C  2C55         	ljmp	i1_do_I2C_SEND_STOP
  6844  0D16                     _do_I2C_SEND_STOP$intlevel0:	
  6845  0D16                     l4994:	
  6846                           ;incstack = 0
  6847                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  6848                           
  6849                           
  6850                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c_driver_stop();
  6851  0D16  318C  2414  318D   	fcall	_i2c_driver_stop
  6852  0D19                     l4996:	
  6853                           
  6854                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  6855  0D19  3000               	movlw	0
  6856  0D1A                     l128:	
  6857  0D1A  0008               	return
  6858  0D1B                     __end_of_do_I2C_SEND_STOP:	
  6859                           
  6860                           	psect	text29
  6861  0D09                     __ptext29:	
  6862 ;; *************** function _do_I2C_SEND_RESTART *****************
  6863 ;; Defined at:
  6864 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      enum E3411
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0, pclath, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:    7
  6885 ;; This function calls:
  6886 ;;		_i2c_driver_restart
  6887 ;; This function is called by:
  6888 ;;		_do_I2C_DO_ADDRESS_NACK
  6889 ;;		_do_I2C_TX_EMPTY
  6890 ;;		_i2c_ISR
  6891 ;;		i1_i2c_ISR
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _do_I2C_SEND_RESTART
  6897  0D09                     _do_I2C_SEND_RESTART:	
  6898                           
  6899                           ;Skip over the trampoline to the duplicate function for level 1
  6900  0D09  1C7E               	btfss	int$flags,0
  6901  0D0A  2D0D               	goto	_do_I2C_SEND_RESTART$intlevel0
  6902  0D0B  318C  2C50         	ljmp	i1_do_I2C_SEND_RESTART
  6903  0D0D                     _do_I2C_SEND_RESTART$intlevel0:	
  6904  0D0D                     l4988:	
  6905                           ;incstack = 0
  6906                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6907                           
  6908                           
  6909                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c_driver_restart();
  6910  0D0D  318C  2411  318D   	fcall	_i2c_driver_restart
  6911  0D10                     l4990:	
  6912                           
  6913                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  6914  0D10  3001               	movlw	1
  6915  0D11                     l125:	
  6916  0D11  0008               	return
  6917  0D12                     __end_of_do_I2C_SEND_RESTART:	
  6918                           
  6919                           	psect	text30
  6920  0D00                     __ptext30:	
  6921 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  6922 ;; Defined at:
  6923 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      enum E3411
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    7
  6944 ;; This function calls:
  6945 ;;		_i2c_driver_restart
  6946 ;; This function is called by:
  6947 ;;		_do_I2C_TX
  6948 ;;		_i2c_ISR
  6949 ;;		i1_i2c_ISR
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           
  6954                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  6955  0D00                     _do_I2C_SEND_RESTART_WRITE:	
  6956                           
  6957                           ;Skip over the trampoline to the duplicate function for level 1
  6958  0D00  1C7E               	btfss	int$flags,0
  6959  0D01  2D04               	goto	_do_I2C_SEND_RESTART_WRITE$intlevel0
  6960  0D02  318C  2C4B         	ljmp	i1_do_I2C_SEND_RESTART_WRITE
  6961  0D04                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
  6962  0D04                     l4982:	
  6963                           ;incstack = 0
  6964                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6965                           
  6966                           
  6967                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c_driver_restart();
  6968  0D04  318C  2411  318D   	fcall	_i2c_driver_restart
  6969  0D07                     l4984:	
  6970                           
  6971                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  6972  0D07  3002               	movlw	2
  6973  0D08                     l122:	
  6974  0D08  0008               	return
  6975  0D09                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  6976                           
  6977                           	psect	text31
  6978  0CF7                     __ptext31:	
  6979 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  6980 ;; Defined at:
  6981 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      enum E3411
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, pclath, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    7
  7002 ;; This function calls:
  7003 ;;		_i2c_driver_restart
  7004 ;; This function is called by:
  7005 ;;		_do_I2C_TX
  7006 ;;		_i2c_ISR
  7007 ;;		i1_i2c_ISR
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function _do_I2C_SEND_RESTART_READ
  7013  0CF7                     _do_I2C_SEND_RESTART_READ:	
  7014                           
  7015                           ;Skip over the trampoline to the duplicate function for level 1
  7016  0CF7  1C7E               	btfss	int$flags,0
  7017  0CF8  2CFB               	goto	_do_I2C_SEND_RESTART_READ$intlevel0
  7018  0CF9  318C  2C46         	ljmp	i1_do_I2C_SEND_RESTART_READ
  7019  0CFB                     _do_I2C_SEND_RESTART_READ$intlevel0:	
  7020  0CFB                     l4976:	
  7021                           ;incstack = 0
  7022                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  7023                           
  7024                           
  7025                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c_driver_restart();
  7026  0CFB  318C  2411  318C   	fcall	_i2c_driver_restart
  7027  0CFE                     l4978:	
  7028                           
  7029                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  7030  0CFE  3001               	movlw	1
  7031  0CFF                     l119:	
  7032  0CFF  0008               	return
  7033  0D00                     __end_of_do_I2C_SEND_RESTART_READ:	
  7034                           
  7035                           	psect	text32
  7036  0CEE                     __ptext32:	
  7037 ;; *************** function _do_I2C_IDLE *****************
  7038 ;; Defined at:
  7039 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      enum E3411
  7046 ;; Registers used:
  7047 ;;		wreg, status,2
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;Total ram usage:        0 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    6
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_i2c_ISR
  7064 ;;		i1_i2c_ISR
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function _do_I2C_IDLE
  7070  0CEE                     _do_I2C_IDLE:	
  7071                           
  7072                           ;Skip over the trampoline to the duplicate function for level 1
  7073  0CEE  1C7E               	btfss	int$flags,0
  7074  0CEF  2CF2               	goto	_do_I2C_IDLE$intlevel0
  7075  0CF0  318C  2C41         	ljmp	i1_do_I2C_IDLE
  7076  0CF2                     _do_I2C_IDLE$intlevel0:	
  7077  0CF2                     l5090:	
  7078                           ;incstack = 0
  7079                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
  7080                           
  7081                           
  7082                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  7083  0CF2  0021               	movlb	1	; select bank1
  7084  0CF3  1020               	bcf	_i2c_status^(0+128),0
  7085  0CF4                     l5092:	
  7086                           
  7087                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  7088  0CF4  01AA               	clrf	(_i2c_status^(0+128)+10)
  7089  0CF5                     l5094:	
  7090                           
  7091                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  7092  0CF5  300E               	movlw	14
  7093  0CF6                     l116:	
  7094  0CF6  0008               	return
  7095  0CF7                     __end_of_do_I2C_IDLE:	
  7096                           
  7097                           	psect	text33
  7098  0D63                     __ptext33:	
  7099 ;; *************** function _do_I2C_RESET *****************
  7100 ;; Defined at:
  7101 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      enum E3411
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0, pclath, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    7
  7122 ;; This function calls:
  7123 ;;		_i2c_driver_resetBus
  7124 ;; This function is called by:
  7125 ;;		_i2c_ISR
  7126 ;;		i1_i2c_ISR
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           
  7131                           ;psect for function _do_I2C_RESET
  7132  0D63                     _do_I2C_RESET:	
  7133                           
  7134                           ;Skip over the trampoline to the duplicate function for level 1
  7135  0D63  1C7E               	btfss	int$flags,0
  7136  0D64  2D67               	goto	_do_I2C_RESET$intlevel0
  7137  0D65  318C  2CBB         	ljmp	i1_do_I2C_RESET
  7138  0D67                     _do_I2C_RESET$intlevel0:	
  7139  0D67                     l5080:	
  7140                           ;incstack = 0
  7141                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
  7142                           
  7143                           
  7144                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c_driver_resetBus();
  7145  0D67  318B  23EE  318D   	fcall	_i2c_driver_resetBus
  7146  0D6A                     l5082:	
  7147                           
  7148                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  7149  0D6A  0021               	movlb	1	; select bank1
  7150  0D6B  1020               	bcf	_i2c_status^(0+128),0
  7151  0D6C                     l5084:	
  7152                           
  7153                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  7154  0D6C  01AA               	clrf	(_i2c_status^(0+128)+10)
  7155  0D6D                     l5086:	
  7156                           
  7157                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  7158  0D6D  300E               	movlw	14
  7159  0D6E                     l113:	
  7160  0D6E  0008               	return
  7161  0D6F                     __end_of_do_I2C_RESET:	
  7162                           
  7163                           	psect	text34
  7164  0590                     __ptext34:	
  7165 ;; *************** function _do_I2C_TX_EMPTY *****************
  7166 ;; Defined at:
  7167 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      enum E3411
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;Total ram usage:        3 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    9
  7188 ;; This function calls:
  7189 ;;		Absolute function
  7190 ;;		_do_I2C_SEND_RESTART
  7191 ;;		_do_I2C_SEND_STOP
  7192 ;;		_i2c_restartWrite
  7193 ;;		_mssp_setIRQ
  7194 ;;		_rd1RegCompleteHandler
  7195 ;;		_rd2RegCompleteHandler
  7196 ;;		_rdBlkRegCompleteHandler
  7197 ;;		_returnReset
  7198 ;;		_returnStop
  7199 ;;		_wr1RegCompleteHandler
  7200 ;;		_wr2RegCompleteHandler
  7201 ;; This function is called by:
  7202 ;;		_i2c_ISR
  7203 ;;		i1_i2c_ISR
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           
  7208                           ;psect for function _do_I2C_TX_EMPTY
  7209  0590                     _do_I2C_TX_EMPTY:	
  7210                           
  7211                           ;Skip over the trampoline to the duplicate function for level 1
  7212  0590  1C7E               	btfss	int$flags,0
  7213  0591  2D94               	goto	_do_I2C_TX_EMPTY$intlevel0
  7214  0592  3186  2E9B         	ljmp	i1_do_I2C_TX_EMPTY
  7215  0594                     _do_I2C_TX_EMPTY$intlevel0:	
  7216  0594                     l5212:	
  7217                           ;incstack = 0
  7218                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7219                           
  7220                           
  7221                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  7222  0594  0021               	movlb	1	; select bank1
  7223  0595  1520               	bsf	_i2c_status^(0+128),2
  7224                           
  7225                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  7226  0596  2DA4               	goto	l5230
  7227  0597                     l5214:	
  7228                           
  7229                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  7230  0597  318D  2509  3185   	fcall	_do_I2C_SEND_RESTART
  7231  059A  2DC8               	goto	l188
  7232  059B                     l5218:	
  7233                           
  7234                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp_setIRQ();
  7235  059B  318C  241D  3185   	fcall	_mssp_setIRQ
  7236  059E                     l5220:	
  7237                           
  7238                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  7239  059E  3003               	movlw	3
  7240  059F  2DC8               	goto	l188
  7241  05A0                     l5224:	
  7242                           
  7243                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  7244  05A0  318D  2512  3185   	fcall	_do_I2C_SEND_STOP
  7245  05A3  2DC8               	goto	l188
  7246  05A4                     l5230:	
  7247  05A4  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  7248  05A5  0020               	movlb	0	; select bank0
  7249  05A6  00BD               	movwf	??_do_I2C_TX_EMPTY
  7250  05A7  083D               	movf	??_do_I2C_TX_EMPTY,w
  7251  05A8  00C6               	movwf	wr1RegCompleteHandler@p
  7252  05A9  300B               	movlw	11
  7253  05AA  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  7254  05AB  0086               	movwf	6
  7255  05AC  0187               	clrf	7
  7256  05AD  3F41               	moviw [1]fsr1
  7257  05AE  008A               	movwf	10
  7258  05AF  3F40               	moviw [0]fsr1
  7259  05B0  000A               	callw
  7260  05B1  3185               	pagesel	$
  7261  05B2  0020               	movlb	0	; select bank0
  7262  05B3  00BE               	movwf	??_do_I2C_TX_EMPTY+1
  7263  05B4  01BF               	clrf	??_do_I2C_TX_EMPTY+2
  7264                           
  7265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7266                           ; Switch size 1, requested type "simple"
  7267                           ; Number of cases is 1, Range of values is 0 to 0
  7268                           ; switch strategies available:
  7269                           ; Name         Instructions Cycles
  7270                           ; simple_byte            4     3 (average)
  7271                           ; direct_byte            8     6 (fixed)
  7272                           ; jumptable            260     6 (fixed)
  7273                           ;	Chosen strategy is simple_byte
  7274  05B5  083F               	movf	??_do_I2C_TX_EMPTY+2,w
  7275  05B6  3A00               	xorlw	0	; case 0
  7276  05B7  1903               	skipnz
  7277  05B8  2DBA               	goto	l6368
  7278  05B9  2DA0               	goto	l5224
  7279  05BA                     l6368:	
  7280                           
  7281                           ; Switch size 1, requested type "simple"
  7282                           ; Number of cases is 4, Range of values is 1 to 4
  7283                           ; switch strategies available:
  7284                           ; Name         Instructions Cycles
  7285                           ; simple_byte           13     7 (average)
  7286                           ; direct_byte           17     9 (fixed)
  7287                           ; jumptable            263     9 (fixed)
  7288                           ;	Chosen strategy is simple_byte
  7289  05BA  083E               	movf	??_do_I2C_TX_EMPTY+1,w
  7290  05BB  3A01               	xorlw	1	; case 1
  7291  05BC  1903               	skipnz
  7292  05BD  2DA0               	goto	l5224
  7293  05BE  3A03               	xorlw	3	; case 2
  7294  05BF  1903               	skipnz
  7295  05C0  2D97               	goto	l5214
  7296  05C1  3A01               	xorlw	1	; case 3
  7297  05C2  1903               	skipnz
  7298  05C3  2D97               	goto	l5214
  7299  05C4  3A07               	xorlw	7	; case 4
  7300  05C5  1903               	skipnz
  7301  05C6  2D9B               	goto	l5218
  7302  05C7  2DA0               	goto	l5224
  7303  05C8                     l188:	
  7304  05C8  0008               	return
  7305  05C9                     __end_of_do_I2C_TX_EMPTY:	
  7306                           
  7307                           	psect	text35
  7308  0C1D                     __ptext35:	
  7309 ;; *************** function _mssp_setIRQ *****************
  7310 ;; Defined at:
  7311 ;;		line 59 in file "mcc_generated_files/i2c_driver.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		None
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; Hardware stack levels required when called:    6
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_do_I2C_TX_EMPTY
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _mssp_setIRQ
  7341  0C1D                     _mssp_setIRQ:	
  7342  0C1D                     l5026:	
  7343                           ;incstack = 0
  7344                           ; Regs used in _mssp_setIRQ: []
  7345                           
  7346                           
  7347                           ;mcc_generated_files/i2c_driver.c: 61:     else
  7348  0C1D  0020               	movlb	0	; select bank0
  7349  0C1E  1591               	bsf	17,3	;volatile
  7350  0C1F                     l600:	
  7351  0C1F  0008               	return
  7352  0C20                     __end_of_mssp_setIRQ:	
  7353                           
  7354                           	psect	text36
  7355  0CE5                     __ptext36:	
  7356 ;; *************** function _i2c_driver_isNACK *****************
  7357 ;; Defined at:
  7358 ;;		line 162 in file "mcc_generated_files/i2c_driver.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;		None
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;		None
  7363 ;; Return value:  Size  Location     Type
  7364 ;;		None               void
  7365 ;; Registers used:
  7366 ;;		wreg, status,2, status,0
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;Total ram usage:        1 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:    6
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_do_I2C_TX
  7383 ;;		_i2c_ISR
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _i2c_driver_isNACK
  7389  0CE5                     _i2c_driver_isNACK:	
  7390  0CE5                     l5018:	
  7391                           ;incstack = 0
  7392                           ; Regs used in _i2c_driver_isNACK: [wreg+status,2+status,0]
  7393                           
  7394                           
  7395                           ;mcc_generated_files/i2c_driver.c: 164:     return SSPCON2bits.ACKSTAT;
  7396  0CE5  0024               	movlb	4	; select bank4
  7397  0CE6  0E16               	swapf	22,w	;volatile
  7398  0CE7  0C89               	rrf	9,f
  7399  0CE8  0C89               	rrf	9,f
  7400  0CE9  3901               	andlw	1
  7401  0CEA  0020               	movlb	0	; select bank0
  7402  0CEB  00BD               	movwf	??_i2c_driver_isNACK
  7403  0CEC  0C3D               	rrf	??_i2c_driver_isNACK,w
  7404  0CED                     l635:	
  7405  0CED  0008               	return
  7406  0CEE                     __end_of_i2c_driver_isNACK:	
  7407                           
  7408                           	psect	text37
  7409  0C8C                     __ptext37:	
  7410 ;; *************** function _i2c_driver_TXData *****************
  7411 ;; Defined at:
  7412 ;;		line 187 in file "mcc_generated_files/i2c_driver.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  d               1    wreg     unsigned char 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  d               1    0[BANK0 ] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;Total ram usage:        1 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    6
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_do_I2C_SEND_ADR_READ
  7437 ;;		_do_I2C_SEND_ADR_WRITE
  7438 ;;		_do_I2C_TX
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _i2c_driver_TXData
  7444  0C8C                     _i2c_driver_TXData:	
  7445                           
  7446                           ;incstack = 0
  7447                           ; Regs used in _i2c_driver_TXData: [wreg]
  7448                           ;i2c_driver_TXData@d stored from wreg
  7449  0C8C  0020               	movlb	0	; select bank0
  7450  0C8D  00BD               	movwf	i2c_driver_TXData@d
  7451  0C8E                     l5000:	
  7452                           
  7453                           ;mcc_generated_files/i2c_driver.c: 187: __attribute__((inline)) void i2c_driver_TXData(c
      +                          har d);mcc_generated_files/i2c_driver.c: 188: {;mcc_generated_files/i2c_driver.c: 189:  
      +                             SSPBUF = d;
  7454  0C8E  083D               	movf	i2c_driver_TXData@d,w
  7455  0C8F  0024               	movlb	4	; select bank4
  7456  0C90  0091               	movwf	17	;volatile
  7457  0C91                     l650:	
  7458  0C91  0008               	return
  7459  0C92                     __end_of_i2c_driver_TXData:	
  7460                           
  7461                           	psect	text38
  7462  0C1A                     __ptext38:	
  7463 ;; *************** function _i2c_driver_getRXData *****************
  7464 ;; Defined at:
  7465 ;;		line 172 in file "mcc_generated_files/i2c_driver.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;		None
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      unsigned char 
  7472 ;; Registers used:
  7473 ;;		wreg
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:        0 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    6
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_do_I2C_RX
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function _i2c_driver_getRXData
  7495  0C1A                     _i2c_driver_getRXData:	
  7496  0C1A                     l5022:	
  7497                           ;incstack = 0
  7498                           ; Regs used in _i2c_driver_getRXData: [wreg]
  7499                           
  7500                           
  7501                           ;mcc_generated_files/i2c_driver.c: 174:     return SSPBUF;
  7502  0C1A  0024               	movlb	4	; select bank4
  7503  0C1B  0811               	movf	17,w	;volatile
  7504  0C1C                     l641:	
  7505  0C1C  0008               	return
  7506  0C1D                     __end_of_i2c_driver_getRXData:	
  7507                           
  7508                           	psect	text39
  7509  0C38                     __ptext39:	
  7510 ;; *************** function _i2c_driver_sendNACK *****************
  7511 ;; Defined at:
  7512 ;;		line 203 in file "mcc_generated_files/i2c_driver.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		None
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    6
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_do_I2C_DO_NACK_STOP
  7537 ;;		_do_I2C_DO_NACK_RESTART
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           
  7542                           ;psect for function _i2c_driver_sendNACK
  7543  0C38                     _i2c_driver_sendNACK:	
  7544  0C38                     l4974:	
  7545                           ;incstack = 0
  7546                           ; Regs used in _i2c_driver_sendNACK: []
  7547                           
  7548                           
  7549                           ;mcc_generated_files/i2c_driver.c: 205:     SSPCON2bits.ACKDT = 1;
  7550  0C38  0024               	movlb	4	; select bank4
  7551  0C39  1696               	bsf	22,5	;volatile
  7552                           
  7553                           ;mcc_generated_files/i2c_driver.c: 206:     SSPCON2bits.ACKEN = 1;
  7554  0C3A  1616               	bsf	22,4	;volatile
  7555  0C3B                     l659:	
  7556  0C3B  0008               	return
  7557  0C3C                     __end_of_i2c_driver_sendNACK:	
  7558                           
  7559                           	psect	text40
  7560  0BEE                     __ptext40:	
  7561 ;; *************** function _i2c_driver_resetBus *****************
  7562 ;; Defined at:
  7563 ;;		line 142 in file "mcc_generated_files/i2c_driver.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		None
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;Total ram usage:        0 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    6
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_do_I2C_RESET
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           
  7592                           ;psect for function _i2c_driver_resetBus
  7593  0BEE                     _i2c_driver_resetBus:	
  7594  0BEE                     l623:	
  7595                           ;incstack = 0
  7596                           ; Regs used in _i2c_driver_resetBus: []
  7597                           
  7598  0BEE  0008               	return
  7599  0BEF                     __end_of_i2c_driver_resetBus:	
  7600                           
  7601                           	psect	text41
  7602  0C17                     __ptext41:	
  7603 ;; *************** function _i2c_driver_startRX *****************
  7604 ;; Defined at:
  7605 ;;		line 167 in file "mcc_generated_files/i2c_driver.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;		None
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      void 
  7612 ;; Registers used:
  7613 ;;		None
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;Total ram usage:        0 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    6
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_do_I2C_RCEN
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           
  7634                           ;psect for function _i2c_driver_startRX
  7635  0C17                     _i2c_driver_startRX:	
  7636  0C17                     l5002:	
  7637                           ;incstack = 0
  7638                           ; Regs used in _i2c_driver_startRX: []
  7639                           
  7640                           
  7641                           ;mcc_generated_files/i2c_driver.c: 169:     SSPCON2bits.RCEN = 1;
  7642  0C17  0024               	movlb	4	; select bank4
  7643  0C18  1596               	bsf	22,3	;volatile
  7644  0C19                     l638:	
  7645  0C19  0008               	return
  7646  0C1A                     __end_of_i2c_driver_startRX:	
  7647                           
  7648                           	psect	text42
  7649  0F6B                     __ptext42:	
  7650 ;; *************** function _rdBlkRegCompleteHandler *****************
  7651 ;; Defined at:
  7652 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  p               1    9[BANK0 ] PTR void 
  7655 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7656 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      enum E358
  7661 ;; Registers used:
  7662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7668 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;Total ram usage:        1 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    8
  7675 ;; This function calls:
  7676 ;;		_i2c_setBuffer
  7677 ;;		_i2c_setDataCompleteCallback
  7678 ;; This function is called by:
  7679 ;;		_i2c_readDataBlock
  7680 ;;		_do_I2C_DO_ADDRESS_NACK
  7681 ;;		_do_I2C_TX
  7682 ;;		_do_I2C_RX
  7683 ;;		_do_I2C_TX_EMPTY
  7684 ;;		i1_do_I2C_DO_ADDRESS_NACK
  7685 ;;		i1_do_I2C_TX
  7686 ;;		i1_do_I2C_RX
  7687 ;;		i1_do_I2C_TX_EMPTY
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function _rdBlkRegCompleteHandler
  7693  0F6B                     _rdBlkRegCompleteHandler:	
  7694                           
  7695                           ;Skip over the trampoline to the duplicate function for level 1
  7696  0F6B  1C7E               	btfss	int$flags,0
  7697  0F6C  2F6F               	goto	_rdBlkRegCompleteHandler$intlevel0
  7698  0F6D  318E  2EE0         	ljmp	i1_rdBlkRegCompleteHandler
  7699  0F6F                     _rdBlkRegCompleteHandler$intlevel0:	
  7700  0F6F                     l5068:	
  7701                           ;incstack = 0
  7702                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7703                           
  7704                           
  7705                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
  7706  0F6F  0020               	movlb	0	; select bank0
  7707  0F70  0846               	movf	rdBlkRegCompleteHandler@p,w
  7708  0F71  0086               	movwf	6
  7709  0F72  0187               	clrf	7
  7710  0F73  3F40               	moviw [0]fsr1
  7711  0F74  00BD               	movwf	i2c_setBuffer@bufferSize
  7712  0F75  3F41               	moviw [1]fsr1
  7713  0F76  00BE               	movwf	i2c_setBuffer@bufferSize+1
  7714  0F77  0846               	movf	rdBlkRegCompleteHandler@p,w
  7715  0F78  3E02               	addlw	2
  7716  0F79  0086               	movwf	6
  7717  0F7A  0187               	clrf	7
  7718  0F7B  0801               	movf	1,w
  7719  0F7C  318E  266D  318F   	fcall	_i2c_setBuffer
  7720                           
  7721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
  7722  0F7F  3000               	movlw	0
  7723  0F80  0020               	movlb	0	; select bank0
  7724  0F81  00C2               	movwf	i2c_setDataCompleteCallback@cb
  7725  0F82  00C3               	movwf	i2c_setDataCompleteCallback@cb+1
  7726  0F83  01C4               	clrf	i2c_setDataCompleteCallback@p
  7727  0F84  318D  25A2  318F   	fcall	_i2c_setDataCompleteCallback
  7728  0F87                     l5070:	
  7729                           
  7730                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
  7731  0F87  3002               	movlw	2
  7732  0F88                     l291:	
  7733  0F88  0008               	return
  7734  0F89                     __end_of_rdBlkRegCompleteHandler:	
  7735                           
  7736                           	psect	text43
  7737  0EC9                     __ptext43:	
  7738 ;; *************** function _rd2RegCompleteHandler *****************
  7739 ;; Defined at:
  7740 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  p               1    9[BANK0 ] PTR void 
  7743 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7744 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      enum E358
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7756 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;Total ram usage:        1 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    8
  7763 ;; This function calls:
  7764 ;;		_i2c_setBuffer
  7765 ;;		_i2c_setDataCompleteCallback
  7766 ;; This function is called by:
  7767 ;;		_i2c_read2ByteRegister
  7768 ;;		_do_I2C_DO_ADDRESS_NACK
  7769 ;;		_do_I2C_TX
  7770 ;;		_do_I2C_RX
  7771 ;;		_do_I2C_TX_EMPTY
  7772 ;;		i1_do_I2C_DO_ADDRESS_NACK
  7773 ;;		i1_do_I2C_TX
  7774 ;;		i1_do_I2C_RX
  7775 ;;		i1_do_I2C_TX_EMPTY
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function _rd2RegCompleteHandler
  7781  0EC9                     _rd2RegCompleteHandler:	
  7782                           
  7783                           ;Skip over the trampoline to the duplicate function for level 1
  7784  0EC9  1C7E               	btfss	int$flags,0
  7785  0ECA  2ECD               	goto	_rd2RegCompleteHandler$intlevel0
  7786  0ECB  318E  2E32         	ljmp	i1_rd2RegCompleteHandler
  7787  0ECD                     _rd2RegCompleteHandler$intlevel0:	
  7788  0ECD                     l5052:	
  7789                           ;incstack = 0
  7790                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7791                           
  7792                           
  7793                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
  7794  0ECD  3002               	movlw	2
  7795  0ECE  0020               	movlb	0	; select bank0
  7796  0ECF  00BD               	movwf	i2c_setBuffer@bufferSize
  7797  0ED0  3000               	movlw	0
  7798  0ED1  00BE               	movwf	i2c_setBuffer@bufferSize+1
  7799  0ED2  0846               	movf	rd2RegCompleteHandler@p,w
  7800  0ED3  318E  266D  318E   	fcall	_i2c_setBuffer
  7801  0ED6                     l5054:	
  7802                           
  7803                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  7804  0ED6  3000               	movlw	0
  7805  0ED7  0020               	movlb	0	; select bank0
  7806  0ED8  00C2               	movwf	i2c_setDataCompleteCallback@cb
  7807  0ED9  00C3               	movwf	i2c_setDataCompleteCallback@cb+1
  7808  0EDA  01C4               	clrf	i2c_setDataCompleteCallback@p
  7809  0EDB  318D  25A2  318E   	fcall	_i2c_setDataCompleteCallback
  7810  0EDE                     l5056:	
  7811                           
  7812                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
  7813  0EDE  3002               	movlw	2
  7814  0EDF                     l267:	
  7815  0EDF  0008               	return
  7816  0EE0                     __end_of_rd2RegCompleteHandler:	
  7817                           
  7818                           	psect	text44
  7819  0EB2                     __ptext44:	
  7820 ;; *************** function _rd1RegCompleteHandler *****************
  7821 ;; Defined at:
  7822 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  p               1    9[BANK0 ] PTR void 
  7825 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7826 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      enum E358
  7831 ;; Registers used:
  7832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7838 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;Total ram usage:        1 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    8
  7845 ;; This function calls:
  7846 ;;		_i2c_setBuffer
  7847 ;;		_i2c_setDataCompleteCallback
  7848 ;; This function is called by:
  7849 ;;		_i2c_read1ByteRegister
  7850 ;;		_do_I2C_DO_ADDRESS_NACK
  7851 ;;		_do_I2C_TX
  7852 ;;		_do_I2C_RX
  7853 ;;		_do_I2C_TX_EMPTY
  7854 ;;		i1_do_I2C_DO_ADDRESS_NACK
  7855 ;;		i1_do_I2C_TX
  7856 ;;		i1_do_I2C_RX
  7857 ;;		i1_do_I2C_TX_EMPTY
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _rd1RegCompleteHandler
  7863  0EB2                     _rd1RegCompleteHandler:	
  7864                           
  7865                           ;Skip over the trampoline to the duplicate function for level 1
  7866  0EB2  1C7E               	btfss	int$flags,0
  7867  0EB3  2EB6               	goto	_rd1RegCompleteHandler$intlevel0
  7868  0EB4  318E  2E20         	ljmp	i1_rd1RegCompleteHandler
  7869  0EB6                     _rd1RegCompleteHandler$intlevel0:	
  7870  0EB6                     l5044:	
  7871                           ;incstack = 0
  7872                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7873                           
  7874                           
  7875                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
  7876  0EB6  3001               	movlw	1
  7877  0EB7  0020               	movlb	0	; select bank0
  7878  0EB8  00BD               	movwf	i2c_setBuffer@bufferSize
  7879  0EB9  3000               	movlw	0
  7880  0EBA  00BE               	movwf	i2c_setBuffer@bufferSize+1
  7881  0EBB  0846               	movf	rd1RegCompleteHandler@p,w
  7882  0EBC  318E  266D  318E   	fcall	_i2c_setBuffer
  7883  0EBF                     l5046:	
  7884                           
  7885                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  7886  0EBF  3000               	movlw	0
  7887  0EC0  0020               	movlb	0	; select bank0
  7888  0EC1  00C2               	movwf	i2c_setDataCompleteCallback@cb
  7889  0EC2  00C3               	movwf	i2c_setDataCompleteCallback@cb+1
  7890  0EC3  01C4               	clrf	i2c_setDataCompleteCallback@p
  7891  0EC4  318D  25A2  318E   	fcall	_i2c_setDataCompleteCallback
  7892  0EC7                     l5048:	
  7893                           
  7894                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
  7895  0EC7  3002               	movlw	2
  7896  0EC8                     l252:	
  7897  0EC8  0008               	return
  7898  0EC9                     __end_of_rd1RegCompleteHandler:	
  7899                           
  7900                           	psect	text45
  7901  0E9B                     __ptext45:	
  7902 ;; *************** function _wr1RegCompleteHandler *****************
  7903 ;; Defined at:
  7904 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  p               1    9[BANK0 ] PTR void 
  7907 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7908 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      enum E358
  7913 ;; Registers used:
  7914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7920 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;Total ram usage:        1 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    8
  7927 ;; This function calls:
  7928 ;;		_i2c_setBuffer
  7929 ;;		_i2c_setDataCompleteCallback
  7930 ;; This function is called by:
  7931 ;;		_i2c_write1ByteRegister
  7932 ;;		_do_I2C_DO_ADDRESS_NACK
  7933 ;;		_do_I2C_TX
  7934 ;;		_do_I2C_RX
  7935 ;;		_do_I2C_TX_EMPTY
  7936 ;;		i1_do_I2C_DO_ADDRESS_NACK
  7937 ;;		i1_do_I2C_TX
  7938 ;;		i1_do_I2C_RX
  7939 ;;		i1_do_I2C_TX_EMPTY
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _wr1RegCompleteHandler
  7945  0E9B                     _wr1RegCompleteHandler:	
  7946                           
  7947                           ;Skip over the trampoline to the duplicate function for level 1
  7948  0E9B  1C7E               	btfss	int$flags,0
  7949  0E9C  2E9F               	goto	_wr1RegCompleteHandler$intlevel0
  7950  0E9D  318E  2E0E         	ljmp	i1_wr1RegCompleteHandler
  7951  0E9F                     _wr1RegCompleteHandler$intlevel0:	
  7952  0E9F                     l5036:	
  7953                           ;incstack = 0
  7954                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7955                           
  7956                           
  7957                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
  7958  0E9F  3001               	movlw	1
  7959  0EA0  0020               	movlb	0	; select bank0
  7960  0EA1  00BD               	movwf	i2c_setBuffer@bufferSize
  7961  0EA2  3000               	movlw	0
  7962  0EA3  00BE               	movwf	i2c_setBuffer@bufferSize+1
  7963  0EA4  0846               	movf	wr1RegCompleteHandler@p,w
  7964  0EA5  318E  266D  318E   	fcall	_i2c_setBuffer
  7965  0EA8                     l5038:	
  7966                           
  7967                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  7968  0EA8  3000               	movlw	0
  7969  0EA9  0020               	movlb	0	; select bank0
  7970  0EAA  00C2               	movwf	i2c_setDataCompleteCallback@cb
  7971  0EAB  00C3               	movwf	i2c_setDataCompleteCallback@cb+1
  7972  0EAC  01C4               	clrf	i2c_setDataCompleteCallback@p
  7973  0EAD  318D  25A2  318E   	fcall	_i2c_setDataCompleteCallback
  7974  0EB0                     l5040:	
  7975                           
  7976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
  7977  0EB0  3004               	movlw	4
  7978  0EB1                     l231:	
  7979  0EB1  0008               	return
  7980  0EB2                     __end_of_wr1RegCompleteHandler:	
  7981                           
  7982                           	psect	text46
  7983  0C86                     __ptext46:	
  7984 ;; *************** function _i2c_restartWrite *****************
  7985 ;; Defined at:
  7986 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  p               1    9[BANK0 ] PTR void 
  7989 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7990 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      enum E358
  7995 ;; Registers used:
  7996 ;;		wreg
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8002 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8006 ;;Total ram usage:        1 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    6
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_i2c_writeNBytes
  8013 ;;		_i2c_readDataBlock
  8014 ;;		_i2c_write1ByteRegister
  8015 ;;		_i2c_read1ByteRegister
  8016 ;;		_i2c_read2ByteRegister
  8017 ;;		_i2c_write2ByteRegister
  8018 ;;		_do_I2C_DO_ADDRESS_NACK
  8019 ;;		_do_I2C_TX
  8020 ;;		_do_I2C_RX
  8021 ;;		_do_I2C_TX_EMPTY
  8022 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8023 ;;		i1_do_I2C_TX
  8024 ;;		i1_do_I2C_RX
  8025 ;;		i1_do_I2C_TX_EMPTY
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           
  8030                           ;psect for function _i2c_restartWrite
  8031  0C86                     _i2c_restartWrite:	
  8032                           
  8033                           ;Skip over the trampoline to the duplicate function for level 1
  8034  0C86  1C7E               	btfss	int$flags,0
  8035  0C87  2C8A               	goto	_i2c_restartWrite$intlevel0
  8036  0C88  3180  2802         	ljmp	i1_i2c_restartWrite
  8037  0C8A                     _i2c_restartWrite$intlevel0:	
  8038  0C8A                     l5074:	
  8039                           ;incstack = 0
  8040                           ; Regs used in _i2c_restartWrite: [wreg]
  8041                           
  8042                           
  8043                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
  8044  0C8A  3003               	movlw	3
  8045  0C8B                     l318:	
  8046  0C8B  0008               	return
  8047  0C8C                     __end_of_i2c_restartWrite:	
  8048                           
  8049                           	psect	text47
  8050  0C80                     __ptext47:	
  8051 ;; *************** function _returnReset *****************
  8052 ;; Defined at:
  8053 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  p               1    9[BANK0 ] PTR void 
  8056 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8057 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      enum E3257
  8062 ;; Registers used:
  8063 ;;		wreg
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8069 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;Total ram usage:        1 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    6
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_i2c_open
  8080 ;;		_do_I2C_DO_ADDRESS_NACK
  8081 ;;		_do_I2C_TX
  8082 ;;		_do_I2C_RX
  8083 ;;		_do_I2C_TX_EMPTY
  8084 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8085 ;;		i1_do_I2C_TX
  8086 ;;		i1_do_I2C_RX
  8087 ;;		i1_do_I2C_TX_EMPTY
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           
  8092                           ;psect for function _returnReset
  8093  0C80                     _returnReset:	
  8094                           
  8095                           ;Skip over the trampoline to the duplicate function for level 1
  8096  0C80  1C7E               	btfss	int$flags,0
  8097  0C81  2C84               	goto	_returnReset$intlevel0
  8098  0C82  318B  2BF1         	ljmp	i1_returnReset
  8099  0C84                     _returnReset$intlevel0:	
  8100  0C84                     l5032:	
  8101                           ;incstack = 0
  8102                           ; Regs used in _returnReset: [wreg]
  8103                           
  8104                           
  8105                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
  8106  0C84  3005               	movlw	5
  8107  0C85                     l207:	
  8108  0C85  0008               	return
  8109  0C86                     __end_of_returnReset:	
  8110                           
  8111                           	psect	text48
  8112  0C7A                     __ptext48:	
  8113 ;; *************** function _returnStop *****************
  8114 ;; Defined at:
  8115 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  p               1    9[BANK0 ] PTR void 
  8118 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8119 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      enum E3257
  8124 ;; Registers used:
  8125 ;;		wreg
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8131 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;Total ram usage:        1 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:    6
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_i2c_open
  8142 ;;		_setCallBack
  8143 ;;		_do_I2C_DO_ADDRESS_NACK
  8144 ;;		_do_I2C_TX
  8145 ;;		_do_I2C_RX
  8146 ;;		_do_I2C_TX_EMPTY
  8147 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8148 ;;		i1_do_I2C_TX
  8149 ;;		i1_do_I2C_RX
  8150 ;;		i1_do_I2C_TX_EMPTY
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           
  8155                           ;psect for function _returnStop
  8156  0C7A                     _returnStop:	
  8157                           
  8158                           ;Skip over the trampoline to the duplicate function for level 1
  8159  0C7A  1C7E               	btfss	int$flags,0
  8160  0C7B  2C7E               	goto	_returnStop$intlevel0
  8161  0C7C  318B  2BEF         	ljmp	i1_returnStop
  8162  0C7E                     _returnStop$intlevel0:	
  8163  0C7E                     l5028:	
  8164                           ;incstack = 0
  8165                           ; Regs used in _returnStop: [wreg]
  8166                           
  8167                           
  8168                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
  8169  0C7E  3001               	movlw	1
  8170  0C7F                     l204:	
  8171  0C7F  0008               	return
  8172  0C80                     __end_of_returnStop:	
  8173                           
  8174                           	psect	text49
  8175  0E84                     __ptext49:	
  8176 ;; *************** function _wr2RegCompleteHandler *****************
  8177 ;; Defined at:
  8178 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  p               1    9[BANK0 ] PTR void 
  8181 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8182 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;		None
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      enum E358
  8187 ;; Registers used:
  8188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8194 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8198 ;;Total ram usage:        1 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    8
  8201 ;; This function calls:
  8202 ;;		_i2c_setBuffer
  8203 ;;		_i2c_setDataCompleteCallback
  8204 ;; This function is called by:
  8205 ;;		_i2c_write2ByteRegister
  8206 ;;		_do_I2C_DO_ADDRESS_NACK
  8207 ;;		_do_I2C_TX
  8208 ;;		_do_I2C_RX
  8209 ;;		_do_I2C_TX_EMPTY
  8210 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8211 ;;		i1_do_I2C_TX
  8212 ;;		i1_do_I2C_RX
  8213 ;;		i1_do_I2C_TX_EMPTY
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           
  8218                           ;psect for function _wr2RegCompleteHandler
  8219  0E84                     _wr2RegCompleteHandler:	
  8220                           
  8221                           ;Skip over the trampoline to the duplicate function for level 1
  8222  0E84  1C7E               	btfss	int$flags,0
  8223  0E85  2E88               	goto	_wr2RegCompleteHandler$intlevel0
  8224  0E86  318D  2DFC         	ljmp	i1_wr2RegCompleteHandler
  8225  0E88                     _wr2RegCompleteHandler$intlevel0:	
  8226  0E88                     l5060:	
  8227                           ;incstack = 0
  8228                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8229                           
  8230                           
  8231                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
  8232  0E88  3002               	movlw	2
  8233  0E89  0020               	movlb	0	; select bank0
  8234  0E8A  00BD               	movwf	i2c_setBuffer@bufferSize
  8235  0E8B  3000               	movlw	0
  8236  0E8C  00BE               	movwf	i2c_setBuffer@bufferSize+1
  8237  0E8D  0846               	movf	wr2RegCompleteHandler@p,w
  8238  0E8E  318E  266D  318E   	fcall	_i2c_setBuffer
  8239  0E91                     l5062:	
  8240                           
  8241                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
  8242  0E91  3000               	movlw	0
  8243  0E92  0020               	movlb	0	; select bank0
  8244  0E93  00C2               	movwf	i2c_setDataCompleteCallback@cb
  8245  0E94  00C3               	movwf	i2c_setDataCompleteCallback@cb+1
  8246  0E95  01C4               	clrf	i2c_setDataCompleteCallback@p
  8247  0E96  318D  25A2  318E   	fcall	_i2c_setDataCompleteCallback
  8248  0E99                     l5064:	
  8249                           
  8250                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
  8251  0E99  3004               	movlw	4
  8252  0E9A                     l279:	
  8253  0E9A  0008               	return
  8254  0E9B                     __end_of_wr2RegCompleteHandler:	
  8255                           
  8256                           	psect	text50
  8257  0DA2                     __ptext50:	
  8258 ;; *************** function _i2c_setDataCompleteCallback *****************
  8259 ;; Defined at:
  8260 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  8263 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8264 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  8265 ;;  p               1    7[BANK0 ] PTR void 
  8266 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8267 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8279 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;Total ram usage:        4 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    7
  8286 ;; This function calls:
  8287 ;;		_setCallBack
  8288 ;; This function is called by:
  8289 ;;		_wr1RegCompleteHandler
  8290 ;;		_rd1RegCompleteHandler
  8291 ;;		_rd2RegCompleteHandler
  8292 ;;		_wr2RegCompleteHandler
  8293 ;;		_rdBlkRegCompleteHandler
  8294 ;;		_i2c_readDataBlock
  8295 ;;		_i2c_write1ByteRegister
  8296 ;;		_i2c_read1ByteRegister
  8297 ;;		_i2c_read2ByteRegister
  8298 ;;		_i2c_write2ByteRegister
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function _i2c_setDataCompleteCallback
  8304  0DA2                     _i2c_setDataCompleteCallback:	
  8305  0DA2                     l4962:	
  8306                           ;incstack = 0
  8307                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8308                           
  8309                           
  8310                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
  8311  0DA2  0020               	movlb	0	; select bank0
  8312  0DA3  0843               	movf	i2c_setDataCompleteCallback@cb+1,w
  8313  0DA4  00BE               	movwf	setCallBack@cb+1
  8314  0DA5  0842               	movf	i2c_setDataCompleteCallback@cb,w
  8315  0DA6  00BD               	movwf	setCallBack@cb
  8316  0DA7  0844               	movf	i2c_setDataCompleteCallback@p,w
  8317  0DA8  00C5               	movwf	??_i2c_setDataCompleteCallback
  8318  0DA9  0845               	movf	??_i2c_setDataCompleteCallback,w
  8319  0DAA  00BF               	movwf	setCallBack@p
  8320  0DAB  3000               	movlw	0
  8321  0DAC  318F  27AF  318D   	fcall	_setCallBack
  8322  0DAF                     l61:	
  8323  0DAF  0008               	return
  8324  0DB0                     __end_of_i2c_setDataCompleteCallback:	
  8325                           
  8326                           	psect	text51
  8327  0FAF                     __ptext51:	
  8328 ;; *************** function _setCallBack *****************
  8329 ;; Defined at:
  8330 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  idx             1    wreg     enum E3429
  8333 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8334 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8335 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
  8336 ;;  p               1    2[BANK0 ] PTR void 
  8337 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8338 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  idx             1    4[BANK0 ] enum E3429
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8350 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;Total ram usage:        5 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; Hardware stack levels required when called:    6
  8357 ;; This function calls:
  8358 ;;		Nothing
  8359 ;; This function is called by:
  8360 ;;		_i2c_setDataCompleteCallback
  8361 ;;		_i2c_setAddressNACKCallback
  8362 ;;		_i2c_setWriteCollisionCallback
  8363 ;;		_i2c_setDataNACKCallback
  8364 ;;		_i2c_setTimeOutCallback
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           
  8369                           ;psect for function _setCallBack
  8370  0FAF                     _setCallBack:	
  8371                           
  8372                           ;incstack = 0
  8373                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
  8374                           ;setCallBack@idx stored from wreg
  8375  0FAF  0020               	movlb	0	; select bank0
  8376  0FB0  00C1               	movwf	setCallBack@idx
  8377  0FB1                     l4956:	
  8378                           
  8379                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
  8380  0FB1  083D               	movf	setCallBack@cb,w
  8381  0FB2  043E               	iorwf	setCallBack@cb+1,w
  8382  0FB3  1903               	btfsc	3,2
  8383  0FB4  2FB6               	goto	u2841
  8384  0FB5  2FB7               	goto	u2840
  8385  0FB6                     u2841:	
  8386  0FB6  2FC8               	goto	l4960
  8387  0FB7                     u2840:	
  8388  0FB7                     l4958:	
  8389                           
  8390                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
  8391  0FB7  3541               	lslf	setCallBack@idx,w
  8392  0FB8  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  8393  0FB9  0086               	movwf	6
  8394  0FBA  0187               	clrf	7
  8395  0FBB  083D               	movf	setCallBack@cb,w
  8396  0FBC  3FC0               	movwi [0]fsr1
  8397  0FBD  083E               	movf	setCallBack@cb+1,w
  8398  0FBE  3FC1               	movwi [1]fsr1
  8399                           
  8400                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
  8401  0FBF  083F               	movf	setCallBack@p,w
  8402  0FC0  00C0               	movwf	??_setCallBack
  8403  0FC1  0841               	movf	setCallBack@idx,w
  8404  0FC2  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  8405  0FC3  0086               	movwf	6
  8406  0FC4  0187               	clrf	7
  8407  0FC5  0840               	movf	??_setCallBack,w
  8408  0FC6  0081               	movwf	1
  8409                           
  8410                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
  8411  0FC7  2FD5               	goto	l212
  8412  0FC8                     l4960:	
  8413                           
  8414                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
  8415  0FC8  3541               	lslf	setCallBack@idx,w
  8416  0FC9  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  8417  0FCA  0086               	movwf	6
  8418  0FCB  0187               	clrf	7
  8419  0FCC  307A               	movlw	low _returnStop
  8420  0FCD  3FC0               	movwi [0]fsr1
  8421  0FCE  300C               	movlw	high _returnStop
  8422  0FCF  3FC1               	movwi [1]fsr1
  8423                           
  8424                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
  8425  0FD0  0841               	movf	setCallBack@idx,w
  8426  0FD1  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  8427  0FD2  0086               	movwf	6
  8428  0FD3  0187               	clrf	7
  8429  0FD4  0181               	clrf	1
  8430  0FD5                     l212:	
  8431  0FD5  0008               	return
  8432  0FD6                     __end_of_setCallBack:	
  8433                           
  8434                           	psect	text52
  8435  0E6D                     __ptext52:	
  8436 ;; *************** function _i2c_setBuffer *****************
  8437 ;; Defined at:
  8438 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  buffer          1    wreg     PTR void 
  8441 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
  8442 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
  8443 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  8444 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  buffer          1    3[BANK0 ] PTR void 
  8447 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
  8448 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
  8449 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;Total ram usage:        4 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    6
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_wr1RegCompleteHandler
  8470 ;;		_i2c_writeNBytes
  8471 ;;		_rd1RegCompleteHandler
  8472 ;;		_rd2RegCompleteHandler
  8473 ;;		_wr2RegCompleteHandler
  8474 ;;		_rdBlkRegCompleteHandler
  8475 ;;		_i2c_readDataBlock
  8476 ;;		_i2c_write1ByteRegister
  8477 ;;		_i2c_read1ByteRegister
  8478 ;;		_i2c_read2ByteRegister
  8479 ;;		_i2c_write2ByteRegister
  8480 ;;		_i2c_readNBytes
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           
  8485                           ;psect for function _i2c_setBuffer
  8486  0E6D                     _i2c_setBuffer:	
  8487                           
  8488                           ;incstack = 0
  8489                           ; Regs used in _i2c_setBuffer: [wreg]
  8490                           ;i2c_setBuffer@buffer stored from wreg
  8491  0E6D  0020               	movlb	0	; select bank0
  8492  0E6E  00C0               	movwf	i2c_setBuffer@buffer
  8493  0E6F                     l4964:	
  8494                           
  8495                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
  8496  0E6F  0021               	movlb	1	; select bank1
  8497  0E70  1D20               	btfss	_i2c_status^(0+128),2
  8498  0E71  2E73               	goto	u2851
  8499  0E72  2E74               	goto	u2850
  8500  0E73                     u2851:	
  8501  0E73  2E83               	goto	l91
  8502  0E74                     u2850:	
  8503  0E74                     l4966:	
  8504                           
  8505                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
  8506  0E74  0020               	movlb	0	; select bank0
  8507  0E75  0840               	movf	i2c_setBuffer@buffer,w
  8508  0E76  00BF               	movwf	??_i2c_setBuffer
  8509  0E77  083F               	movf	??_i2c_setBuffer,w
  8510  0E78  0021               	movlb	1	; select bank1
  8511  0E79  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
  8512                           
  8513                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
  8514  0E7A  0020               	movlb	0	; select bank0
  8515  0E7B  083E               	movf	i2c_setBuffer@bufferSize+1,w
  8516  0E7C  0021               	movlb	1	; select bank1
  8517  0E7D  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
  8518  0E7E  0020               	movlb	0	; select bank0
  8519  0E7F  083D               	movf	i2c_setBuffer@bufferSize,w
  8520  0E80  0021               	movlb	1	; select bank1
  8521  0E81  00A3               	movwf	(_i2c_status^(0+128)+3)
  8522  0E82                     l4968:	
  8523                           
  8524                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
  8525  0E82  1120               	bcf	_i2c_status^(0+128),2
  8526  0E83                     l91:	
  8527  0E83  0008               	return
  8528  0E84                     __end_of_i2c_setBuffer:	
  8529                           
  8530                           	psect	text53
  8531  0C14                     __ptext53:	
  8532 ;; *************** function _i2c_driver_stop *****************
  8533 ;; Defined at:
  8534 ;;		line 157 in file "mcc_generated_files/i2c_driver.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		None
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:    6
  8555 ;; This function calls:
  8556 ;;		Nothing
  8557 ;; This function is called by:
  8558 ;;		_do_I2C_SEND_STOP
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           
  8563                           ;psect for function _i2c_driver_stop
  8564  0C14                     _i2c_driver_stop:	
  8565  0C14                     l4972:	
  8566                           ;incstack = 0
  8567                           ; Regs used in _i2c_driver_stop: []
  8568                           
  8569                           
  8570                           ;mcc_generated_files/i2c_driver.c: 159:     SSPCON2bits.PEN = 1;
  8571  0C14  0024               	movlb	4	; select bank4
  8572  0C15  1516               	bsf	22,2	;volatile
  8573  0C16                     l632:	
  8574  0C16  0008               	return
  8575  0C17                     __end_of_i2c_driver_stop:	
  8576                           
  8577                           	psect	text54
  8578  0C11                     __ptext54:	
  8579 ;; *************** function _i2c_driver_restart *****************
  8580 ;; Defined at:
  8581 ;;		line 152 in file "mcc_generated_files/i2c_driver.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		None
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    6
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_do_I2C_SEND_RESTART_READ
  8606 ;;		_do_I2C_SEND_RESTART_WRITE
  8607 ;;		_do_I2C_SEND_RESTART
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function _i2c_driver_restart
  8613  0C11                     _i2c_driver_restart:	
  8614  0C11                     l4970:	
  8615                           ;incstack = 0
  8616                           ; Regs used in _i2c_driver_restart: []
  8617                           
  8618                           
  8619                           ;mcc_generated_files/i2c_driver.c: 154:     SSPCON2bits.RSEN = 1;
  8620  0C11  0024               	movlb	4	; select bank4
  8621  0C12  1496               	bsf	22,1	;volatile
  8622  0C13                     l629:	
  8623  0C13  0008               	return
  8624  0C14                     __end_of_i2c_driver_restart:	
  8625                           
  8626                           	psect	text55
  8627  0C34                     __ptext55:	
  8628 ;; *************** function _i2c_driver_sendACK *****************
  8629 ;; Defined at:
  8630 ;;		line 197 in file "mcc_generated_files/i2c_driver.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		None
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;Total ram usage:        0 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    6
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_do_I2C_DO_ACK
  8655 ;;		_do_I2C_RX
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function _i2c_driver_sendACK
  8661  0C34                     _i2c_driver_sendACK:	
  8662  0C34                     l5004:	
  8663                           ;incstack = 0
  8664                           ; Regs used in _i2c_driver_sendACK: []
  8665                           
  8666                           
  8667                           ;mcc_generated_files/i2c_driver.c: 199:     SSPCON2bits.ACKDT = 0;
  8668  0C34  0024               	movlb	4	; select bank4
  8669  0C35  1296               	bcf	22,5	;volatile
  8670                           
  8671                           ;mcc_generated_files/i2c_driver.c: 200:     SSPCON2bits.ACKEN = 1;
  8672  0C36  1616               	bsf	22,4	;volatile
  8673  0C37                     l656:	
  8674  0C37  0008               	return
  8675  0C38                     __end_of_i2c_driver_sendACK:	
  8676                           
  8677                           	psect	text56
  8678  0C0E                     __ptext56:	
  8679 ;; *************** function _i2c_driver_start *****************
  8680 ;; Defined at:
  8681 ;;		line 147 in file "mcc_generated_files/i2c_driver.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		None
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;Total ram usage:        0 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    6
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_i2c_masterOperation
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           
  8710                           ;psect for function _i2c_driver_start
  8711  0C0E                     _i2c_driver_start:	
  8712  0C0E                     l5252:	
  8713                           ;incstack = 0
  8714                           ; Regs used in _i2c_driver_start: []
  8715                           
  8716                           
  8717                           ;mcc_generated_files/i2c_driver.c: 149:     SSPCON2bits.SEN = 1;
  8718  0C0E  0024               	movlb	4	; select bank4
  8719  0C0F  1416               	bsf	22,0	;volatile
  8720  0C10                     l626:	
  8721  0C10  0008               	return
  8722  0C11                     __end_of_i2c_driver_start:	
  8723                           
  8724                           	psect	text57
  8725  0F4D                     __ptext57:	
  8726 ;; *************** function _i2c_close *****************
  8727 ;; Defined at:
  8728 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;		None
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  ret             1    1[BANK0 ] enum E3252
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      enum E3252
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0, pclath, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;Total ram usage:        2 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    7
  8749 ;; This function calls:
  8750 ;;		_mssp_clearIRQ
  8751 ;;		_mssp_disableIRQ
  8752 ;; This function is called by:
  8753 ;;		_i2c_writeNBytes
  8754 ;;		_i2c_readDataBlock
  8755 ;;		_i2c_write1ByteRegister
  8756 ;;		_i2c_read1ByteRegister
  8757 ;;		_i2c_read2ByteRegister
  8758 ;;		_i2c_write2ByteRegister
  8759 ;;		_i2c_readNBytes
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _i2c_close
  8765  0F4D                     _i2c_close:	
  8766  0F4D                     l5350:	
  8767                           ;incstack = 0
  8768                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
  8769                           
  8770                           
  8771                           ;mcc_generated_files/drivers/i2c_master.c: 164:     i2c_error_t ret = I2C_BUSY;
  8772  0F4D  0020               	movlb	0	; select bank0
  8773  0F4E  01BE               	clrf	i2c_close@ret
  8774  0F4F  0ABE               	incf	i2c_close@ret,f
  8775                           
  8776                           ;mcc_generated_files/drivers/i2c_master.c: 165:     if(!i2c_status.busy)
  8777  0F50  0021               	movlb	1	; select bank1
  8778  0F51  1820               	btfsc	_i2c_status^(0+128),0
  8779  0F52  2F54               	goto	u3001
  8780  0F53  2F55               	goto	u3000
  8781  0F54                     u3001:	
  8782  0F54  2F68               	goto	l83
  8783  0F55                     u3000:	
  8784  0F55                     l5352:	
  8785                           
  8786                           ;mcc_generated_files/drivers/i2c_master.c: 166:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 167:         i2c_status.inUse = 0;
  8787  0F55  10A0               	bcf	_i2c_status^(0+128),1
  8788  0F56                     l5354:	
  8789                           
  8790                           ;mcc_generated_files/drivers/i2c_master.c: 169:         i2c_status.address = 0xff;
  8791  0F56  30FF               	movlw	255
  8792  0F57  0020               	movlb	0	; select bank0
  8793  0F58  00BD               	movwf	??_i2c_close
  8794  0F59  083D               	movf	??_i2c_close,w
  8795  0F5A  0021               	movlb	1	; select bank1
  8796  0F5B  00A1               	movwf	(_i2c_status^(0+128)+1)
  8797  0F5C                     l5356:	
  8798                           
  8799                           ;mcc_generated_files/drivers/i2c_master.c: 170:         mssp_clearIRQ();
  8800  0F5C  318C  2408  318F   	fcall	_mssp_clearIRQ
  8801  0F5F                     l5358:	
  8802                           
  8803                           ;mcc_generated_files/drivers/i2c_master.c: 171:         mssp_disableIRQ();
  8804  0F5F  318C  240B  318F   	fcall	_mssp_disableIRQ
  8805                           
  8806                           ;mcc_generated_files/drivers/i2c_master.c: 172:         ret = i2c_status.error;
  8807  0F62  0021               	movlb	1	; select bank1
  8808  0F63  082A               	movf	(_i2c_status^(0+128)+10),w
  8809  0F64  0020               	movlb	0	; select bank0
  8810  0F65  00BD               	movwf	??_i2c_close
  8811  0F66  083D               	movf	??_i2c_close,w
  8812  0F67  00BE               	movwf	i2c_close@ret
  8813  0F68                     l83:	
  8814                           ;mcc_generated_files/drivers/i2c_master.c: 173:     }
  8815                           
  8816                           
  8817                           ;mcc_generated_files/drivers/i2c_master.c: 174:     return ret;
  8818  0F68  0020               	movlb	0	; select bank0
  8819  0F69  083E               	movf	i2c_close@ret,w
  8820  0F6A                     l84:	
  8821  0F6A  0008               	return
  8822  0F6B                     __end_of_i2c_close:	
  8823                           
  8824                           	psect	text58
  8825  0C0B                     __ptext58:	
  8826 ;; *************** function _mssp_disableIRQ *****************
  8827 ;; Defined at:
  8828 ;;		line 49 in file "mcc_generated_files/i2c_driver.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;		None
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		None
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;Total ram usage:        0 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    6
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_i2c_close
  8853 ;;		_i2c_setTimeOut
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function _mssp_disableIRQ
  8859  0C0B                     _mssp_disableIRQ:	
  8860  0C0B                     l5288:	
  8861                           ;incstack = 0
  8862                           ; Regs used in _mssp_disableIRQ: []
  8863                           
  8864                           
  8865                           ;mcc_generated_files/i2c_driver.c: 51: __bit i2c_driver_open(void)
  8866  0C0B  0021               	movlb	1	; select bank1
  8867  0C0C  1191               	bcf	17,3	;volatile
  8868  0C0D                     l594:	
  8869  0C0D  0008               	return
  8870  0C0E                     __end_of_mssp_disableIRQ:	
  8871                           
  8872                           	psect	text59
  8873  0C08                     __ptext59:	
  8874 ;; *************** function _mssp_clearIRQ *****************
  8875 ;; Defined at:
  8876 ;;		line 54 in file "mcc_generated_files/i2c_driver.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		None
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    6
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_i2c_open
  8901 ;;		_i2c_close
  8902 ;;		_i2c_ISR
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function _mssp_clearIRQ
  8908  0C08                     _mssp_clearIRQ:	
  8909  0C08                     l5078:	
  8910                           ;incstack = 0
  8911                           ; Regs used in _mssp_clearIRQ: []
  8912                           
  8913                           
  8914                           ;mcc_generated_files/i2c_driver.c: 56:         SSPCON1 = 0x28;
  8915  0C08  0020               	movlb	0	; select bank0
  8916  0C09  1191               	bcf	17,3	;volatile
  8917  0C0A                     l597:	
  8918  0C0A  0008               	return
  8919  0C0B                     __end_of_mssp_clearIRQ:	
  8920                           
  8921                           	psect	text60
  8922  05FE                     __ptext60:	
  8923 ;; *************** function _bcdMinuteIncr *****************
  8924 ;; Defined at:
  8925 ;;		line 129 in file "main.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  mn              1    wreg     unsigned char 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  mn              1    0[BANK0 ] unsigned char 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      unsigned char 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, status,0
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;Total ram usage:        1 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    6
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_main
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           
  8954                           ;psect for function _bcdMinuteIncr
  8955  05FE                     _bcdMinuteIncr:	
  8956                           
  8957                           ;incstack = 0
  8958                           ; Regs used in _bcdMinuteIncr: [wreg+status,2+status,0]
  8959                           ;bcdMinuteIncr@mn stored from wreg
  8960  05FE  0020               	movlb	0	; select bank0
  8961  05FF  00BD               	movwf	bcdMinuteIncr@mn
  8962  0600                     l5760:	
  8963                           
  8964                           ;main.c: 131:     if(mn == 0x09) return 0x10;
  8965  0600  3009               	movlw	9
  8966  0601  063D               	xorwf	bcdMinuteIncr@mn,w
  8967  0602  1D03               	btfss	3,2
  8968  0603  2E05               	goto	u3301
  8969  0604  2E06               	goto	u3300
  8970  0605                     u3301:	
  8971  0605  2E08               	goto	l5766
  8972  0606                     u3300:	
  8973  0606                     l5762:	
  8974  0606  3010               	movlw	16
  8975  0607  2E32               	goto	l822
  8976  0608                     l5766:	
  8977                           
  8978                           ;main.c: 132:     if(mn == 0x19) return 0x20;
  8979  0608  3019               	movlw	25
  8980  0609  063D               	xorwf	bcdMinuteIncr@mn,w
  8981  060A  1D03               	btfss	3,2
  8982  060B  2E0D               	goto	u3311
  8983  060C  2E0E               	goto	u3310
  8984  060D                     u3311:	
  8985  060D  2E10               	goto	l5772
  8986  060E                     u3310:	
  8987  060E                     l5768:	
  8988  060E  3020               	movlw	32
  8989  060F  2E32               	goto	l822
  8990  0610                     l5772:	
  8991                           
  8992                           ;main.c: 133:     if(mn == 0x29) return 0x30;
  8993  0610  3029               	movlw	41
  8994  0611  063D               	xorwf	bcdMinuteIncr@mn,w
  8995  0612  1D03               	btfss	3,2
  8996  0613  2E15               	goto	u3321
  8997  0614  2E16               	goto	u3320
  8998  0615                     u3321:	
  8999  0615  2E18               	goto	l5778
  9000  0616                     u3320:	
  9001  0616                     l5774:	
  9002  0616  3030               	movlw	48
  9003  0617  2E32               	goto	l822
  9004  0618                     l5778:	
  9005                           
  9006                           ;main.c: 134:     if(mn == 0x39) return 0x40;
  9007  0618  3039               	movlw	57
  9008  0619  063D               	xorwf	bcdMinuteIncr@mn,w
  9009  061A  1D03               	btfss	3,2
  9010  061B  2E1D               	goto	u3331
  9011  061C  2E1E               	goto	u3330
  9012  061D                     u3331:	
  9013  061D  2E20               	goto	l5784
  9014  061E                     u3330:	
  9015  061E                     l5780:	
  9016  061E  3040               	movlw	64
  9017  061F  2E32               	goto	l822
  9018  0620                     l5784:	
  9019                           
  9020                           ;main.c: 135:     if(mn == 0x49) return 0x50;
  9021  0620  3049               	movlw	73
  9022  0621  063D               	xorwf	bcdMinuteIncr@mn,w
  9023  0622  1D03               	btfss	3,2
  9024  0623  2E25               	goto	u3341
  9025  0624  2E26               	goto	u3340
  9026  0625                     u3341:	
  9027  0625  2E28               	goto	l5790
  9028  0626                     u3340:	
  9029  0626                     l5786:	
  9030  0626  3050               	movlw	80
  9031  0627  2E32               	goto	l822
  9032  0628                     l5790:	
  9033                           
  9034                           ;main.c: 136:     if(mn == 0x59) return 0x00;
  9035  0628  3059               	movlw	89
  9036  0629  063D               	xorwf	bcdMinuteIncr@mn,w
  9037  062A  1D03               	btfss	3,2
  9038  062B  2E2D               	goto	u3351
  9039  062C  2E2E               	goto	u3350
  9040  062D                     u3351:	
  9041  062D  2E30               	goto	l5796
  9042  062E                     u3350:	
  9043  062E                     l5792:	
  9044  062E  3000               	movlw	0
  9045  062F  2E32               	goto	l822
  9046  0630                     l5796:	
  9047                           
  9048                           ;main.c: 137:     return (mn + 1);
  9049  0630  083D               	movf	bcdMinuteIncr@mn,w
  9050  0631  3E01               	addlw	1
  9051  0632                     l822:	
  9052  0632  0008               	return
  9053  0633                     __end_of_bcdMinuteIncr:	
  9054                           
  9055                           	psect	text61
  9056  0667                     __ptext61:	
  9057 ;; *************** function _bcdMinuteDecr *****************
  9058 ;; Defined at:
  9059 ;;		line 140 in file "main.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  mn              1    wreg     unsigned char 
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;  mn              1    0[BANK0 ] unsigned char 
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      unsigned char 
  9066 ;; Registers used:
  9067 ;;		wreg, status,2, status,0
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;Total ram usage:        1 bytes
  9078 ;; Hardware stack levels used:    1
  9079 ;; Hardware stack levels required when called:    6
  9080 ;; This function calls:
  9081 ;;		Nothing
  9082 ;; This function is called by:
  9083 ;;		_main
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           
  9088                           ;psect for function _bcdMinuteDecr
  9089  0667                     _bcdMinuteDecr:	
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _bcdMinuteDecr: [wreg+status,2+status,0]
  9093                           ;bcdMinuteDecr@mn stored from wreg
  9094  0667  0020               	movlb	0	; select bank0
  9095  0668  00BD               	movwf	bcdMinuteDecr@mn
  9096  0669                     l5800:	
  9097                           
  9098                           ;main.c: 141:     if(mn == 0x00) return 0x59;
  9099  0669  083D               	movf	bcdMinuteDecr@mn,w
  9100  066A  1D03               	btfss	3,2
  9101  066B  2E6D               	goto	u3361
  9102  066C  2E6E               	goto	u3360
  9103  066D                     u3361:	
  9104  066D  2E70               	goto	l5806
  9105  066E                     u3360:	
  9106  066E                     l5802:	
  9107  066E  3059               	movlw	89
  9108  066F  2E9A               	goto	l831
  9109  0670                     l5806:	
  9110                           
  9111                           ;main.c: 142:     if(mn == 0x10) return 0x09;
  9112  0670  3010               	movlw	16
  9113  0671  063D               	xorwf	bcdMinuteDecr@mn,w
  9114  0672  1D03               	btfss	3,2
  9115  0673  2E75               	goto	u3371
  9116  0674  2E76               	goto	u3370
  9117  0675                     u3371:	
  9118  0675  2E78               	goto	l5812
  9119  0676                     u3370:	
  9120  0676                     l5808:	
  9121  0676  3009               	movlw	9
  9122  0677  2E9A               	goto	l831
  9123  0678                     l5812:	
  9124                           
  9125                           ;main.c: 143:     if(mn == 0x20) return 0x19;
  9126  0678  3020               	movlw	32
  9127  0679  063D               	xorwf	bcdMinuteDecr@mn,w
  9128  067A  1D03               	btfss	3,2
  9129  067B  2E7D               	goto	u3381
  9130  067C  2E7E               	goto	u3380
  9131  067D                     u3381:	
  9132  067D  2E80               	goto	l5818
  9133  067E                     u3380:	
  9134  067E                     l5814:	
  9135  067E  3019               	movlw	25
  9136  067F  2E9A               	goto	l831
  9137  0680                     l5818:	
  9138                           
  9139                           ;main.c: 144:     if(mn == 0x30) return 0x29;
  9140  0680  3030               	movlw	48
  9141  0681  063D               	xorwf	bcdMinuteDecr@mn,w
  9142  0682  1D03               	btfss	3,2
  9143  0683  2E85               	goto	u3391
  9144  0684  2E86               	goto	u3390
  9145  0685                     u3391:	
  9146  0685  2E88               	goto	l5824
  9147  0686                     u3390:	
  9148  0686                     l5820:	
  9149  0686  3029               	movlw	41
  9150  0687  2E9A               	goto	l831
  9151  0688                     l5824:	
  9152                           
  9153                           ;main.c: 145:     if(mn == 0x40) return 0x39;
  9154  0688  3040               	movlw	64
  9155  0689  063D               	xorwf	bcdMinuteDecr@mn,w
  9156  068A  1D03               	btfss	3,2
  9157  068B  2E8D               	goto	u3401
  9158  068C  2E8E               	goto	u3400
  9159  068D                     u3401:	
  9160  068D  2E90               	goto	l5830
  9161  068E                     u3400:	
  9162  068E                     l5826:	
  9163  068E  3039               	movlw	57
  9164  068F  2E9A               	goto	l831
  9165  0690                     l5830:	
  9166                           
  9167                           ;main.c: 146:     if(mn == 0x50) return 0x49;
  9168  0690  3050               	movlw	80
  9169  0691  063D               	xorwf	bcdMinuteDecr@mn,w
  9170  0692  1D03               	btfss	3,2
  9171  0693  2E95               	goto	u3411
  9172  0694  2E96               	goto	u3410
  9173  0695                     u3411:	
  9174  0695  2E98               	goto	l5836
  9175  0696                     u3410:	
  9176  0696                     l5832:	
  9177  0696  3049               	movlw	73
  9178  0697  2E9A               	goto	l831
  9179  0698                     l5836:	
  9180                           
  9181                           ;main.c: 147:     return (mn - 1);
  9182  0698  083D               	movf	bcdMinuteDecr@mn,w
  9183  0699  3EFF               	addlw	255
  9184  069A                     l831:	
  9185  069A  0008               	return
  9186  069B                     __end_of_bcdMinuteDecr:	
  9187                           
  9188                           	psect	text62
  9189  0F30                     __ptext62:	
  9190 ;; *************** function _bcdHourIncr *****************
  9191 ;; Defined at:
  9192 ;;		line 114 in file "main.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  hr              1    wreg     unsigned char 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  hr              1    0[BANK0 ] unsigned char 
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      unsigned char 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;Total ram usage:        1 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    6
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_main
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function _bcdHourIncr
  9222  0F30                     _bcdHourIncr:	
  9223                           
  9224                           ;incstack = 0
  9225                           ; Regs used in _bcdHourIncr: [wreg+status,2+status,0]
  9226                           ;bcdHourIncr@hr stored from wreg
  9227  0F30  0020               	movlb	0	; select bank0
  9228  0F31  00BD               	movwf	bcdHourIncr@hr
  9229  0F32                     l5716:	
  9230                           
  9231                           ;main.c: 116:     if(hr == 0x09) return 0x10;
  9232  0F32  3009               	movlw	9
  9233  0F33  063D               	xorwf	bcdHourIncr@hr,w
  9234  0F34  1D03               	btfss	3,2
  9235  0F35  2F37               	goto	u3241
  9236  0F36  2F38               	goto	u3240
  9237  0F37                     u3241:	
  9238  0F37  2F3A               	goto	l5722
  9239  0F38                     u3240:	
  9240  0F38                     l5718:	
  9241  0F38  3010               	movlw	16
  9242  0F39  2F4C               	goto	l810
  9243  0F3A                     l5722:	
  9244                           
  9245                           ;main.c: 117:     if(hr == 0x19) return 0x20;
  9246  0F3A  3019               	movlw	25
  9247  0F3B  063D               	xorwf	bcdHourIncr@hr,w
  9248  0F3C  1D03               	btfss	3,2
  9249  0F3D  2F3F               	goto	u3251
  9250  0F3E  2F40               	goto	u3250
  9251  0F3F                     u3251:	
  9252  0F3F  2F42               	goto	l5728
  9253  0F40                     u3250:	
  9254  0F40                     l5724:	
  9255  0F40  3020               	movlw	32
  9256  0F41  2F4C               	goto	l810
  9257  0F42                     l5728:	
  9258                           
  9259                           ;main.c: 118:     if(hr == 0x23) return 0x00;
  9260  0F42  3023               	movlw	35
  9261  0F43  063D               	xorwf	bcdHourIncr@hr,w
  9262  0F44  1D03               	btfss	3,2
  9263  0F45  2F47               	goto	u3261
  9264  0F46  2F48               	goto	u3260
  9265  0F47                     u3261:	
  9266  0F47  2F4A               	goto	l5734
  9267  0F48                     u3260:	
  9268  0F48                     l5730:	
  9269  0F48  3000               	movlw	0
  9270  0F49  2F4C               	goto	l810
  9271  0F4A                     l5734:	
  9272                           
  9273                           ;main.c: 119:     return (hr + 1);
  9274  0F4A  083D               	movf	bcdHourIncr@hr,w
  9275  0F4B  3E01               	addlw	1
  9276  0F4C                     l810:	
  9277  0F4C  0008               	return
  9278  0F4D                     __end_of_bcdHourIncr:	
  9279                           
  9280                           	psect	text63
  9281  0F14                     __ptext63:	
  9282 ;; *************** function _bcdHourDecr *****************
  9283 ;; Defined at:
  9284 ;;		line 122 in file "main.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  hr              1    wreg     unsigned char 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  hr              1    0[BANK0 ] unsigned char 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      unsigned char 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;Total ram usage:        1 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    6
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_main
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           
  9313                           ;psect for function _bcdHourDecr
  9314  0F14                     _bcdHourDecr:	
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _bcdHourDecr: [wreg+status,2+status,0]
  9318                           ;bcdHourDecr@hr stored from wreg
  9319  0F14  0020               	movlb	0	; select bank0
  9320  0F15  00BD               	movwf	bcdHourDecr@hr
  9321  0F16                     l5738:	
  9322                           
  9323                           ;main.c: 123:     if(hr == 0x00) return 0x23;
  9324  0F16  083D               	movf	bcdHourDecr@hr,w
  9325  0F17  1D03               	btfss	3,2
  9326  0F18  2F1A               	goto	u3271
  9327  0F19  2F1B               	goto	u3270
  9328  0F1A                     u3271:	
  9329  0F1A  2F1D               	goto	l5744
  9330  0F1B                     u3270:	
  9331  0F1B                     l5740:	
  9332  0F1B  3023               	movlw	35
  9333  0F1C  2F2F               	goto	l816
  9334  0F1D                     l5744:	
  9335                           
  9336                           ;main.c: 124:     if(hr == 0x10) return 0x09;
  9337  0F1D  3010               	movlw	16
  9338  0F1E  063D               	xorwf	bcdHourDecr@hr,w
  9339  0F1F  1D03               	btfss	3,2
  9340  0F20  2F22               	goto	u3281
  9341  0F21  2F23               	goto	u3280
  9342  0F22                     u3281:	
  9343  0F22  2F25               	goto	l5750
  9344  0F23                     u3280:	
  9345  0F23                     l5746:	
  9346  0F23  3009               	movlw	9
  9347  0F24  2F2F               	goto	l816
  9348  0F25                     l5750:	
  9349                           
  9350                           ;main.c: 125:     if(hr == 0x20) return 0x19;
  9351  0F25  3020               	movlw	32
  9352  0F26  063D               	xorwf	bcdHourDecr@hr,w
  9353  0F27  1D03               	btfss	3,2
  9354  0F28  2F2A               	goto	u3291
  9355  0F29  2F2B               	goto	u3290
  9356  0F2A                     u3291:	
  9357  0F2A  2F2D               	goto	l5756
  9358  0F2B                     u3290:	
  9359  0F2B                     l5752:	
  9360  0F2B  3019               	movlw	25
  9361  0F2C  2F2F               	goto	l816
  9362  0F2D                     l5756:	
  9363                           
  9364                           ;main.c: 126:     return (hr - 1);
  9365  0F2D  083D               	movf	bcdHourDecr@hr,w
  9366  0F2E  3EFF               	addlw	255
  9367  0F2F                     l816:	
  9368  0F2F  0008               	return
  9369  0F30                     __end_of_bcdHourDecr:	
  9370                           
  9371                           	psect	text64
  9372  0E44                     __ptext64:	
  9373 ;; *************** function _SYSTEM_Initialize *****************
  9374 ;; Defined at:
  9375 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;		None
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0, pclath, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;Total ram usage:        0 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    8
  9396 ;; This function calls:
  9397 ;;		_ADC_Initialize
  9398 ;;		_FVR_Initialize
  9399 ;;		_OSCILLATOR_Initialize
  9400 ;;		_PIN_MANAGER_Initialize
  9401 ;;		_TMR0_Initialize
  9402 ;;		_WDT_Initialize
  9403 ;; This function is called by:
  9404 ;;		_main
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           
  9409                           ;psect for function _SYSTEM_Initialize
  9410  0E44                     _SYSTEM_Initialize:	
  9411  0E44                     l5674:	
  9412                           ;incstack = 0
  9413                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9414                           
  9415                           
  9416                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9417  0E44  3187  272E  318E   	fcall	_PIN_MANAGER_Initialize
  9418                           
  9419                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9420  0E47  318D  2557  318E   	fcall	_OSCILLATOR_Initialize
  9421                           
  9422                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  9423  0E4A  318C  2430  318E   	fcall	_WDT_Initialize
  9424                           
  9425                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  9426  0E4D  318C  242C  318E   	fcall	_FVR_Initialize
  9427                           
  9428                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  9429  0E50  318C  24CB  318E   	fcall	_ADC_Initialize
  9430                           
  9431                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  9432  0E53  318E  2657  318E   	fcall	_TMR0_Initialize
  9433  0E56                     l433:	
  9434  0E56  0008               	return
  9435  0E57                     __end_of_SYSTEM_Initialize:	
  9436                           
  9437                           	psect	text65
  9438  0C30                     __ptext65:	
  9439 ;; *************** function _WDT_Initialize *****************
  9440 ;; Defined at:
  9441 ;;		line 75 in file "mcc_generated_files/mcc.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      void 
  9448 ;; Registers used:
  9449 ;;		wreg
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;Total ram usage:        0 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    6
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_SYSTEM_Initialize
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           
  9470                           ;psect for function _WDT_Initialize
  9471  0C30                     _WDT_Initialize:	
  9472  0C30                     l5486:	
  9473                           ;incstack = 0
  9474                           ; Regs used in _WDT_Initialize: [wreg]
  9475                           
  9476                           
  9477                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x12;
  9478  0C30  3012               	movlw	18
  9479  0C31  0021               	movlb	1	; select bank1
  9480  0C32  0097               	movwf	23	;volatile
  9481  0C33                     l442:	
  9482  0C33  0008               	return
  9483  0C34                     __end_of_WDT_Initialize:	
  9484                           
  9485                           	psect	text66
  9486  0E57                     __ptext66:	
  9487 ;; *************** function _TMR0_Initialize *****************
  9488 ;; Defined at:
  9489 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;		None
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0, pclath, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;Total ram usage:        1 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    7
  9510 ;; This function calls:
  9511 ;;		_TMR0_SetInterruptHandler
  9512 ;; This function is called by:
  9513 ;;		_SYSTEM_Initialize
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function _TMR0_Initialize
  9519  0E57                     _TMR0_Initialize:	
  9520  0E57                     l5496:	
  9521                           ;incstack = 0
  9522                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9523                           
  9524                           
  9525                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  9526  0E57  0021               	movlb	1	; select bank1
  9527  0E58  0815               	movf	21,w	;volatile
  9528  0E59  39C0               	andlw	192
  9529  0E5A  3817               	iorlw	23
  9530  0E5B  0095               	movwf	21	;volatile
  9531  0E5C                     l5498:	
  9532                           
  9533                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  9534  0E5C  3083               	movlw	131
  9535  0E5D  0020               	movlb	0	; select bank0
  9536  0E5E  0095               	movwf	21	;volatile
  9537  0E5F                     l5500:	
  9538                           
  9539                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  9540  0E5F  3083               	movlw	131
  9541  0E60  00BF               	movwf	??_TMR0_Initialize
  9542  0E61  083F               	movf	??_TMR0_Initialize,w
  9543  0E62  00FD               	movwf	_timer0ReloadVal	;volatile
  9544  0E63                     l5502:	
  9545                           
  9546                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  9547  0E63  110B               	bcf	11,2	;volatile
  9548  0E64                     l5504:	
  9549                           
  9550                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  9551  0E64  168B               	bsf	11,5	;volatile
  9552  0E65                     l5506:	
  9553                           
  9554                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9555  0E65  30EC               	movlw	low _TMR0_DefaultInterruptHandler
  9556  0E66  00BD               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9557  0E67  300B               	movlw	high _TMR0_DefaultInterruptHandler
  9558  0E68  00BE               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9559  0E69  318C  2474  318E   	fcall	_TMR0_SetInterruptHandler
  9560  0E6C                     l530:	
  9561  0E6C  0008               	return
  9562  0E6D                     __end_of_TMR0_Initialize:	
  9563                           
  9564                           	psect	text67
  9565  0C74                     __ptext67:	
  9566 ;; *************** function _TMR0_SetInterruptHandler *****************
  9567 ;; Defined at:
  9568 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9571 ;;		 -> displayRefreshISR(1), TMR0_DefaultInterruptHandler(1), 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;Total ram usage:        2 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:    6
  9590 ;; This function calls:
  9591 ;;		Nothing
  9592 ;; This function is called by:
  9593 ;;		_TMR0_Initialize
  9594 ;;		_main
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _TMR0_SetInterruptHandler
  9600  0C74                     _TMR0_SetInterruptHandler:	
  9601  0C74                     l5368:	
  9602                           ;incstack = 0
  9603                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9604                           
  9605                           
  9606                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  9607  0C74  0020               	movlb	0	; select bank0
  9608  0C75  083E               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9609  0C76  00F9               	movwf	_TMR0_InterruptHandler+1
  9610  0C77  083D               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9611  0C78  00F8               	movwf	_TMR0_InterruptHandler
  9612  0C79                     l549:	
  9613  0C79  0008               	return
  9614  0C7A                     __end_of_TMR0_SetInterruptHandler:	
  9615                           
  9616                           	psect	text68
  9617  072E                     __ptext68:	
  9618 ;; *************** function _PIN_MANAGER_Initialize *****************
  9619 ;; Defined at:
  9620 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0, pclath, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    7
  9641 ;; This function calls:
  9642 ;;		_IOCBF4_SetInterruptHandler
  9643 ;; This function is called by:
  9644 ;;		_SYSTEM_Initialize
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           
  9649                           ;psect for function _PIN_MANAGER_Initialize
  9650  072E                     _PIN_MANAGER_Initialize:	
  9651  072E                     l5446:	
  9652                           ;incstack = 0
  9653                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9654                           
  9655                           
  9656                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
  9657  072E  0022               	movlb	2	; select bank2
  9658  072F  0190               	clrf	16	;volatile
  9659                           
  9660                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
  9661  0730  018F               	clrf	15	;volatile
  9662                           
  9663                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  9664  0731  018C               	clrf	12	;volatile
  9665                           
  9666                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
  9667  0732  018D               	clrf	13	;volatile
  9668                           
  9669                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  9670  0733  018E               	clrf	14	;volatile
  9671  0734                     l5448:	
  9672                           
  9673                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x0D;
  9674  0734  300D               	movlw	13
  9675  0735  0021               	movlb	1	; select bank1
  9676  0736  0090               	movwf	16	;volatile
  9677  0737                     l5450:	
  9678                           
  9679                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x67;
  9680  0737  3067               	movlw	103
  9681  0738  008C               	movwf	12	;volatile
  9682  0739                     l5452:	
  9683                           
  9684                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
  9685  0739  30FF               	movlw	255
  9686  073A  008D               	movwf	13	;volatile
  9687  073B                     l5454:	
  9688                           
  9689                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFD;
  9690  073B  30FD               	movlw	253
  9691  073C  008E               	movwf	14	;volatile
  9692                           
  9693                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x00;
  9694  073D  018F               	clrf	15	;volatile
  9695                           
  9696                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x00;
  9697  073E  0023               	movlb	3	; select bank3
  9698  073F  018F               	clrf	15	;volatile
  9699  0740                     l5456:	
  9700                           
  9701                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0x20;
  9702  0740  3020               	movlw	32
  9703  0741  008D               	movwf	13	;volatile
  9704  0742                     l5458:	
  9705                           
  9706                           ;mcc_generated_files/pin_manager.c: 82:     ANSELE = 0x05;
  9707  0742  3005               	movlw	5
  9708  0743  0090               	movwf	16	;volatile
  9709  0744                     l5460:	
  9710                           
  9711                           ;mcc_generated_files/pin_manager.c: 83:     ANSELA = 0x27;
  9712  0744  3027               	movlw	39
  9713  0745  008C               	movwf	12	;volatile
  9714  0746                     l5462:	
  9715                           
  9716                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9717  0746  0024               	movlb	4	; select bank4
  9718  0747  0190               	clrf	16	;volatile
  9719  0748                     l5464:	
  9720                           
  9721                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9722  0748  018D               	clrf	13	;volatile
  9723  0749                     l5466:	
  9724                           
  9725                           ;mcc_generated_files/pin_manager.c: 90:     OPTION_REGbits.nWPUEN = 1;
  9726  0749  0021               	movlb	1	; select bank1
  9727  074A  1795               	bsf	21,7	;volatile
  9728  074B                     l5468:	
  9729                           
  9730                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  9731  074B  0022               	movlb	2	; select bank2
  9732  074C  019D               	clrf	29	;volatile
  9733  074D                     l5470:	
  9734                           
  9735                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
  9736  074D  0027               	movlb	7	; select bank7
  9737  074E  1216               	bcf	22,4	;volatile
  9738  074F                     l5472:	
  9739                           
  9740                           ;mcc_generated_files/pin_manager.c: 104:     IOCBNbits.IOCBN4 = 0;
  9741  074F  1215               	bcf	21,4	;volatile
  9742  0750                     l5474:	
  9743                           
  9744                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP4 = 1;
  9745  0750  1614               	bsf	20,4	;volatile
  9746  0751                     l5476:	
  9747                           
  9748                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
  9749  0751  30EB               	movlw	low _IOCBF4_DefaultInterruptHandler
  9750  0752  0020               	movlb	0	; select bank0
  9751  0753  00BD               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  9752  0754  300B               	movlw	high _IOCBF4_DefaultInterruptHandler
  9753  0755  00BE               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  9754  0756  318C  246E  3187   	fcall	_IOCBF4_SetInterruptHandler
  9755  0759                     l5478:	
  9756                           
  9757                           ;mcc_generated_files/pin_manager.c: 114:     INTCONbits.IOCIE = 1;
  9758  0759  158B               	bsf	11,3	;volatile
  9759  075A                     l497:	
  9760  075A  0008               	return
  9761  075B                     __end_of_PIN_MANAGER_Initialize:	
  9762                           
  9763                           	psect	text69
  9764  0C6E                     __ptext69:	
  9765 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  9766 ;; Defined at:
  9767 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9770 ;;		 -> secondISR(1), IOCBF4_DefaultInterruptHandler(1), 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;		None
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		wreg
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;Total ram usage:        2 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    6
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_PIN_MANAGER_Initialize
  9793 ;;		_main
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           
  9798                           ;psect for function _IOCBF4_SetInterruptHandler
  9799  0C6E                     _IOCBF4_SetInterruptHandler:	
  9800  0C6E                     l5366:	
  9801                           ;incstack = 0
  9802                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  9803                           
  9804                           
  9805                           ;mcc_generated_files/pin_manager.c: 146:     IOCBF4_InterruptHandler = InterruptHandler;
  9806  0C6E  0020               	movlb	0	; select bank0
  9807  0C6F  083E               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  9808  0C70  00D8               	movwf	_IOCBF4_InterruptHandler+1
  9809  0C71  083D               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
  9810  0C72  00D7               	movwf	_IOCBF4_InterruptHandler
  9811  0C73                     l508:	
  9812  0C73  0008               	return
  9813  0C74                     __end_of_IOCBF4_SetInterruptHandler:	
  9814                           
  9815                           	psect	text70
  9816  0D57                     __ptext70:	
  9817 ;; *************** function _OSCILLATOR_Initialize *****************
  9818 ;; Defined at:
  9819 ;;		line 61 in file "mcc_generated_files/mcc.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;Total ram usage:        0 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    6
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_SYSTEM_Initialize
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           
  9848                           ;psect for function _OSCILLATOR_Initialize
  9849  0D57                     _OSCILLATOR_Initialize:	
  9850  0D57                     l5480:	
  9851                           ;incstack = 0
  9852                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9853                           
  9854                           
  9855                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  9856  0D57  3070               	movlw	112
  9857  0D58  0021               	movlb	1	; select bank1
  9858  0D59  0099               	movwf	25	;volatile
  9859  0D5A                     l5482:	
  9860                           
  9861                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  9862  0D5A  0198               	clrf	24	;volatile
  9863  0D5B                     l5484:	
  9864                           
  9865                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  9866  0D5B  0022               	movlb	2	; select bank2
  9867  0D5C  0196               	clrf	22	;volatile
  9868  0D5D                     l436:	
  9869                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  9870                           
  9871                           
  9872                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  9873  0D5D  0021               	movlb	1	; select bank1
  9874  0D5E  1F1A               	btfss	26,6	;volatile
  9875  0D5F  2D61               	goto	u3051
  9876  0D60  2D62               	goto	u3050
  9877  0D61                     u3051:	
  9878  0D61  2D5D               	goto	l436
  9879  0D62                     u3050:	
  9880  0D62                     l439:	
  9881  0D62  0008               	return
  9882  0D63                     __end_of_OSCILLATOR_Initialize:	
  9883                           
  9884                           	psect	text71
  9885  0C2C                     __ptext71:	
  9886 ;; *************** function _FVR_Initialize *****************
  9887 ;; Defined at:
  9888 ;;		line 58 in file "mcc_generated_files/fvr.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;		None
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;		None
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      void 
  9895 ;; Registers used:
  9896 ;;		wreg
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;Total ram usage:        0 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:    6
  9909 ;; This function calls:
  9910 ;;		Nothing
  9911 ;; This function is called by:
  9912 ;;		_SYSTEM_Initialize
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           
  9917                           ;psect for function _FVR_Initialize
  9918  0C2C                     _FVR_Initialize:	
  9919  0C2C                     l5488:	
  9920                           ;incstack = 0
  9921                           ; Regs used in _FVR_Initialize: [wreg]
  9922                           
  9923                           
  9924                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  9925  0C2C  3081               	movlw	129
  9926  0C2D  0022               	movlb	2	; select bank2
  9927  0C2E  0097               	movwf	23	;volatile
  9928  0C2F                     l706:	
  9929  0C2F  0008               	return
  9930  0C30                     __end_of_FVR_Initialize:	
  9931                           
  9932                           	psect	text72
  9933  0CCB                     __ptext72:	
  9934 ;; *************** function _ADC_Initialize *****************
  9935 ;; Defined at:
  9936 ;;		line 65 in file "mcc_generated_files/adc.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg, status,2
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;Total ram usage:        0 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; Hardware stack levels required when called:    6
  9957 ;; This function calls:
  9958 ;;		Nothing
  9959 ;; This function is called by:
  9960 ;;		_SYSTEM_Initialize
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           
  9965                           ;psect for function _ADC_Initialize
  9966  0CCB                     _ADC_Initialize:	
  9967  0CCB                     l5490:	
  9968                           ;incstack = 0
  9969                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9970                           
  9971                           
  9972                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  9973  0CCB  3001               	movlw	1
  9974  0CCC  0021               	movlb	1	; select bank1
  9975  0CCD  009D               	movwf	29	;volatile
  9976                           
  9977                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xE3;
  9978  0CCE  30E3               	movlw	227
  9979  0CCF  009E               	movwf	30	;volatile
  9980  0CD0                     l5492:	
  9981                           
  9982                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  9983  0CD0  019B               	clrf	27	;volatile
  9984  0CD1                     l5494:	
  9985                           
  9986                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  9987  0CD1  019C               	clrf	28	;volatile
  9988  0CD2                     l724:	
  9989  0CD2  0008               	return
  9990  0CD3                     __end_of_ADC_Initialize:	
  9991                           
  9992                           	psect	text73
  9993  07DC                     __ptext73:	
  9994 ;; *************** function _ADC_GetConversion *****************
  9995 ;; Defined at:
  9996 ;;		line 110 in file "mcc_generated_files/adc.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  channel         1    wreg     enum E2939
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  channel         1    3[BANK0 ] enum E2939
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  2    0[BANK0 ] unsigned short 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;Total ram usage:        4 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    6
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_main
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           
 10025                           ;psect for function _ADC_GetConversion
 10026  07DC                     _ADC_GetConversion:	
 10027                           
 10028                           ;incstack = 0
 10029                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10030                           ;ADC_GetConversion@channel stored from wreg
 10031  07DC  0020               	movlb	0	; select bank0
 10032  07DD  00C0               	movwf	ADC_GetConversion@channel
 10033  07DE                     l5676:	
 10034                           
 10035                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
 10036  07DE  0840               	movf	ADC_GetConversion@channel,w
 10037  07DF  00BF               	movwf	??_ADC_GetConversion
 10038  07E0  0DBF               	rlf	??_ADC_GetConversion,f
 10039  07E1  0DBF               	rlf	??_ADC_GetConversion,f
 10040  07E2  0021               	movlb	1	; select bank1
 10041  07E3  081D               	movf	29,w	;volatile
 10042  07E4  0020               	movlb	0	; select bank0
 10043  07E5  063F               	xorwf	??_ADC_GetConversion,w
 10044  07E6  3983               	andlw	-125
 10045  07E7  063F               	xorwf	??_ADC_GetConversion,w
 10046  07E8  0021               	movlb	1	; select bank1
 10047  07E9  009D               	movwf	29	;volatile
 10048  07EA                     l5678:	
 10049                           
 10050                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
 10051  07EA  141D               	bsf	29,0	;volatile
 10052  07EB                     l5680:	
 10053                           
 10054                           ;mcc_generated_files/adc.c: 119:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 10055  07EB  300D               	movlw	13
 10056  07EC                     u4067:	
 10057  07EC  0B89               	decfsz	9,f
 10058  07ED  2FEC               	goto	u4067
 10059  07EE  0000               	nop
 10060  07EF                     l5682:	
 10061                           
 10062                           ;mcc_generated_files/adc.c: 122:     ADCON0bits.GO_nDONE = 1;
 10063  07EF  0021               	movlb	1	; select bank1
 10064  07F0  149D               	bsf	29,1	;volatile
 10065                           
 10066                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GO_nDONE)
 10067  07F1  2FF3               	goto	l739
 10068  07F2                     l740:	
 10069  07F2  0064               	clrwdt	;# 
 10070  07F3                     l739:	
 10071                           ;mcc_generated_files/adc.c: 128:     }
 10072                           
 10073                           
 10074                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GO_nDONE)
 10075  07F3  0021               	movlb	1	; select bank1
 10076  07F4  189D               	btfsc	29,1	;volatile
 10077  07F5  2FF7               	goto	u3221
 10078  07F6  2FF8               	goto	u3220
 10079  07F7                     u3221:	
 10080  07F7  2FF2               	goto	l740
 10081  07F8                     u3220:	
 10082  07F8                     l5684:	
 10083                           
 10084                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10085  07F8  081C               	movf	28,w	;volatile
 10086  07F9  0020               	movlb	0	; select bank0
 10087  07FA  00BE               	movwf	?_ADC_GetConversion+1
 10088  07FB  0021               	movlb	1	; select bank1
 10089  07FC  081B               	movf	27,w	;volatile
 10090  07FD  0020               	movlb	0	; select bank0
 10091  07FE  00BD               	movwf	?_ADC_GetConversion
 10092  07FF                     l742:	
 10093  07FF  0008               	return
 10094  0800                     __end_of_ADC_GetConversion:	
 10095                           
 10096                           	psect	intentry
 10097  0004                     __pintentry:	
 10098 ;; *************** function _INTERRUPT_InterruptManager *****************
 10099 ;; Defined at:
 10100 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;		None
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;		None
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;Total ram usage:        0 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    5
 10121 ;; This function calls:
 10122 ;;		Absolute function
 10123 ;;		_PIN_MANAGER_IOC
 10124 ;;		_TMR0_ISR
 10125 ;;		_i2c_busCollisionISR
 10126 ;;		i1_i2c_ISR
 10127 ;; This function is called by:
 10128 ;;		Interrupt level 1
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132  0004                     _INTERRUPT_InterruptManager:	
 10133                           
 10134                           ;incstack = 0
 10135  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10136                           
 10137                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10138  0005  3180               	pagesel	$
 10139  0006                     i1l5954:	
 10140                           
 10141                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10142  0006  1E8B               	btfss	11,5	;volatile
 10143  0007  2809               	goto	u359_21
 10144  0008  280A               	goto	u359_20
 10145  0009                     u359_21:	
 10146  0009  2812               	goto	i1l394
 10147  000A                     u359_20:	
 10148  000A                     i1l5956:	
 10149  000A  1D0B               	btfss	11,2	;volatile
 10150  000B  280D               	goto	u360_21
 10151  000C  280E               	goto	u360_20
 10152  000D                     u360_21:	
 10153  000D  2812               	goto	i1l394
 10154  000E                     u360_20:	
 10155  000E                     i1l5958:	
 10156                           
 10157                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 10158  000E  318C  24AB  3180   	fcall	_TMR0_ISR
 10159                           
 10160                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10161  0011  2842               	goto	i1l404
 10162  0012                     i1l394:	
 10163                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
 10164                           
 10165  0012  1D8B               	btfss	11,3	;volatile
 10166  0013  2815               	goto	u361_21
 10167  0014  2816               	goto	u361_20
 10168  0015                     u361_21:	
 10169  0015  281E               	goto	i1l396
 10170  0016                     u361_20:	
 10171  0016                     i1l5960:	
 10172  0016  1C0B               	btfss	11,0	;volatile
 10173  0017  2819               	goto	u362_21
 10174  0018  281A               	goto	u362_20
 10175  0019                     u362_21:	
 10176  0019  281E               	goto	i1l396
 10177  001A                     u362_20:	
 10178  001A                     i1l5962:	
 10179                           
 10180                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
 10181  001A  318C  24D3  3180   	fcall	_PIN_MANAGER_IOC
 10182                           
 10183                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 10184  001D  2842               	goto	i1l404
 10185  001E                     i1l396:	
 10186                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 10187                           
 10188  001E  1F0B               	btfss	11,6	;volatile
 10189  001F  2821               	goto	u363_21
 10190  0020  2822               	goto	u363_20
 10191  0021                     u363_21:	
 10192  0021  2842               	goto	i1l403
 10193  0022                     u363_20:	
 10194  0022                     i1l5964:	
 10195                           
 10196                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
 10197  0022  0021               	movlb	1	; select bank1
 10198  0023  1D92               	btfss	18,3	;volatile
 10199  0024  2826               	goto	u364_21
 10200  0025  2827               	goto	u364_20
 10201  0026                     u364_21:	
 10202  0026  2832               	goto	i1l399
 10203  0027                     u364_20:	
 10204  0027                     i1l5966:	
 10205  0027  0020               	movlb	0	; select bank0
 10206  0028  1D92               	btfss	18,3	;volatile
 10207  0029  282B               	goto	u365_21
 10208  002A  282C               	goto	u365_20
 10209  002B                     u365_21:	
 10210  002B  2832               	goto	i1l399
 10211  002C                     u365_20:	
 10212  002C                     i1l5968:	
 10213                           
 10214                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c_driver_busCollisionISR();
 10215  002C  087B               	movf	_i2c_driver_busCollisionISR+1,w
 10216  002D  008A               	movwf	10
 10217  002E  087A               	movf	_i2c_driver_busCollisionISR,w
 10218  002F  000A               	callw
 10219  0030  3180               	pagesel	$
 10220                           
 10221                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10222  0031  2842               	goto	i1l404
 10223  0032                     i1l399:	
 10224                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
 10225                           
 10226  0032  0021               	movlb	1	; select bank1
 10227  0033  1D91               	btfss	17,3	;volatile
 10228  0034  2836               	goto	u366_21
 10229  0035  2837               	goto	u366_20
 10230  0036                     u366_21:	
 10231  0036  2842               	goto	i1l403
 10232  0037                     u366_20:	
 10233  0037                     i1l5970:	
 10234  0037  0020               	movlb	0	; select bank0
 10235  0038  1D91               	btfss	17,3	;volatile
 10236  0039  283B               	goto	u367_21
 10237  003A  283C               	goto	u367_20
 10238  003B                     u367_21:	
 10239  003B  2842               	goto	i1l403
 10240  003C                     u367_20:	
 10241  003C                     i1l5972:	
 10242                           
 10243                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c_driver_i2cISR();
 10244  003C  082F               	movf	_i2c_driver_i2cISR+1,w
 10245  003D  008A               	movwf	10
 10246  003E  082E               	movf	_i2c_driver_i2cISR,w
 10247  003F  000A               	callw
 10248  0040  3180               	pagesel	$
 10249                           
 10250                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 10251  0041  2842               	goto	i1l404
 10252  0042                     i1l403:	
 10253                           ;mcc_generated_files/interrupt_manager.c: 79:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 81:     }
 10254                           
 10255  0042                     i1l404:	
 10256  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10257  0043  0009               	retfie
 10258  0044                     __end_of_INTERRUPT_InterruptManager:	
 10259                           
 10260                           	psect	text75
 10261  0FD6                     __ptext75:	
 10262 ;; *************** function i1_i2c_ISR *****************
 10263 ;; Defined at:
 10264 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;		None
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;		None
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;Total ram usage:        3 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:    4
 10285 ;; This function calls:
 10286 ;;		i1_do_I2C_DO_ACK
 10287 ;;		i1_do_I2C_DO_ADDRESS_NACK
 10288 ;;		i1_do_I2C_DO_NACK_RESTART
 10289 ;;		i1_do_I2C_DO_NACK_STOP
 10290 ;;		i1_do_I2C_IDLE
 10291 ;;		i1_do_I2C_RCEN
 10292 ;;		i1_do_I2C_RESET
 10293 ;;		i1_do_I2C_RX
 10294 ;;		i1_do_I2C_SEND_ADR_READ
 10295 ;;		i1_do_I2C_SEND_ADR_WRITE
 10296 ;;		i1_do_I2C_SEND_RESTART
 10297 ;;		i1_do_I2C_SEND_RESTART_READ
 10298 ;;		i1_do_I2C_SEND_RESTART_WRITE
 10299 ;;		i1_do_I2C_SEND_STOP
 10300 ;;		i1_do_I2C_TX
 10301 ;;		i1_do_I2C_TX_EMPTY
 10302 ;;		i1_i2c_driver_isNACK
 10303 ;;		i1_mssp_clearIRQ
 10304 ;; This function is called by:
 10305 ;;		_INTERRUPT_InterruptManager
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           
 10310                           ;psect for function i1_i2c_ISR
 10311  0FD6                     i1_i2c_ISR:	
 10312  0FD6                     i1l5854:	
 10313                           ;incstack = 0
 10314                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10315                           
 10316                           
 10317                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp_clearIRQ();
 10318  0FD6  318C  2405  318F   	fcall	i1_mssp_clearIRQ
 10319  0FD9                     i1l5856:	
 10320                           
 10321                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c_driver_isNACK())
 10322  0FD9  0021               	movlb	1	; select bank1
 10323  0FDA  1DA0               	btfss	_i2c_status^(0+128),3
 10324  0FDB  2FDD               	goto	u345_21
 10325  0FDC  2FDE               	goto	u345_20
 10326  0FDD                     u345_21:	
 10327  0FDD  2FEA               	goto	i1l5862
 10328  0FDE                     u345_20:	
 10329  0FDE                     i1l5858:	
 10330  0FDE  318C  24B3  318F   	fcall	i1_i2c_driver_isNACK
 10331  0FE1  1C03               	btfss	3,0
 10332  0FE2  2FE4               	goto	u346_21
 10333  0FE3  2FE5               	goto	u346_20
 10334  0FE4                     u346_21:	
 10335  0FE4  2FEA               	goto	i1l5862
 10336  0FE5                     u346_20:	
 10337  0FE5                     i1l5860:	
 10338                           
 10339                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 10340  0FE5  300F               	movlw	15
 10341  0FE6  00F3               	movwf	??i1_i2c_ISR
 10342  0FE7  0873               	movf	??i1_i2c_ISR,w
 10343  0FE8  0021               	movlb	1	; select bank1
 10344  0FE9  00A9               	movwf	(_i2c_status^(0+128)+9)
 10345  0FEA                     i1l5862:	
 10346                           
 10347                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 10348  0FEA  0021               	movlb	1	; select bank1
 10349  0FEB  0829               	movf	(_i2c_status^(0+128)+9),w
 10350  0FEC  00F3               	movwf	??i1_i2c_ISR
 10351  0FED  01F4               	clrf	??i1_i2c_ISR+1
 10352  0FEE  35F3               	lslf	??i1_i2c_ISR,f
 10353  0FEF  0DF4               	rlf	??i1_i2c_ISR+1,f
 10354  0FF0  3000               	movlw	low (_fsmStateTable| (0+32768))
 10355  0FF1  0773               	addwf	??i1_i2c_ISR,w
 10356  0FF2  0084               	movwf	4
 10357  0FF3  3090               	movlw	high (_fsmStateTable| (0+32768))
 10358  0FF4  3D74               	addwfc	??i1_i2c_ISR+1,w
 10359  0FF5  0085               	movwf	5
 10360  0FF6  3F01               	moviw [1]fsr0
 10361  0FF7  008A               	movwf	10
 10362  0FF8  3F00               	moviw [0]fsr0
 10363  0FF9  000A               	callw
 10364  0FFA  318F               	pagesel	$
 10365  0FFB  00F5               	movwf	??i1_i2c_ISR+2
 10366  0FFC  0875               	movf	??i1_i2c_ISR+2,w
 10367  0FFD  0021               	movlb	1	; select bank1
 10368  0FFE  00A9               	movwf	(_i2c_status^(0+128)+9)
 10369  0FFF                     i1l198:	
 10370  0FFF  0008               	return
 10371  1000                     __end_ofi1_i2c_ISR:	
 10372                           
 10373                           	psect	text76
 10374  0C05                     __ptext76:	
 10375 ;; *************** function i1_mssp_clearIRQ *****************
 10376 ;; Defined at:
 10377 ;;		line 54 in file "mcc_generated_files/i2c_driver.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;		None
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      void 
 10384 ;; Registers used:
 10385 ;;		None
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;Total ram usage:        0 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		i1_i2c_ISR
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           
 10405                           ;psect for function i1_mssp_clearIRQ
 10406  0C05                     i1_mssp_clearIRQ:	
 10407  0C05                     i1l4246:	
 10408                           ;incstack = 0
 10409                           ; Regs used in i1_mssp_clearIRQ: []
 10410                           
 10411                           
 10412                           ;mcc_generated_files/i2c_driver.c: 56:         SSPCON1 = 0x28;
 10413  0C05  0020               	movlb	0	; select bank0
 10414  0C06  1191               	bcf	17,3	;volatile
 10415  0C07                     i1l597:	
 10416  0C07  0008               	return
 10417  0C08                     __end_ofi1_mssp_clearIRQ:	
 10418                           
 10419                           	psect	text77
 10420  0445                     __ptext77:	
 10421 ;; *************** function i1_do_I2C_RX *****************
 10422 ;; Defined at:
 10423 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;		None
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      enum E3411
 10430 ;; Registers used:
 10431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;Total ram usage:        3 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    3
 10444 ;; This function calls:
 10445 ;;		Absolute function
 10446 ;;		i1_do_I2C_DO_NACK_RESTART
 10447 ;;		i1_do_I2C_DO_NACK_STOP
 10448 ;;		i1_i2c_driver_getRXData
 10449 ;;		i1_i2c_driver_sendACK
 10450 ;;		i1_i2c_restartWrite
 10451 ;;		i1_rd1RegCompleteHandler
 10452 ;;		i1_rd2RegCompleteHandler
 10453 ;;		i1_rdBlkRegCompleteHandler
 10454 ;;		i1_returnReset
 10455 ;;		i1_returnStop
 10456 ;;		i1_wr1RegCompleteHandler
 10457 ;;		i1_wr2RegCompleteHandler
 10458 ;; This function is called by:
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           
 10463                           ;psect for function i1_do_I2C_RX
 10464  0445                     i1_do_I2C_RX:	
 10465  0445                     i1l5612:	
 10466                           ;incstack = 0
 10467                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10468                           
 10469                           
 10470                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c_driver_
      +                          getRXData();
 10471  0445  318B  23FF  3184   	fcall	i1_i2c_driver_getRXData
 10472  0448  00F0               	movwf	??i1_do_I2C_RX
 10473  0449  0021               	movlb	1	; select bank1
 10474  044A  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 10475  044B  0086               	movwf	6
 10476  044C  0187               	clrf	7
 10477  044D  0870               	movf	??i1_do_I2C_RX,w
 10478  044E  0081               	movwf	1
 10479  044F                     i1l5614:	
 10480  044F  3001               	movlw	1
 10481  0450  00F0               	movwf	??i1_do_I2C_RX
 10482  0451  0870               	movf	??i1_do_I2C_RX,w
 10483  0452  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 10484  0453                     i1l5616:	
 10485                           
 10486                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 10487  0453  3001               	movlw	1
 10488  0454  02A3               	subwf	(_i2c_status^(0+128)+3),f
 10489  0455  3000               	movlw	0
 10490  0456  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 10491  0457  0823               	movf	(_i2c_status^(0+128)+3),w
 10492  0458  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 10493  0459  1903               	btfsc	3,2
 10494  045A  2C5C               	goto	u321_21
 10495  045B  2C5D               	goto	u321_20
 10496  045C                     u321_21:	
 10497  045C  2C62               	goto	i1l173
 10498  045D                     u321_20:	
 10499  045D                     i1l5618:	
 10500                           
 10501                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c_driver_sendACK();
 10502  045D  318C  2424  3184   	fcall	i1_i2c_driver_sendACK
 10503  0460                     i1l5620:	
 10504                           
 10505                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 10506  0460  3005               	movlw	5
 10507  0461  2C8F               	goto	i1l174
 10508  0462                     i1l173:	
 10509                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 10510                           
 10511                           
 10512                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 10513  0462  1520               	bsf	_i2c_status^(0+128),2
 10514                           
 10515                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 10516  0463  2C6C               	goto	i1l5636
 10517  0464                     i1l5626:	
 10518                           
 10519                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 10520  0464  318C  2464  3184   	fcall	i1_do_I2C_DO_NACK_RESTART
 10521  0467  2C8F               	goto	i1l174
 10522  0468                     i1l5630:	
 10523                           
 10524                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 10525  0468  318C  245F  3184   	fcall	i1_do_I2C_DO_NACK_STOP
 10526  046B  2C8F               	goto	i1l174
 10527  046C                     i1l5636:	
 10528  046C  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 10529  046D  00F0               	movwf	??i1_do_I2C_RX
 10530  046E  0870               	movf	??i1_do_I2C_RX,w
 10531  046F  0020               	movlb	0	; select bank0
 10532  0470  00BE               	movwf	i1wr1RegCompleteHandler@p
 10533  0471  300B               	movlw	11
 10534  0472  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 10535  0473  0086               	movwf	6
 10536  0474  0187               	clrf	7
 10537  0475  3F41               	moviw [1]fsr1
 10538  0476  008A               	movwf	10
 10539  0477  3F40               	moviw [0]fsr1
 10540  0478  000A               	callw
 10541  0479  3184               	pagesel	$
 10542  047A  00F1               	movwf	??i1_do_I2C_RX+1
 10543  047B  01F2               	clrf	??i1_do_I2C_RX+2
 10544                           
 10545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10546                           ; Switch size 1, requested type "simple"
 10547                           ; Number of cases is 1, Range of values is 0 to 0
 10548                           ; switch strategies available:
 10549                           ; Name         Instructions Cycles
 10550                           ; simple_byte            4     3 (average)
 10551                           ; direct_byte            8     6 (fixed)
 10552                           ; jumptable            260     6 (fixed)
 10553                           ;	Chosen strategy is simple_byte
 10554  047C  0872               	movf	??i1_do_I2C_RX+2,w
 10555  047D  3A00               	xorlw	0	; case 0
 10556  047E  1903               	skipnz
 10557  047F  2C81               	goto	i1l6370
 10558  0480  2C68               	goto	i1l5630
 10559  0481                     i1l6370:	
 10560                           
 10561                           ; Switch size 1, requested type "simple"
 10562                           ; Number of cases is 4, Range of values is 1 to 4
 10563                           ; switch strategies available:
 10564                           ; Name         Instructions Cycles
 10565                           ; simple_byte           13     7 (average)
 10566                           ; direct_byte           17     9 (fixed)
 10567                           ; jumptable            263     9 (fixed)
 10568                           ;	Chosen strategy is simple_byte
 10569  0481  0871               	movf	??i1_do_I2C_RX+1,w
 10570  0482  3A01               	xorlw	1	; case 1
 10571  0483  1903               	skipnz
 10572  0484  2C68               	goto	i1l5630
 10573  0485  3A03               	xorlw	3	; case 2
 10574  0486  1903               	skipnz
 10575  0487  2C64               	goto	i1l5626
 10576  0488  3A01               	xorlw	1	; case 3
 10577  0489  1903               	skipnz
 10578  048A  2C64               	goto	i1l5626
 10579  048B  3A07               	xorlw	7	; case 4
 10580  048C  1903               	skipnz
 10581  048D  2C68               	goto	i1l5630
 10582  048E  2C68               	goto	i1l5630
 10583  048F                     i1l174:	
 10584  048F  0008               	return
 10585  0490                     __end_ofi1_do_I2C_RX:	
 10586                           
 10587                           	psect	text78
 10588  034C                     __ptext78:	
 10589 ;; *************** function i1_do_I2C_TX *****************
 10590 ;; Defined at:
 10591 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      enum E3411
 10598 ;; Registers used:
 10599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;Total ram usage:        3 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    3
 10612 ;; This function calls:
 10613 ;;		Absolute function
 10614 ;;		i1_do_I2C_SEND_RESTART_READ
 10615 ;;		i1_do_I2C_SEND_RESTART_WRITE
 10616 ;;		i1_do_I2C_SEND_STOP
 10617 ;;		i1_i2c_driver_TXData
 10618 ;;		i1_i2c_driver_isNACK
 10619 ;;		i1_i2c_restartWrite
 10620 ;;		i1_rd1RegCompleteHandler
 10621 ;;		i1_rd2RegCompleteHandler
 10622 ;;		i1_rdBlkRegCompleteHandler
 10623 ;;		i1_returnReset
 10624 ;;		i1_returnStop
 10625 ;;		i1_wr1RegCompleteHandler
 10626 ;;		i1_wr2RegCompleteHandler
 10627 ;; This function is called by:
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           
 10632                           ;psect for function i1_do_I2C_TX
 10633  034C                     i1_do_I2C_TX:	
 10634  034C                     i1l5578:	
 10635                           ;incstack = 0
 10636                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10637                           
 10638                           
 10639                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c_driver_isNACK())
 10640  034C  318C  24B3  3183   	fcall	i1_i2c_driver_isNACK
 10641  034F  1C03               	btfss	3,0
 10642  0350  2B52               	goto	u319_21
 10643  0351  2B53               	goto	u319_20
 10644  0352                     u319_21:	
 10645  0352  2B84               	goto	i1l157
 10646  0353                     u319_20:	
 10647  0353  2B60               	goto	i1l5596
 10648  0354                     i1l5582:	
 10649                           
 10650                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 10651  0354  318C  2446  3183   	fcall	i1_do_I2C_SEND_RESTART_READ
 10652  0357  2BA0               	goto	i1l160
 10653  0358                     i1l5586:	
 10654                           
 10655                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 10656  0358  318C  244B  3183   	fcall	i1_do_I2C_SEND_RESTART_WRITE
 10657  035B  2BA0               	goto	i1l160
 10658  035C                     i1l5590:	
 10659                           
 10660                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 10661  035C  318C  2455  3183   	fcall	i1_do_I2C_SEND_STOP
 10662  035F  2BA0               	goto	i1l160
 10663  0360                     i1l5596:	
 10664  0360  0021               	movlb	1	; select bank1
 10665  0361  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 10666  0362  00F0               	movwf	??i1_do_I2C_TX
 10667  0363  0870               	movf	??i1_do_I2C_TX,w
 10668  0364  0020               	movlb	0	; select bank0
 10669  0365  00BE               	movwf	i1wr1RegCompleteHandler@p
 10670  0366  3011               	movlw	17
 10671  0367  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 10672  0368  0086               	movwf	6
 10673  0369  0187               	clrf	7
 10674  036A  3F41               	moviw [1]fsr1
 10675  036B  008A               	movwf	10
 10676  036C  3F40               	moviw [0]fsr1
 10677  036D  000A               	callw
 10678  036E  3183               	pagesel	$
 10679  036F  00F1               	movwf	??i1_do_I2C_TX+1
 10680  0370  01F2               	clrf	??i1_do_I2C_TX+2
 10681                           
 10682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10683                           ; Switch size 1, requested type "simple"
 10684                           ; Number of cases is 1, Range of values is 0 to 0
 10685                           ; switch strategies available:
 10686                           ; Name         Instructions Cycles
 10687                           ; simple_byte            4     3 (average)
 10688                           ; direct_byte            8     6 (fixed)
 10689                           ; jumptable            260     6 (fixed)
 10690                           ;	Chosen strategy is simple_byte
 10691  0371  0872               	movf	??i1_do_I2C_TX+2,w
 10692  0372  3A00               	xorlw	0	; case 0
 10693  0373  1903               	skipnz
 10694  0374  2B76               	goto	i1l6372
 10695  0375  2B5C               	goto	i1l5590
 10696  0376                     i1l6372:	
 10697                           
 10698                           ; Switch size 1, requested type "simple"
 10699                           ; Number of cases is 4, Range of values is 1 to 4
 10700                           ; switch strategies available:
 10701                           ; Name         Instructions Cycles
 10702                           ; simple_byte           13     7 (average)
 10703                           ; direct_byte           17     9 (fixed)
 10704                           ; jumptable            263     9 (fixed)
 10705                           ;	Chosen strategy is simple_byte
 10706  0376  0871               	movf	??i1_do_I2C_TX+1,w
 10707  0377  3A01               	xorlw	1	; case 1
 10708  0378  1903               	skipnz
 10709  0379  2B5C               	goto	i1l5590
 10710  037A  3A03               	xorlw	3	; case 2
 10711  037B  1903               	skipnz
 10712  037C  2B54               	goto	i1l5582
 10713  037D  3A01               	xorlw	1	; case 3
 10714  037E  1903               	skipnz
 10715  037F  2B58               	goto	i1l5586
 10716  0380  3A07               	xorlw	7	; case 4
 10717  0381  1903               	skipnz
 10718  0382  2B5C               	goto	i1l5590
 10719  0383  2B5C               	goto	i1l5590
 10720  0384                     i1l157:	
 10721                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 10722                           
 10723                           
 10724                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 10725  0384  0021               	movlb	1	; select bank1
 10726  0385  11A0               	bcf	_i2c_status^(0+128),3
 10727  0386                     i1l5598:	
 10728                           
 10729                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c_driver_TXData(*i2c_status.da
      +                          ta_ptr++);
 10730  0386  3002               	movlw	2
 10731  0387  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 10732  0388  0086               	movwf	6
 10733  0389  0187               	clrf	7
 10734  038A  3F40               	moviw [0]fsr1
 10735  038B  0084               	movwf	4
 10736  038C  0185               	clrf	5
 10737  038D  0A81               	incf	1,f
 10738  038E  0800               	movf	0,w
 10739  038F  318C  243C  3183   	fcall	i1_i2c_driver_TXData
 10740  0392                     i1l5600:	
 10741                           
 10742                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 10743  0392  3001               	movlw	1
 10744  0393  0021               	movlb	1	; select bank1
 10745  0394  02A3               	subwf	(_i2c_status^(0+128)+3),f
 10746  0395  3000               	movlw	0
 10747  0396  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 10748  0397  0823               	movf	(_i2c_status^(0+128)+3),w
 10749  0398  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 10750  0399  1D03               	btfss	3,2
 10751  039A  2B9C               	goto	u320_21
 10752  039B  2B9D               	goto	u320_20
 10753  039C                     u320_21:	
 10754  039C  2B9F               	goto	i1l5604
 10755  039D                     u320_20:	
 10756  039D                     i1l5602:	
 10757  039D  3006               	movlw	6
 10758  039E  2BA0               	goto	i1l160
 10759  039F                     i1l5604:	
 10760  039F  3003               	movlw	3
 10761  03A0                     i1l160:	
 10762  03A0  0008               	return
 10763  03A1                     __end_ofi1_do_I2C_TX:	
 10764                           
 10765                           	psect	text79
 10766  075B                     __ptext79:	
 10767 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 10768 ;; Defined at:
 10769 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;		None
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;		None
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  1    wreg      enum E3411
 10776 ;; Registers used:
 10777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;Total ram usage:        3 bytes
 10788 ;; Hardware stack levels used:    1
 10789 ;; Hardware stack levels required when called:    3
 10790 ;; This function calls:
 10791 ;;		Absolute function
 10792 ;;		i1_do_I2C_SEND_RESTART
 10793 ;;		i1_do_I2C_SEND_STOP
 10794 ;;		i1_i2c_restartWrite
 10795 ;;		i1_rd1RegCompleteHandler
 10796 ;;		i1_rd2RegCompleteHandler
 10797 ;;		i1_rdBlkRegCompleteHandler
 10798 ;;		i1_returnReset
 10799 ;;		i1_returnStop
 10800 ;;		i1_wr1RegCompleteHandler
 10801 ;;		i1_wr2RegCompleteHandler
 10802 ;; This function is called by:
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 10808  075B                     i1_do_I2C_DO_ADDRESS_NACK:	
 10809  075B                     i1l5556:	
 10810                           ;incstack = 0
 10811                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10812                           
 10813                           
 10814                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 10815  075B  0021               	movlb	1	; select bank1
 10816  075C  11A0               	bcf	_i2c_status^(0+128),3
 10817  075D                     i1l5558:	
 10818                           
 10819                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 10820  075D  3002               	movlw	2
 10821  075E  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 10822  075F  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 10823  0760  00AA               	movwf	(_i2c_status^(0+128)+10)
 10824                           
 10825                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 10826  0761  2F6A               	goto	i1l5570
 10827  0762                     i1l5560:	
 10828                           
 10829                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 10830  0762  318C  2450  3187   	fcall	i1_do_I2C_SEND_RESTART
 10831  0765  2F87               	goto	i1l152
 10832  0766                     i1l5564:	
 10833                           
 10834                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 10835  0766  318C  2455  3187   	fcall	i1_do_I2C_SEND_STOP
 10836  0769  2F87               	goto	i1l152
 10837  076A                     i1l5570:	
 10838  076A  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 10839  076B  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 10840  076C  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 10841  076D  0020               	movlb	0	; select bank0
 10842  076E  00BE               	movwf	i1wr1RegCompleteHandler@p
 10843  076F  300F               	movlw	15
 10844  0770  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 10845  0771  0086               	movwf	6
 10846  0772  0187               	clrf	7
 10847  0773  3F41               	moviw [1]fsr1
 10848  0774  008A               	movwf	10
 10849  0775  3F40               	moviw [0]fsr1
 10850  0776  000A               	callw
 10851  0777  3187               	pagesel	$
 10852  0778  00F1               	movwf	??i1_do_I2C_DO_ADDRESS_NACK+1
 10853  0779  01F2               	clrf	??i1_do_I2C_DO_ADDRESS_NACK+2
 10854                           
 10855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10856                           ; Switch size 1, requested type "simple"
 10857                           ; Number of cases is 1, Range of values is 0 to 0
 10858                           ; switch strategies available:
 10859                           ; Name         Instructions Cycles
 10860                           ; simple_byte            4     3 (average)
 10861                           ; direct_byte            8     6 (fixed)
 10862                           ; jumptable            260     6 (fixed)
 10863                           ;	Chosen strategy is simple_byte
 10864  077A  0872               	movf	??i1_do_I2C_DO_ADDRESS_NACK+2,w
 10865  077B  3A00               	xorlw	0	; case 0
 10866  077C  1903               	skipnz
 10867  077D  2F7F               	goto	i1l6374
 10868  077E  2F66               	goto	i1l5564
 10869  077F                     i1l6374:	
 10870                           
 10871                           ; Switch size 1, requested type "simple"
 10872                           ; Number of cases is 2, Range of values is 2 to 3
 10873                           ; switch strategies available:
 10874                           ; Name         Instructions Cycles
 10875                           ; simple_byte            7     4 (average)
 10876                           ; direct_byte           13     9 (fixed)
 10877                           ; jumptable            263     9 (fixed)
 10878                           ;	Chosen strategy is simple_byte
 10879  077F  0871               	movf	??i1_do_I2C_DO_ADDRESS_NACK+1,w
 10880  0780  3A02               	xorlw	2	; case 2
 10881  0781  1903               	skipnz
 10882  0782  2F62               	goto	i1l5560
 10883  0783  3A01               	xorlw	1	; case 3
 10884  0784  1903               	skipnz
 10885  0785  2F62               	goto	i1l5560
 10886  0786  2F66               	goto	i1l5564
 10887  0787                     i1l152:	
 10888  0787  0008               	return
 10889  0788                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 10890                           
 10891                           	psect	text80
 10892  0C64                     __ptext80:	
 10893 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 10894 ;; Defined at:
 10895 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;		None
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;		None
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  1    wreg      enum E3411
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0, pclath, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;Total ram usage:        0 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    1
 10916 ;; This function calls:
 10917 ;;		i1_i2c_driver_sendNACK
 10918 ;; This function is called by:
 10919 ;;		i1_do_I2C_RX
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           
 10924                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 10925  0C64                     i1_do_I2C_DO_NACK_RESTART:	
 10926  0C64                     i1l3864:	
 10927                           ;incstack = 0
 10928                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10929                           
 10930                           
 10931                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c_driver_sendNACK();
 10932  0C64  318C  2428  318C   	fcall	i1_i2c_driver_sendNACK
 10933  0C67                     i1l3866:	
 10934                           
 10935                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 10936  0C67  3009               	movlw	9
 10937  0C68                     i1l146:	
 10938  0C68  0008               	return
 10939  0C69                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 10940                           
 10941                           	psect	text81
 10942  0C5F                     __ptext81:	
 10943 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 10944 ;; Defined at:
 10945 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      enum E3411
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0, pclath, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:        0 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    1
 10966 ;; This function calls:
 10967 ;;		i1_i2c_driver_sendNACK
 10968 ;; This function is called by:
 10969 ;;		i1_do_I2C_RX
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           
 10974                           ;psect for function i1_do_I2C_DO_NACK_STOP
 10975  0C5F                     i1_do_I2C_DO_NACK_STOP:	
 10976  0C5F                     i1l3858:	
 10977                           ;incstack = 0
 10978                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 10979                           
 10980                           
 10981                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c_driver_sendNACK();
 10982  0C5F  318C  2428  318C   	fcall	i1_i2c_driver_sendNACK
 10983  0C62                     i1l3860:	
 10984                           
 10985                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 10986  0C62  300A               	movlw	10
 10987  0C63                     i1l143:	
 10988  0C63  0008               	return
 10989  0C64                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 10990                           
 10991                           	psect	text82
 10992  0C5A                     __ptext82:	
 10993 ;; *************** function i1_do_I2C_DO_ACK *****************
 10994 ;; Defined at:
 10995 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      enum E3411
 11002 ;; Registers used:
 11003 ;;		wreg, status,2, status,0, pclath, cstack
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;Total ram usage:        0 bytes
 11014 ;; Hardware stack levels used:    1
 11015 ;; Hardware stack levels required when called:    1
 11016 ;; This function calls:
 11017 ;;		i1_i2c_driver_sendACK
 11018 ;; This function is called by:
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           
 11023                           ;psect for function i1_do_I2C_DO_ACK
 11024  0C5A                     i1_do_I2C_DO_ACK:	
 11025  0C5A                     i1l4126:	
 11026                           ;incstack = 0
 11027                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 11028                           
 11029                           
 11030                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c_driver_sendACK();
 11031  0C5A  318C  2424  318C   	fcall	i1_i2c_driver_sendACK
 11032  0C5D                     i1l4128:	
 11033                           
 11034                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 11035  0C5D  3005               	movlw	5
 11036  0C5E                     i1l140:	
 11037  0C5E  0008               	return
 11038  0C5F                     __end_ofi1_do_I2C_DO_ACK:	
 11039                           
 11040                           	psect	text83
 11041  0CA4                     __ptext83:	
 11042 ;; *************** function i1_do_I2C_RCEN *****************
 11043 ;; Defined at:
 11044 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;		None
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;		None
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      enum E3411
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        0 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    1
 11065 ;; This function calls:
 11066 ;;		i1_i2c_driver_startRX
 11067 ;; This function is called by:
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           
 11072                           ;psect for function i1_do_I2C_RCEN
 11073  0CA4                     i1_do_I2C_RCEN:	
 11074  0CA4                     i1l4118:	
 11075                           ;incstack = 0
 11076                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11077                           
 11078                           
 11079                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 11080  0CA4  0021               	movlb	1	; select bank1
 11081  0CA5  11A0               	bcf	_i2c_status^(0+128),3
 11082  0CA6                     i1l4120:	
 11083                           
 11084                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c_driver_startRX();
 11085  0CA6  318B  23FC  318C   	fcall	i1_i2c_driver_startRX
 11086  0CA9                     i1l4122:	
 11087                           
 11088                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 11089  0CA9  3004               	movlw	4
 11090  0CAA                     i1l137:	
 11091  0CAA  0008               	return
 11092  0CAB                     __end_ofi1_do_I2C_RCEN:	
 11093                           
 11094                           	psect	text84
 11095  0CC3                     __ptext84:	
 11096 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 11097 ;; Defined at:
 11098 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;		None
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      enum E3411
 11105 ;; Registers used:
 11106 ;;		wreg, status,2, status,0, pclath, cstack
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;Total ram usage:        0 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    1
 11119 ;; This function calls:
 11120 ;;		i1_i2c_driver_TXData
 11121 ;; This function is called by:
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           
 11126                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 11127  0CC3                     i1_do_I2C_SEND_ADR_WRITE:	
 11128  0CC3                     i1l4110:	
 11129                           ;incstack = 0
 11130                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11131                           
 11132                           
 11133                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 11134  0CC3  0021               	movlb	1	; select bank1
 11135  0CC4  15A0               	bsf	_i2c_status^(0+128),3
 11136  0CC5                     i1l4112:	
 11137                           
 11138                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c_driver_TXData(i2c_status.address
      +                           << 1);
 11139  0CC5  3521               	lslf	(_i2c_status^(0+128)+1),w
 11140  0CC6  318C  243C  318C   	fcall	i1_i2c_driver_TXData
 11141  0CC9                     i1l4114:	
 11142                           
 11143                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 11144  0CC9  3003               	movlw	3
 11145  0CCA                     i1l134:	
 11146  0CCA  0008               	return
 11147  0CCB                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 11148                           
 11149                           	psect	text85
 11150  0CDC                     __ptext85:	
 11151 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 11152 ;; Defined at:
 11153 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      enum E3411
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0, pclath, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;Total ram usage:        0 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    1
 11174 ;; This function calls:
 11175 ;;		i1_i2c_driver_TXData
 11176 ;; This function is called by:
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           
 11181                           ;psect for function i1_do_I2C_SEND_ADR_READ
 11182  0CDC                     i1_do_I2C_SEND_ADR_READ:	
 11183  0CDC                     i1l4102:	
 11184                           ;incstack = 0
 11185                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 11186                           
 11187                           
 11188                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 11189  0CDC  0021               	movlb	1	; select bank1
 11190  0CDD  15A0               	bsf	_i2c_status^(0+128),3
 11191  0CDE                     i1l4104:	
 11192                           
 11193                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c_driver_TXData(i2c_status.address
      +                           << 1 | 1);
 11194  0CDE  1403               	setc
 11195  0CDF  0D21               	rlf	(_i2c_status^(0+128)+1),w
 11196  0CE0  318C  243C  318C   	fcall	i1_i2c_driver_TXData
 11197  0CE3                     i1l4106:	
 11198                           
 11199                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 11200  0CE3  3005               	movlw	5
 11201  0CE4                     i1l131:	
 11202  0CE4  0008               	return
 11203  0CE5                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 11204                           
 11205                           	psect	text86
 11206  0C55                     __ptext86:	
 11207 ;; *************** function i1_do_I2C_SEND_STOP *****************
 11208 ;; Defined at:
 11209 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;		None
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      enum E3411
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0, pclath, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11227 ;;Total ram usage:        0 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:    1
 11230 ;; This function calls:
 11231 ;;		i1_i2c_driver_stop
 11232 ;; This function is called by:
 11233 ;;		i1_do_I2C_DO_ADDRESS_NACK
 11234 ;;		i1_do_I2C_TX
 11235 ;;		i1_do_I2C_TX_EMPTY
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           
 11240                           ;psect for function i1_do_I2C_SEND_STOP
 11241  0C55                     i1_do_I2C_SEND_STOP:	
 11242  0C55                     i1l3852:	
 11243                           ;incstack = 0
 11244                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11245                           
 11246                           
 11247                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c_driver_stop();
 11248  0C55  318B  23F9  318C   	fcall	i1_i2c_driver_stop
 11249  0C58                     i1l3854:	
 11250                           
 11251                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 11252  0C58  3000               	movlw	0
 11253  0C59                     i1l128:	
 11254  0C59  0008               	return
 11255  0C5A                     __end_ofi1_do_I2C_SEND_STOP:	
 11256                           
 11257                           	psect	text87
 11258  0C50                     __ptext87:	
 11259 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 11260 ;; Defined at:
 11261 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;		None
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      enum E3411
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0, pclath, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;Total ram usage:        0 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    1
 11282 ;; This function calls:
 11283 ;;		i1_i2c_driver_restart
 11284 ;; This function is called by:
 11285 ;;		i1_do_I2C_DO_ADDRESS_NACK
 11286 ;;		i1_do_I2C_TX_EMPTY
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           
 11291                           ;psect for function i1_do_I2C_SEND_RESTART
 11292  0C50                     i1_do_I2C_SEND_RESTART:	
 11293  0C50                     i1l3846:	
 11294                           ;incstack = 0
 11295                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11296                           
 11297                           
 11298                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c_driver_restart();
 11299  0C50  318B  23F6  318C   	fcall	i1_i2c_driver_restart
 11300  0C53                     i1l3848:	
 11301                           
 11302                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 11303  0C53  3001               	movlw	1
 11304  0C54                     i1l125:	
 11305  0C54  0008               	return
 11306  0C55                     __end_ofi1_do_I2C_SEND_RESTART:	
 11307                           
 11308                           	psect	text88
 11309  0C4B                     __ptext88:	
 11310 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 11311 ;; Defined at:
 11312 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;		None
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1    wreg      enum E3411
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0, pclath, cstack
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;Total ram usage:        0 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    1
 11333 ;; This function calls:
 11334 ;;		i1_i2c_driver_restart
 11335 ;; This function is called by:
 11336 ;;		i1_do_I2C_TX
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           
 11341                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 11342  0C4B                     i1_do_I2C_SEND_RESTART_WRITE:	
 11343  0C4B                     i1l3840:	
 11344                           ;incstack = 0
 11345                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11346                           
 11347                           
 11348                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c_driver_restart();
 11349  0C4B  318B  23F6  318C   	fcall	i1_i2c_driver_restart
 11350  0C4E                     i1l3842:	
 11351                           
 11352                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 11353  0C4E  3002               	movlw	2
 11354  0C4F                     i1l122:	
 11355  0C4F  0008               	return
 11356  0C50                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 11357                           
 11358                           	psect	text89
 11359  0C46                     __ptext89:	
 11360 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 11361 ;; Defined at:
 11362 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;		None
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;		None
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      enum E3411
 11369 ;; Registers used:
 11370 ;;		wreg, status,2, status,0, pclath, cstack
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11380 ;;Total ram usage:        0 bytes
 11381 ;; Hardware stack levels used:    1
 11382 ;; Hardware stack levels required when called:    1
 11383 ;; This function calls:
 11384 ;;		i1_i2c_driver_restart
 11385 ;; This function is called by:
 11386 ;;		i1_do_I2C_TX
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           
 11391                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 11392  0C46                     i1_do_I2C_SEND_RESTART_READ:	
 11393  0C46                     i1l3834:	
 11394                           ;incstack = 0
 11395                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 11396                           
 11397                           
 11398                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c_driver_restart();
 11399  0C46  318B  23F6  318C   	fcall	i1_i2c_driver_restart
 11400  0C49                     i1l3836:	
 11401                           
 11402                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 11403  0C49  3001               	movlw	1
 11404  0C4A                     i1l119:	
 11405  0C4A  0008               	return
 11406  0C4B                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 11407                           
 11408                           	psect	text90
 11409  0C41                     __ptext90:	
 11410 ;; *************** function i1_do_I2C_IDLE *****************
 11411 ;; Defined at:
 11412 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;		None
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      enum E3411
 11419 ;; Registers used:
 11420 ;;		wreg, status,2
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;Total ram usage:        0 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;; This function uses a non-reentrant model
 11436 ;;
 11437                           
 11438                           
 11439                           ;psect for function i1_do_I2C_IDLE
 11440  0C41                     i1_do_I2C_IDLE:	
 11441  0C41                     i1l4094:	
 11442                           ;incstack = 0
 11443                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 11444                           
 11445                           
 11446                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 11447  0C41  0021               	movlb	1	; select bank1
 11448  0C42  1020               	bcf	_i2c_status^(0+128),0
 11449  0C43                     i1l4096:	
 11450                           
 11451                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 11452  0C43  01AA               	clrf	(_i2c_status^(0+128)+10)
 11453  0C44                     i1l4098:	
 11454                           
 11455                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 11456  0C44  300E               	movlw	14
 11457  0C45                     i1l116:	
 11458  0C45  0008               	return
 11459  0C46                     __end_ofi1_do_I2C_IDLE:	
 11460                           
 11461                           	psect	text91
 11462  0CBB                     __ptext91:	
 11463 ;; *************** function i1_do_I2C_RESET *****************
 11464 ;; Defined at:
 11465 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;		None
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;		None
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      enum E3411
 11472 ;; Registers used:
 11473 ;;		wreg, status,2, status,0, pclath, cstack
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;Total ram usage:        0 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:    1
 11486 ;; This function calls:
 11487 ;;		i1_i2c_driver_resetBus
 11488 ;; This function is called by:
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           
 11493                           ;psect for function i1_do_I2C_RESET
 11494  0CBB                     i1_do_I2C_RESET:	
 11495  0CBB                     i1l4084:	
 11496                           ;incstack = 0
 11497                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 11498                           
 11499                           
 11500                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c_driver_resetBus();
 11501  0CBB  318B  23ED  318C   	fcall	i1_i2c_driver_resetBus
 11502  0CBE                     i1l4086:	
 11503                           
 11504                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 11505  0CBE  0021               	movlb	1	; select bank1
 11506  0CBF  1020               	bcf	_i2c_status^(0+128),0
 11507  0CC0                     i1l4088:	
 11508                           
 11509                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 11510  0CC0  01AA               	clrf	(_i2c_status^(0+128)+10)
 11511  0CC1                     i1l4090:	
 11512                           
 11513                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 11514  0CC1  300E               	movlw	14
 11515  0CC2                     i1l113:	
 11516  0CC2  0008               	return
 11517  0CC3                     __end_ofi1_do_I2C_RESET:	
 11518                           
 11519                           	psect	text92
 11520  069B                     __ptext92:	
 11521 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 11522 ;; Defined at:
 11523 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;		None
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;		None
 11528 ;; Return value:  Size  Location     Type
 11529 ;;                  1    wreg      enum E3411
 11530 ;; Registers used:
 11531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11532 ;; Tracked objects:
 11533 ;;		On entry : 0/0
 11534 ;;		On exit  : 0/0
 11535 ;;		Unchanged: 0/0
 11536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;Total ram usage:        3 bytes
 11542 ;; Hardware stack levels used:    1
 11543 ;; Hardware stack levels required when called:    3
 11544 ;; This function calls:
 11545 ;;		Absolute function
 11546 ;;		i1_do_I2C_SEND_RESTART
 11547 ;;		i1_do_I2C_SEND_STOP
 11548 ;;		i1_i2c_restartWrite
 11549 ;;		i1_mssp_setIRQ
 11550 ;;		i1_rd1RegCompleteHandler
 11551 ;;		i1_rd2RegCompleteHandler
 11552 ;;		i1_rdBlkRegCompleteHandler
 11553 ;;		i1_returnReset
 11554 ;;		i1_returnStop
 11555 ;;		i1_wr1RegCompleteHandler
 11556 ;;		i1_wr2RegCompleteHandler
 11557 ;; This function is called by:
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           
 11562                           ;psect for function i1_do_I2C_TX_EMPTY
 11563  069B                     i1_do_I2C_TX_EMPTY:	
 11564  069B                     i1l5644:	
 11565                           ;incstack = 0
 11566                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11567                           
 11568                           
 11569                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 11570  069B  0021               	movlb	1	; select bank1
 11571  069C  1520               	bsf	_i2c_status^(0+128),2
 11572                           
 11573                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 11574  069D  2EAB               	goto	i1l5662
 11575  069E                     i1l5646:	
 11576                           
 11577                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 11578  069E  318C  2450  3186   	fcall	i1_do_I2C_SEND_RESTART
 11579  06A1  2ECE               	goto	i1l188
 11580  06A2                     i1l5650:	
 11581                           
 11582                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp_setIRQ();
 11583  06A2  318C  2402  3186   	fcall	i1_mssp_setIRQ
 11584  06A5                     i1l5652:	
 11585                           
 11586                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 11587  06A5  3003               	movlw	3
 11588  06A6  2ECE               	goto	i1l188
 11589  06A7                     i1l5656:	
 11590                           
 11591                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 11592  06A7  318C  2455  3186   	fcall	i1_do_I2C_SEND_STOP
 11593  06AA  2ECE               	goto	i1l188
 11594  06AB                     i1l5662:	
 11595  06AB  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 11596  06AC  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 11597  06AD  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 11598  06AE  0020               	movlb	0	; select bank0
 11599  06AF  00BE               	movwf	i1wr1RegCompleteHandler@p
 11600  06B0  300B               	movlw	11
 11601  06B1  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 11602  06B2  0086               	movwf	6
 11603  06B3  0187               	clrf	7
 11604  06B4  3F41               	moviw [1]fsr1
 11605  06B5  008A               	movwf	10
 11606  06B6  3F40               	moviw [0]fsr1
 11607  06B7  000A               	callw
 11608  06B8  3186               	pagesel	$
 11609  06B9  00F1               	movwf	??i1_do_I2C_TX_EMPTY+1
 11610  06BA  01F2               	clrf	??i1_do_I2C_TX_EMPTY+2
 11611                           
 11612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11613                           ; Switch size 1, requested type "simple"
 11614                           ; Number of cases is 1, Range of values is 0 to 0
 11615                           ; switch strategies available:
 11616                           ; Name         Instructions Cycles
 11617                           ; simple_byte            4     3 (average)
 11618                           ; direct_byte            8     6 (fixed)
 11619                           ; jumptable            260     6 (fixed)
 11620                           ;	Chosen strategy is simple_byte
 11621  06BB  0872               	movf	??i1_do_I2C_TX_EMPTY+2,w
 11622  06BC  3A00               	xorlw	0	; case 0
 11623  06BD  1903               	skipnz
 11624  06BE  2EC0               	goto	i1l6376
 11625  06BF  2EA7               	goto	i1l5656
 11626  06C0                     i1l6376:	
 11627                           
 11628                           ; Switch size 1, requested type "simple"
 11629                           ; Number of cases is 4, Range of values is 1 to 4
 11630                           ; switch strategies available:
 11631                           ; Name         Instructions Cycles
 11632                           ; simple_byte           13     7 (average)
 11633                           ; direct_byte           17     9 (fixed)
 11634                           ; jumptable            263     9 (fixed)
 11635                           ;	Chosen strategy is simple_byte
 11636  06C0  0871               	movf	??i1_do_I2C_TX_EMPTY+1,w
 11637  06C1  3A01               	xorlw	1	; case 1
 11638  06C2  1903               	skipnz
 11639  06C3  2EA7               	goto	i1l5656
 11640  06C4  3A03               	xorlw	3	; case 2
 11641  06C5  1903               	skipnz
 11642  06C6  2E9E               	goto	i1l5646
 11643  06C7  3A01               	xorlw	1	; case 3
 11644  06C8  1903               	skipnz
 11645  06C9  2E9E               	goto	i1l5646
 11646  06CA  3A07               	xorlw	7	; case 4
 11647  06CB  1903               	skipnz
 11648  06CC  2EA2               	goto	i1l5650
 11649  06CD  2EA7               	goto	i1l5656
 11650  06CE                     i1l188:	
 11651  06CE  0008               	return
 11652  06CF                     __end_ofi1_do_I2C_TX_EMPTY:	
 11653                           
 11654                           	psect	text93
 11655  0C02                     __ptext93:	
 11656 ;; *************** function i1_mssp_setIRQ *****************
 11657 ;; Defined at:
 11658 ;;		line 59 in file "mcc_generated_files/i2c_driver.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;		None
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      void 
 11665 ;; Registers used:
 11666 ;;		None
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        0 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		i1_do_I2C_TX_EMPTY
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           
 11686                           ;psect for function i1_mssp_setIRQ
 11687  0C02                     i1_mssp_setIRQ:	
 11688  0C02                     i1l3920:	
 11689                           ;incstack = 0
 11690                           ; Regs used in i1_mssp_setIRQ: []
 11691                           
 11692                           
 11693                           ;mcc_generated_files/i2c_driver.c: 61:     else
 11694  0C02  0020               	movlb	0	; select bank0
 11695  0C03  1591               	bsf	17,3	;volatile
 11696  0C04                     i1l600:	
 11697  0C04  0008               	return
 11698  0C05                     __end_ofi1_mssp_setIRQ:	
 11699                           
 11700                           	psect	text94
 11701  0CB3                     __ptext94:	
 11702 ;; *************** function i1_i2c_driver_isNACK *****************
 11703 ;; Defined at:
 11704 ;;		line 162 in file "mcc_generated_files/i2c_driver.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;		None               void
 11711 ;; Registers used:
 11712 ;;		wreg, status,2, status,0
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;Total ram usage:        1 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; This function calls:
 11725 ;;		Nothing
 11726 ;; This function is called by:
 11727 ;;		i1_do_I2C_TX
 11728 ;;		i1_i2c_ISR
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           
 11733                           ;psect for function i1_i2c_driver_isNACK
 11734  0CB3                     i1_i2c_driver_isNACK:	
 11735  0CB3                     i1l3922:	
 11736                           ;incstack = 0
 11737                           ; Regs used in i1_i2c_driver_isNACK: [wreg+status,2+status,0]
 11738                           
 11739                           
 11740                           ;mcc_generated_files/i2c_driver.c: 164:     return SSPCON2bits.ACKSTAT;
 11741  0CB3  0024               	movlb	4	; select bank4
 11742  0CB4  0E16               	swapf	22,w	;volatile
 11743  0CB5  0C89               	rrf	9,f
 11744  0CB6  0C89               	rrf	9,f
 11745  0CB7  3901               	andlw	1
 11746  0CB8  00F0               	movwf	??i1_i2c_driver_isNACK
 11747  0CB9  0C70               	rrf	??i1_i2c_driver_isNACK,w
 11748  0CBA                     i1l635:	
 11749  0CBA  0008               	return
 11750  0CBB                     __end_ofi1_i2c_driver_isNACK:	
 11751                           
 11752                           	psect	text95
 11753  0C3C                     __ptext95:	
 11754 ;; *************** function i1_i2c_driver_TXData *****************
 11755 ;; Defined at:
 11756 ;;		line 187 in file "mcc_generated_files/i2c_driver.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;  d               1    wreg     unsigned char 
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;  d               1    0[COMMON] unsigned char 
 11761 ;; Return value:  Size  Location     Type
 11762 ;;                  1    wreg      void 
 11763 ;; Registers used:
 11764 ;;		wreg
 11765 ;; Tracked objects:
 11766 ;;		On entry : 0/0
 11767 ;;		On exit  : 0/0
 11768 ;;		Unchanged: 0/0
 11769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;Total ram usage:        1 bytes
 11775 ;; Hardware stack levels used:    1
 11776 ;; This function calls:
 11777 ;;		Nothing
 11778 ;; This function is called by:
 11779 ;;		i1_do_I2C_SEND_ADR_READ
 11780 ;;		i1_do_I2C_SEND_ADR_WRITE
 11781 ;;		i1_do_I2C_TX
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           
 11786                           ;psect for function i1_i2c_driver_TXData
 11787  0C3C                     i1_i2c_driver_TXData:	
 11788                           
 11789                           ;incstack = 0
 11790                           ; Regs used in i1_i2c_driver_TXData: [wreg]
 11791                           ;i1i2c_driver_TXData@d stored from wreg
 11792  0C3C  00F0               	movwf	i1i2c_driver_TXData@d
 11793  0C3D                     i1l3932:	
 11794                           
 11795                           ;mcc_generated_files/i2c_driver.c: 187: __attribute__((inline)) void i2c_driver_TXData(c
      +                          har d);mcc_generated_files/i2c_driver.c: 188: {;mcc_generated_files/i2c_driver.c: 189:  
      +                             SSPBUF = d;
 11796  0C3D  0870               	movf	i1i2c_driver_TXData@d,w
 11797  0C3E  0024               	movlb	4	; select bank4
 11798  0C3F  0091               	movwf	17	;volatile
 11799  0C40                     i1l650:	
 11800  0C40  0008               	return
 11801  0C41                     __end_ofi1_i2c_driver_TXData:	
 11802                           
 11803                           	psect	text96
 11804  0BFF                     __ptext96:	
 11805 ;; *************** function i1_i2c_driver_getRXData *****************
 11806 ;; Defined at:
 11807 ;;		line 172 in file "mcc_generated_files/i2c_driver.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;		None
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  1    wreg      unsigned char 
 11814 ;; Registers used:
 11815 ;;		wreg
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;Total ram usage:        0 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; This function calls:
 11828 ;;		Nothing
 11829 ;; This function is called by:
 11830 ;;		i1_do_I2C_RX
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834                           
 11835                           ;psect for function i1_i2c_driver_getRXData
 11836  0BFF                     i1_i2c_driver_getRXData:	
 11837  0BFF                     i1l3928:	
 11838                           ;incstack = 0
 11839                           ; Regs used in i1_i2c_driver_getRXData: [wreg]
 11840                           
 11841                           
 11842                           ;mcc_generated_files/i2c_driver.c: 174:     return SSPBUF;
 11843  0BFF  0024               	movlb	4	; select bank4
 11844  0C00  0811               	movf	17,w	;volatile
 11845  0C01                     i1l641:	
 11846  0C01  0008               	return
 11847  0C02                     __end_ofi1_i2c_driver_getRXData:	
 11848                           
 11849                           	psect	text97
 11850  0C28                     __ptext97:	
 11851 ;; *************** function i1_i2c_driver_sendNACK *****************
 11852 ;; Defined at:
 11853 ;;		line 203 in file "mcc_generated_files/i2c_driver.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;		None
 11856 ;; Auto vars:     Size  Location     Type
 11857 ;;		None
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  1    wreg      void 
 11860 ;; Registers used:
 11861 ;;		None
 11862 ;; Tracked objects:
 11863 ;;		On entry : 0/0
 11864 ;;		On exit  : 0/0
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;Total ram usage:        0 bytes
 11872 ;; Hardware stack levels used:    1
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		i1_do_I2C_DO_NACK_STOP
 11877 ;;		i1_do_I2C_DO_NACK_RESTART
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           
 11882                           ;psect for function i1_i2c_driver_sendNACK
 11883  0C28                     i1_i2c_driver_sendNACK:	
 11884  0C28                     i1l3728:	
 11885                           ;incstack = 0
 11886                           ; Regs used in i1_i2c_driver_sendNACK: []
 11887                           
 11888                           
 11889                           ;mcc_generated_files/i2c_driver.c: 205:     SSPCON2bits.ACKDT = 1;
 11890  0C28  0024               	movlb	4	; select bank4
 11891  0C29  1696               	bsf	22,5	;volatile
 11892                           
 11893                           ;mcc_generated_files/i2c_driver.c: 206:     SSPCON2bits.ACKEN = 1;
 11894  0C2A  1616               	bsf	22,4	;volatile
 11895  0C2B                     i1l659:	
 11896  0C2B  0008               	return
 11897  0C2C                     __end_ofi1_i2c_driver_sendNACK:	
 11898                           
 11899                           	psect	text98
 11900  0BED                     __ptext98:	
 11901 ;; *************** function i1_i2c_driver_resetBus *****************
 11902 ;; Defined at:
 11903 ;;		line 142 in file "mcc_generated_files/i2c_driver.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;		None
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;		None
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      void 
 11910 ;; Registers used:
 11911 ;;		None
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;Total ram usage:        0 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; This function calls:
 11924 ;;		Nothing
 11925 ;; This function is called by:
 11926 ;;		i1_do_I2C_RESET
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           
 11931                           ;psect for function i1_i2c_driver_resetBus
 11932  0BED                     i1_i2c_driver_resetBus:	
 11933  0BED                     i1l623:	
 11934                           ;incstack = 0
 11935                           ; Regs used in i1_i2c_driver_resetBus: []
 11936                           
 11937  0BED  0008               	return
 11938  0BEE                     __end_ofi1_i2c_driver_resetBus:	
 11939                           
 11940                           	psect	text99
 11941  0BFC                     __ptext99:	
 11942 ;; *************** function i1_i2c_driver_startRX *****************
 11943 ;; Defined at:
 11944 ;;		line 167 in file "mcc_generated_files/i2c_driver.c"
 11945 ;; Parameters:    Size  Location     Type
 11946 ;;		None
 11947 ;; Auto vars:     Size  Location     Type
 11948 ;;		None
 11949 ;; Return value:  Size  Location     Type
 11950 ;;                  1    wreg      void 
 11951 ;; Registers used:
 11952 ;;		None
 11953 ;; Tracked objects:
 11954 ;;		On entry : 0/0
 11955 ;;		On exit  : 0/0
 11956 ;;		Unchanged: 0/0
 11957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;Total ram usage:        0 bytes
 11963 ;; Hardware stack levels used:    1
 11964 ;; This function calls:
 11965 ;;		Nothing
 11966 ;; This function is called by:
 11967 ;;		i1_do_I2C_RCEN
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           
 11972                           ;psect for function i1_i2c_driver_startRX
 11973  0BFC                     i1_i2c_driver_startRX:	
 11974  0BFC                     i1l3926:	
 11975                           ;incstack = 0
 11976                           ; Regs used in i1_i2c_driver_startRX: []
 11977                           
 11978                           
 11979                           ;mcc_generated_files/i2c_driver.c: 169:     SSPCON2bits.RCEN = 1;
 11980  0BFC  0024               	movlb	4	; select bank4
 11981  0BFD  1596               	bsf	22,3	;volatile
 11982  0BFE                     i1l638:	
 11983  0BFE  0008               	return
 11984  0BFF                     __end_ofi1_i2c_driver_startRX:	
 11985                           
 11986                           	psect	text100
 11987  0002                     __ptext100:	
 11988 ;; *************** function i1_i2c_restartWrite *****************
 11989 ;; Defined at:
 11990 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  p               1    1[BANK0 ] PTR void 
 11993 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11994 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      enum E358
 11999 ;; Registers used:
 12000 ;;		wreg
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12006 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;Total ram usage:        1 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		_do_I2C_DO_ADDRESS_NACK
 12016 ;;		_do_I2C_TX
 12017 ;;		_do_I2C_RX
 12018 ;;		_do_I2C_TX_EMPTY
 12019 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12020 ;;		i1_do_I2C_TX
 12021 ;;		i1_do_I2C_RX
 12022 ;;		i1_do_I2C_TX_EMPTY
 12023 ;; This function uses a non-reentrant model
 12024 ;;
 12025                           
 12026                           
 12027                           ;psect for function i1_i2c_restartWrite
 12028  0002                     i1_i2c_restartWrite:	
 12029  0002                     i1l5416:	
 12030                           ;incstack = 0
 12031                           ; Regs used in i1_i2c_restartWrite: [wreg]
 12032                           
 12033                           
 12034                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 12035  0002  3003               	movlw	3
 12036  0003                     i1l318:	
 12037  0003  0008               	return
 12038  0004                     __end_ofi1_i2c_restartWrite:	
 12039                           
 12040                           	psect	text101
 12041  0EE0                     __ptext101:	
 12042 ;; *************** function i1_rdBlkRegCompleteHandler *****************
 12043 ;; Defined at:
 12044 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;  p               1    1[BANK0 ] PTR void 
 12047 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12048 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  1    wreg      enum E358
 12053 ;; Registers used:
 12054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12060 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;Total ram usage:        1 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:    2
 12067 ;; This function calls:
 12068 ;;		i1_i2c_setBuffer
 12069 ;;		i1_i2c_setDataCompleteCallback
 12070 ;; This function is called by:
 12071 ;;		_do_I2C_DO_ADDRESS_NACK
 12072 ;;		_do_I2C_TX
 12073 ;;		_do_I2C_RX
 12074 ;;		_do_I2C_TX_EMPTY
 12075 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12076 ;;		i1_do_I2C_TX
 12077 ;;		i1_do_I2C_RX
 12078 ;;		i1_do_I2C_TX_EMPTY
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           
 12083                           ;psect for function i1_rdBlkRegCompleteHandler
 12084  0EE0                     i1_rdBlkRegCompleteHandler:	
 12085  0EE0                     i1l5410:	
 12086                           ;incstack = 0
 12087                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12088                           
 12089                           
 12090                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 12091  0EE0  0020               	movlb	0	; select bank0
 12092  0EE1  083E               	movf	i1rdBlkRegCompleteHandler@p,w
 12093  0EE2  0086               	movwf	6
 12094  0EE3  0187               	clrf	7
 12095  0EE4  3F40               	moviw [0]fsr1
 12096  0EE5  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12097  0EE6  3F41               	moviw [1]fsr1
 12098  0EE7  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12099  0EE8  083E               	movf	i1rdBlkRegCompleteHandler@p,w
 12100  0EE9  3E02               	addlw	2
 12101  0EEA  0086               	movwf	6
 12102  0EEB  0187               	clrf	7
 12103  0EEC  0801               	movf	1,w
 12104  0EED  318D  25DB  318E   	fcall	i1_i2c_setBuffer
 12105                           
 12106                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12107  0EF0  3000               	movlw	0
 12108  0EF1  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12109  0EF2  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12110  0EF3  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12111  0EF4  318D  2594  318E   	fcall	i1_i2c_setDataCompleteCallback
 12112  0EF7                     i1l5412:	
 12113                           
 12114                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 12115  0EF7  3002               	movlw	2
 12116  0EF8                     i1l291:	
 12117  0EF8  0008               	return
 12118  0EF9                     __end_ofi1_rdBlkRegCompleteHandler:	
 12119                           
 12120                           	psect	text102
 12121  0E32                     __ptext102:	
 12122 ;; *************** function i1_rd2RegCompleteHandler *****************
 12123 ;; Defined at:
 12124 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;  p               1    1[BANK0 ] PTR void 
 12127 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12128 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      enum E358
 12133 ;; Registers used:
 12134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12140 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;Total ram usage:        1 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    2
 12147 ;; This function calls:
 12148 ;;		i1_i2c_setBuffer
 12149 ;;		i1_i2c_setDataCompleteCallback
 12150 ;; This function is called by:
 12151 ;;		_do_I2C_DO_ADDRESS_NACK
 12152 ;;		_do_I2C_TX
 12153 ;;		_do_I2C_RX
 12154 ;;		_do_I2C_TX_EMPTY
 12155 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12156 ;;		i1_do_I2C_TX
 12157 ;;		i1_do_I2C_RX
 12158 ;;		i1_do_I2C_TX_EMPTY
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           
 12163                           ;psect for function i1_rd2RegCompleteHandler
 12164  0E32                     i1_rd2RegCompleteHandler:	
 12165  0E32                     i1l5394:	
 12166                           ;incstack = 0
 12167                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12168                           
 12169                           
 12170                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 12171  0E32  3002               	movlw	2
 12172  0E33  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12173  0E34  3000               	movlw	0
 12174  0E35  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12175  0E36  0020               	movlb	0	; select bank0
 12176  0E37  083E               	movf	i1rd2RegCompleteHandler@p,w
 12177  0E38  318D  25DB  318E   	fcall	i1_i2c_setBuffer
 12178  0E3B                     i1l5396:	
 12179                           
 12180                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 12181  0E3B  3000               	movlw	0
 12182  0E3C  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12183  0E3D  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12184  0E3E  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12185  0E3F  318D  2594  318E   	fcall	i1_i2c_setDataCompleteCallback
 12186  0E42                     i1l5398:	
 12187                           
 12188                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 12189  0E42  3002               	movlw	2
 12190  0E43                     i1l267:	
 12191  0E43  0008               	return
 12192  0E44                     __end_ofi1_rd2RegCompleteHandler:	
 12193                           
 12194                           	psect	text103
 12195  0E20                     __ptext103:	
 12196 ;; *************** function i1_rd1RegCompleteHandler *****************
 12197 ;; Defined at:
 12198 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  p               1    1[BANK0 ] PTR void 
 12201 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12202 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      enum E358
 12207 ;; Registers used:
 12208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:        1 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    2
 12221 ;; This function calls:
 12222 ;;		i1_i2c_setBuffer
 12223 ;;		i1_i2c_setDataCompleteCallback
 12224 ;; This function is called by:
 12225 ;;		_do_I2C_DO_ADDRESS_NACK
 12226 ;;		_do_I2C_TX
 12227 ;;		_do_I2C_RX
 12228 ;;		_do_I2C_TX_EMPTY
 12229 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12230 ;;		i1_do_I2C_TX
 12231 ;;		i1_do_I2C_RX
 12232 ;;		i1_do_I2C_TX_EMPTY
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           
 12237                           ;psect for function i1_rd1RegCompleteHandler
 12238  0E20                     i1_rd1RegCompleteHandler:	
 12239  0E20                     i1l5386:	
 12240                           ;incstack = 0
 12241                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12242                           
 12243                           
 12244                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 12245  0E20  3001               	movlw	1
 12246  0E21  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12247  0E22  3000               	movlw	0
 12248  0E23  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12249  0E24  0020               	movlb	0	; select bank0
 12250  0E25  083E               	movf	i1rd1RegCompleteHandler@p,w
 12251  0E26  318D  25DB  318E   	fcall	i1_i2c_setBuffer
 12252  0E29                     i1l5388:	
 12253                           
 12254                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 12255  0E29  3000               	movlw	0
 12256  0E2A  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12257  0E2B  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12258  0E2C  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12259  0E2D  318D  2594  318E   	fcall	i1_i2c_setDataCompleteCallback
 12260  0E30                     i1l5390:	
 12261                           
 12262                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 12263  0E30  3002               	movlw	2
 12264  0E31                     i1l252:	
 12265  0E31  0008               	return
 12266  0E32                     __end_ofi1_rd1RegCompleteHandler:	
 12267                           
 12268                           	psect	text104
 12269  0E0E                     __ptext104:	
 12270 ;; *************** function i1_wr1RegCompleteHandler *****************
 12271 ;; Defined at:
 12272 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  p               1    1[BANK0 ] PTR void 
 12275 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12276 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;		None
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      enum E358
 12281 ;; Registers used:
 12282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12288 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;Total ram usage:        1 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    2
 12295 ;; This function calls:
 12296 ;;		i1_i2c_setBuffer
 12297 ;;		i1_i2c_setDataCompleteCallback
 12298 ;; This function is called by:
 12299 ;;		_do_I2C_DO_ADDRESS_NACK
 12300 ;;		_do_I2C_TX
 12301 ;;		_do_I2C_RX
 12302 ;;		_do_I2C_TX_EMPTY
 12303 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12304 ;;		i1_do_I2C_TX
 12305 ;;		i1_do_I2C_RX
 12306 ;;		i1_do_I2C_TX_EMPTY
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           
 12311                           ;psect for function i1_wr1RegCompleteHandler
 12312  0E0E                     i1_wr1RegCompleteHandler:	
 12313  0E0E                     i1l5378:	
 12314                           ;incstack = 0
 12315                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12316                           
 12317                           
 12318                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 12319  0E0E  3001               	movlw	1
 12320  0E0F  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12321  0E10  3000               	movlw	0
 12322  0E11  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12323  0E12  0020               	movlb	0	; select bank0
 12324  0E13  083E               	movf	i1wr1RegCompleteHandler@p,w
 12325  0E14  318D  25DB  318E   	fcall	i1_i2c_setBuffer
 12326  0E17                     i1l5380:	
 12327                           
 12328                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 12329  0E17  3000               	movlw	0
 12330  0E18  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12331  0E19  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12332  0E1A  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12333  0E1B  318D  2594  318E   	fcall	i1_i2c_setDataCompleteCallback
 12334  0E1E                     i1l5382:	
 12335                           
 12336                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 12337  0E1E  3004               	movlw	4
 12338  0E1F                     i1l231:	
 12339  0E1F  0008               	return
 12340  0E20                     __end_ofi1_wr1RegCompleteHandler:	
 12341                           
 12342                           	psect	text105
 12343  0BF1                     __ptext105:	
 12344 ;; *************** function i1_returnReset *****************
 12345 ;; Defined at:
 12346 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;  p               1    1[BANK0 ] PTR void 
 12349 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12350 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      enum E3257
 12355 ;; Registers used:
 12356 ;;		wreg
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        1 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; This function calls:
 12369 ;;		Nothing
 12370 ;; This function is called by:
 12371 ;;		_do_I2C_DO_ADDRESS_NACK
 12372 ;;		_do_I2C_TX
 12373 ;;		_do_I2C_RX
 12374 ;;		_do_I2C_TX_EMPTY
 12375 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12376 ;;		i1_do_I2C_TX
 12377 ;;		i1_do_I2C_RX
 12378 ;;		i1_do_I2C_TX_EMPTY
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           
 12382                           
 12383                           ;psect for function i1_returnReset
 12384  0BF1                     i1_returnReset:	
 12385  0BF1                     i1l5374:	
 12386                           ;incstack = 0
 12387                           ; Regs used in i1_returnReset: [wreg]
 12388                           
 12389                           
 12390                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 12391  0BF1  3005               	movlw	5
 12392  0BF2                     i1l207:	
 12393  0BF2  0008               	return
 12394  0BF3                     __end_ofi1_returnReset:	
 12395                           
 12396                           	psect	text106
 12397  0BEF                     __ptext106:	
 12398 ;; *************** function i1_returnStop *****************
 12399 ;; Defined at:
 12400 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  p               1    1[BANK0 ] PTR void 
 12403 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12404 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;		None
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1    wreg      enum E3257
 12409 ;; Registers used:
 12410 ;;		wreg
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12416 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;Total ram usage:        1 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		i1_setCallBack
 12426 ;;		_do_I2C_DO_ADDRESS_NACK
 12427 ;;		_do_I2C_TX
 12428 ;;		_do_I2C_RX
 12429 ;;		_do_I2C_TX_EMPTY
 12430 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12431 ;;		i1_do_I2C_TX
 12432 ;;		i1_do_I2C_RX
 12433 ;;		i1_do_I2C_TX_EMPTY
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           
 12438                           ;psect for function i1_returnStop
 12439  0BEF                     i1_returnStop:	
 12440  0BEF                     i1l5370:	
 12441                           ;incstack = 0
 12442                           ; Regs used in i1_returnStop: [wreg]
 12443                           
 12444                           
 12445                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 12446  0BEF  3001               	movlw	1
 12447  0BF0                     i1l204:	
 12448  0BF0  0008               	return
 12449  0BF1                     __end_ofi1_returnStop:	
 12450                           
 12451                           	psect	text107
 12452  0DFC                     __ptext107:	
 12453 ;; *************** function i1_wr2RegCompleteHandler *****************
 12454 ;; Defined at:
 12455 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  p               1    1[BANK0 ] PTR void 
 12458 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12459 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;		None
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  1    wreg      enum E358
 12464 ;; Registers used:
 12465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12471 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;Total ram usage:        1 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; Hardware stack levels required when called:    2
 12478 ;; This function calls:
 12479 ;;		i1_i2c_setBuffer
 12480 ;;		i1_i2c_setDataCompleteCallback
 12481 ;; This function is called by:
 12482 ;;		_do_I2C_DO_ADDRESS_NACK
 12483 ;;		_do_I2C_TX
 12484 ;;		_do_I2C_RX
 12485 ;;		_do_I2C_TX_EMPTY
 12486 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12487 ;;		i1_do_I2C_TX
 12488 ;;		i1_do_I2C_RX
 12489 ;;		i1_do_I2C_TX_EMPTY
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           
 12494                           ;psect for function i1_wr2RegCompleteHandler
 12495  0DFC                     i1_wr2RegCompleteHandler:	
 12496  0DFC                     i1l5402:	
 12497                           ;incstack = 0
 12498                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12499                           
 12500                           
 12501                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 12502  0DFC  3002               	movlw	2
 12503  0DFD  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12504  0DFE  3000               	movlw	0
 12505  0DFF  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12506  0E00  0020               	movlb	0	; select bank0
 12507  0E01  083E               	movf	i1wr2RegCompleteHandler@p,w
 12508  0E02  318D  25DB  318D   	fcall	i1_i2c_setBuffer
 12509  0E05                     i1l5404:	
 12510                           
 12511                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12512  0E05  3000               	movlw	0
 12513  0E06  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12514  0E07  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12515  0E08  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12516  0E09  318D  2594  318D   	fcall	i1_i2c_setDataCompleteCallback
 12517  0E0C                     i1l5406:	
 12518                           
 12519                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 12520  0E0C  3004               	movlw	4
 12521  0E0D                     i1l279:	
 12522  0E0D  0008               	return
 12523  0E0E                     __end_ofi1_wr2RegCompleteHandler:	
 12524                           
 12525                           	psect	text108
 12526  0D94                     __ptext108:	
 12527 ;; *************** function i1_i2c_setDataCompleteCallback *****************
 12528 ;; Defined at:
 12529 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 12532 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12533 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 12534 ;;  p               1    7[COMMON] PTR void 
 12535 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12536 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;		None
 12539 ;; Return value:  Size  Location     Type
 12540 ;;                  1    wreg      void 
 12541 ;; Registers used:
 12542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12548 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;Total ram usage:        4 bytes
 12553 ;; Hardware stack levels used:    1
 12554 ;; Hardware stack levels required when called:    1
 12555 ;; This function calls:
 12556 ;;		i1_setCallBack
 12557 ;; This function is called by:
 12558 ;;		i1_wr1RegCompleteHandler
 12559 ;;		i1_rd1RegCompleteHandler
 12560 ;;		i1_rd2RegCompleteHandler
 12561 ;;		i1_wr2RegCompleteHandler
 12562 ;;		i1_rdBlkRegCompleteHandler
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           
 12567                           ;psect for function i1_i2c_setDataCompleteCallback
 12568  0D94                     i1_i2c_setDataCompleteCallback:	
 12569  0D94                     i1l5310:	
 12570                           ;incstack = 0
 12571                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 12572                           
 12573                           
 12574                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 12575  0D94  0876               	movf	i1i2c_setDataCompleteCallback@cb+1,w
 12576  0D95  00F1               	movwf	i1setCallBack@cb+1
 12577  0D96  0875               	movf	i1i2c_setDataCompleteCallback@cb,w
 12578  0D97  00F0               	movwf	i1setCallBack@cb
 12579  0D98  0877               	movf	i1i2c_setDataCompleteCallback@p,w
 12580  0D99  0020               	movlb	0	; select bank0
 12581  0D9A  00BD               	movwf	??i1_i2c_setDataCompleteCallback
 12582  0D9B  083D               	movf	??i1_i2c_setDataCompleteCallback,w
 12583  0D9C  00F2               	movwf	i1setCallBack@p
 12584  0D9D  3000               	movlw	0
 12585  0D9E  318F  2789  318D   	fcall	i1_setCallBack
 12586  0DA1                     i1l61:	
 12587  0DA1  0008               	return
 12588  0DA2                     __end_ofi1_i2c_setDataCompleteCallback:	
 12589                           
 12590                           	psect	text109
 12591  0F89                     __ptext109:	
 12592 ;; *************** function i1_setCallBack *****************
 12593 ;; Defined at:
 12594 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 12595 ;; Parameters:    Size  Location     Type
 12596 ;;  idx             1    wreg     enum E3429
 12597 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 12598 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12599 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 12600 ;;  p               1    2[COMMON] PTR void 
 12601 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12602 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12603 ;; Auto vars:     Size  Location     Type
 12604 ;;  idx             1    4[COMMON] enum E3429
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  1    wreg      void 
 12607 ;; Registers used:
 12608 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12614 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;Total ram usage:        5 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; This function calls:
 12621 ;;		Nothing
 12622 ;; This function is called by:
 12623 ;;		i1_i2c_setDataCompleteCallback
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           
 12628                           ;psect for function i1_setCallBack
 12629  0F89                     i1_setCallBack:	
 12630                           
 12631                           ;incstack = 0
 12632                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 12633                           ;i1setCallBack@idx stored from wreg
 12634  0F89  00F4               	movwf	i1setCallBack@idx
 12635  0F8A                     i1l5266:	
 12636                           
 12637                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 12638  0F8A  0870               	movf	i1setCallBack@cb,w
 12639  0F8B  0471               	iorwf	i1setCallBack@cb+1,w
 12640  0F8C  1903               	btfsc	3,2
 12641  0F8D  2F8F               	goto	u294_21
 12642  0F8E  2F90               	goto	u294_20
 12643  0F8F                     u294_21:	
 12644  0F8F  2FA1               	goto	i1l5270
 12645  0F90                     u294_20:	
 12646  0F90                     i1l5268:	
 12647                           
 12648                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 12649  0F90  3574               	lslf	i1setCallBack@idx,w
 12650  0F91  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 12651  0F92  0086               	movwf	6
 12652  0F93  0187               	clrf	7
 12653  0F94  0870               	movf	i1setCallBack@cb,w
 12654  0F95  3FC0               	movwi [0]fsr1
 12655  0F96  0871               	movf	i1setCallBack@cb+1,w
 12656  0F97  3FC1               	movwi [1]fsr1
 12657                           
 12658                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 12659  0F98  0872               	movf	i1setCallBack@p,w
 12660  0F99  00F3               	movwf	??i1_setCallBack
 12661  0F9A  0874               	movf	i1setCallBack@idx,w
 12662  0F9B  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 12663  0F9C  0086               	movwf	6
 12664  0F9D  0187               	clrf	7
 12665  0F9E  0873               	movf	??i1_setCallBack,w
 12666  0F9F  0081               	movwf	1
 12667                           
 12668                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 12669  0FA0  2FAE               	goto	i1l212
 12670  0FA1                     i1l5270:	
 12671                           
 12672                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 12673  0FA1  3574               	lslf	i1setCallBack@idx,w
 12674  0FA2  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 12675  0FA3  0086               	movwf	6
 12676  0FA4  0187               	clrf	7
 12677  0FA5  307A               	movlw	low _returnStop
 12678  0FA6  3FC0               	movwi [0]fsr1
 12679  0FA7  300C               	movlw	high _returnStop
 12680  0FA8  3FC1               	movwi [1]fsr1
 12681                           
 12682                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 12683  0FA9  0874               	movf	i1setCallBack@idx,w
 12684  0FAA  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 12685  0FAB  0086               	movwf	6
 12686  0FAC  0187               	clrf	7
 12687  0FAD  0181               	clrf	1
 12688  0FAE                     i1l212:	
 12689  0FAE  0008               	return
 12690  0FAF                     __end_ofi1_setCallBack:	
 12691                           
 12692                           	psect	text110
 12693  0DDB                     __ptext110:	
 12694 ;; *************** function i1_i2c_setBuffer *****************
 12695 ;; Defined at:
 12696 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;  buffer          1    wreg     PTR void 
 12699 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
 12700 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 12701 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12702 ;;  bufferSize      2    0[COMMON] unsigned int 
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;  buffer          1    3[COMMON] PTR void 
 12705 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
 12706 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 12707 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12708 ;; Return value:  Size  Location     Type
 12709 ;;                  1    wreg      void 
 12710 ;; Registers used:
 12711 ;;		wreg
 12712 ;; Tracked objects:
 12713 ;;		On entry : 0/0
 12714 ;;		On exit  : 0/0
 12715 ;;		Unchanged: 0/0
 12716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12721 ;;Total ram usage:        4 bytes
 12722 ;; Hardware stack levels used:    1
 12723 ;; This function calls:
 12724 ;;		Nothing
 12725 ;; This function is called by:
 12726 ;;		i1_wr1RegCompleteHandler
 12727 ;;		i1_rd1RegCompleteHandler
 12728 ;;		i1_rd2RegCompleteHandler
 12729 ;;		i1_wr2RegCompleteHandler
 12730 ;;		i1_rdBlkRegCompleteHandler
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           
 12735                           ;psect for function i1_i2c_setBuffer
 12736  0DDB                     i1_i2c_setBuffer:	
 12737                           
 12738                           ;incstack = 0
 12739                           ; Regs used in i1_i2c_setBuffer: [wreg]
 12740                           ;i1i2c_setBuffer@buffer stored from wreg
 12741  0DDB  00F3               	movwf	i1i2c_setBuffer@buffer
 12742  0DDC                     i1l3718:	
 12743                           
 12744                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 12745  0DDC  0021               	movlb	1	; select bank1
 12746  0DDD  1D20               	btfss	_i2c_status^(0+128),2
 12747  0DDE  2DE0               	goto	u161_21
 12748  0DDF  2DE1               	goto	u161_20
 12749  0DE0                     u161_21:	
 12750  0DE0  2DEA               	goto	i1l91
 12751  0DE1                     u161_20:	
 12752  0DE1                     i1l3720:	
 12753                           
 12754                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 12755  0DE1  0873               	movf	i1i2c_setBuffer@buffer,w
 12756  0DE2  00F2               	movwf	??i1_i2c_setBuffer
 12757  0DE3  0872               	movf	??i1_i2c_setBuffer,w
 12758  0DE4  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 12759                           
 12760                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 12761  0DE5  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
 12762  0DE6  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 12763  0DE7  0870               	movf	i1i2c_setBuffer@bufferSize,w
 12764  0DE8  00A3               	movwf	(_i2c_status^(0+128)+3)
 12765  0DE9                     i1l3722:	
 12766                           
 12767                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 12768  0DE9  1120               	bcf	_i2c_status^(0+128),2
 12769  0DEA                     i1l91:	
 12770  0DEA  0008               	return
 12771  0DEB                     __end_ofi1_i2c_setBuffer:	
 12772                           
 12773                           	psect	text111
 12774  0BF9                     __ptext111:	
 12775 ;; *************** function i1_i2c_driver_stop *****************
 12776 ;; Defined at:
 12777 ;;		line 157 in file "mcc_generated_files/i2c_driver.c"
 12778 ;; Parameters:    Size  Location     Type
 12779 ;;		None
 12780 ;; Auto vars:     Size  Location     Type
 12781 ;;		None
 12782 ;; Return value:  Size  Location     Type
 12783 ;;                  1    wreg      void 
 12784 ;; Registers used:
 12785 ;;		None
 12786 ;; Tracked objects:
 12787 ;;		On entry : 0/0
 12788 ;;		On exit  : 0/0
 12789 ;;		Unchanged: 0/0
 12790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12795 ;;Total ram usage:        0 bytes
 12796 ;; Hardware stack levels used:    1
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		i1_do_I2C_SEND_STOP
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           
 12805                           ;psect for function i1_i2c_driver_stop
 12806  0BF9                     i1_i2c_driver_stop:	
 12807  0BF9                     i1l3726:	
 12808                           ;incstack = 0
 12809                           ; Regs used in i1_i2c_driver_stop: []
 12810                           
 12811                           
 12812                           ;mcc_generated_files/i2c_driver.c: 159:     SSPCON2bits.PEN = 1;
 12813  0BF9  0024               	movlb	4	; select bank4
 12814  0BFA  1516               	bsf	22,2	;volatile
 12815  0BFB                     i1l632:	
 12816  0BFB  0008               	return
 12817  0BFC                     __end_ofi1_i2c_driver_stop:	
 12818                           
 12819                           	psect	text112
 12820  0BF6                     __ptext112:	
 12821 ;; *************** function i1_i2c_driver_restart *****************
 12822 ;; Defined at:
 12823 ;;		line 152 in file "mcc_generated_files/i2c_driver.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;		None
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;		None
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  1    wreg      void 
 12830 ;; Registers used:
 12831 ;;		None
 12832 ;; Tracked objects:
 12833 ;;		On entry : 0/0
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12841 ;;Total ram usage:        0 bytes
 12842 ;; Hardware stack levels used:    1
 12843 ;; This function calls:
 12844 ;;		Nothing
 12845 ;; This function is called by:
 12846 ;;		i1_do_I2C_SEND_RESTART_READ
 12847 ;;		i1_do_I2C_SEND_RESTART_WRITE
 12848 ;;		i1_do_I2C_SEND_RESTART
 12849 ;; This function uses a non-reentrant model
 12850 ;;
 12851                           
 12852                           
 12853                           ;psect for function i1_i2c_driver_restart
 12854  0BF6                     i1_i2c_driver_restart:	
 12855  0BF6                     i1l3724:	
 12856                           ;incstack = 0
 12857                           ; Regs used in i1_i2c_driver_restart: []
 12858                           
 12859                           
 12860                           ;mcc_generated_files/i2c_driver.c: 154:     SSPCON2bits.RSEN = 1;
 12861  0BF6  0024               	movlb	4	; select bank4
 12862  0BF7  1496               	bsf	22,1	;volatile
 12863  0BF8                     i1l629:	
 12864  0BF8  0008               	return
 12865  0BF9                     __end_ofi1_i2c_driver_restart:	
 12866                           
 12867                           	psect	text113
 12868  0C24                     __ptext113:	
 12869 ;; *************** function i1_i2c_driver_sendACK *****************
 12870 ;; Defined at:
 12871 ;;		line 197 in file "mcc_generated_files/i2c_driver.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;		None
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;		None
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  1    wreg      void 
 12878 ;; Registers used:
 12879 ;;		None
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12889 ;;Total ram usage:        0 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		i1_do_I2C_DO_ACK
 12895 ;;		i1_do_I2C_RX
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           
 12900                           ;psect for function i1_i2c_driver_sendACK
 12901  0C24                     i1_i2c_driver_sendACK:	
 12902  0C24                     i1l3934:	
 12903                           ;incstack = 0
 12904                           ; Regs used in i1_i2c_driver_sendACK: []
 12905                           
 12906                           
 12907                           ;mcc_generated_files/i2c_driver.c: 199:     SSPCON2bits.ACKDT = 0;
 12908  0C24  0024               	movlb	4	; select bank4
 12909  0C25  1296               	bcf	22,5	;volatile
 12910                           
 12911                           ;mcc_generated_files/i2c_driver.c: 200:     SSPCON2bits.ACKEN = 1;
 12912  0C26  1616               	bsf	22,4	;volatile
 12913  0C27                     i1l656:	
 12914  0C27  0008               	return
 12915  0C28                     __end_ofi1_i2c_driver_sendACK:	
 12916                           
 12917                           	psect	text114
 12918  0C20                     __ptext114:	
 12919 ;; *************** function _i2c_busCollisionISR *****************
 12920 ;; Defined at:
 12921 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 12922 ;; Parameters:    Size  Location     Type
 12923 ;;		None
 12924 ;; Auto vars:     Size  Location     Type
 12925 ;;		None
 12926 ;; Return value:  Size  Location     Type
 12927 ;;                  1    wreg      void 
 12928 ;; Registers used:
 12929 ;;		status,2, status,0, pclath, cstack
 12930 ;; Tracked objects:
 12931 ;;		On entry : 0/0
 12932 ;;		On exit  : 0/0
 12933 ;;		Unchanged: 0/0
 12934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12939 ;;Total ram usage:        0 bytes
 12940 ;; Hardware stack levels used:    1
 12941 ;; Hardware stack levels required when called:    1
 12942 ;; This function calls:
 12943 ;;		_i2c_driver_clearBusCollision
 12944 ;; This function is called by:
 12945 ;;		_i2c_open
 12946 ;;		_INTERRUPT_InterruptManager
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           
 12950                           
 12951                           ;psect for function _i2c_busCollisionISR
 12952  0C20                     _i2c_busCollisionISR:	
 12953  0C20                     i1l4252:	
 12954                           ;incstack = 0
 12955                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 12956                           
 12957                           
 12958                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c_driver_clearBusCollision();
 12959  0C20  318B  23F3  318C   	fcall	_i2c_driver_clearBusCollision
 12960  0C23                     i1l201:	
 12961  0C23  0008               	return
 12962  0C24                     __end_of_i2c_busCollisionISR:	
 12963                           
 12964                           	psect	text115
 12965  0BF3                     __ptext115:	
 12966 ;; *************** function _i2c_driver_clearBusCollision *****************
 12967 ;; Defined at:
 12968 ;;		line 254 in file "mcc_generated_files/i2c_driver.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      void 
 12975 ;; Registers used:
 12976 ;;		None
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12986 ;;Total ram usage:        0 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; This function calls:
 12989 ;;		Nothing
 12990 ;; This function is called by:
 12991 ;;		_i2c_busCollisionISR
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           
 12996                           ;psect for function _i2c_driver_clearBusCollision
 12997  0BF3                     _i2c_driver_clearBusCollision:	
 12998  0BF3                     i1l3936:	
 12999                           ;incstack = 0
 13000                           ; Regs used in _i2c_driver_clearBusCollision: []
 13001                           
 13002                           
 13003                           ;mcc_generated_files/i2c_driver.c: 256:     PIR2bits.BCLIF = 0;
 13004  0BF3  0020               	movlb	0	; select bank0
 13005  0BF4  1192               	bcf	18,3	;volatile
 13006  0BF5                     i1l693:	
 13007  0BF5  0008               	return
 13008  0BF6                     __end_of_i2c_driver_clearBusCollision:	
 13009                           
 13010                           	psect	text116
 13011  0CAB                     __ptext116:	
 13012 ;; *************** function _TMR0_ISR *****************
 13013 ;; Defined at:
 13014 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;		None
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;		None
 13019 ;; Return value:  Size  Location     Type
 13020 ;;                  1    wreg      void 
 13021 ;; Registers used:
 13022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13023 ;; Tracked objects:
 13024 ;;		On entry : 0/0
 13025 ;;		On exit  : 0/0
 13026 ;;		Unchanged: 0/0
 13027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;Total ram usage:        0 bytes
 13033 ;; Hardware stack levels used:    1
 13034 ;; Hardware stack levels required when called:    2
 13035 ;; This function calls:
 13036 ;;		_TMR0_CallBack
 13037 ;; This function is called by:
 13038 ;;		_INTERRUPT_InterruptManager
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           
 13043                           ;psect for function _TMR0_ISR
 13044  0CAB                     _TMR0_ISR:	
 13045  0CAB                     i1l4254:	
 13046                           ;incstack = 0
 13047                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13048                           
 13049                           
 13050                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 13051  0CAB  110B               	bcf	11,2	;volatile
 13052  0CAC                     i1l4256:	
 13053                           
 13054                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 13055  0CAC  087D               	movf	_timer0ReloadVal,w	;volatile
 13056  0CAD  0020               	movlb	0	; select bank0
 13057  0CAE  0095               	movwf	21	;volatile
 13058  0CAF                     i1l4258:	
 13059                           
 13060                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
 13061  0CAF  318D  254B  318C   	fcall	_TMR0_CallBack
 13062  0CB2                     i1l542:	
 13063  0CB2  0008               	return
 13064  0CB3                     __end_of_TMR0_ISR:	
 13065                           
 13066                           	psect	text117
 13067  0D4B                     __ptext117:	
 13068 ;; *************** function _TMR0_CallBack *****************
 13069 ;; Defined at:
 13070 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;Total ram usage:        0 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    1
 13091 ;; This function calls:
 13092 ;;		Absolute function
 13093 ;;		_TMR0_DefaultInterruptHandler
 13094 ;;		_displayRefreshISR
 13095 ;; This function is called by:
 13096 ;;		_TMR0_ISR
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100                           
 13101                           ;psect for function _TMR0_CallBack
 13102  0D4B                     _TMR0_CallBack:	
 13103  0D4B                     i1l4032:	
 13104                           ;incstack = 0
 13105                           ; Regs used in _TMR0_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13106                           
 13107                           
 13108                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 13109  0D4B  0878               	movf	_TMR0_InterruptHandler,w
 13110  0D4C  0479               	iorwf	_TMR0_InterruptHandler+1,w
 13111  0D4D  1903               	btfsc	3,2
 13112  0D4E  2D50               	goto	u184_21
 13113  0D4F  2D51               	goto	u184_20
 13114  0D50                     u184_21:	
 13115  0D50  2D56               	goto	i1l546
 13116  0D51                     u184_20:	
 13117  0D51                     i1l4034:	
 13118                           
 13119                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 13120  0D51  0879               	movf	_TMR0_InterruptHandler+1,w
 13121  0D52  008A               	movwf	10
 13122  0D53  0878               	movf	_TMR0_InterruptHandler,w
 13123  0D54  000A               	callw
 13124  0D55  318D               	pagesel	$
 13125  0D56                     i1l546:	
 13126  0D56  0008               	return
 13127  0D57                     __end_of_TMR0_CallBack:	
 13128                           
 13129                           	psect	text118
 13130  0BEC                     __ptext118:	
 13131 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13132 ;; Defined at:
 13133 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;		None
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;		None
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  1    wreg      void 
 13140 ;; Registers used:
 13141 ;;		None
 13142 ;; Tracked objects:
 13143 ;;		On entry : 0/0
 13144 ;;		On exit  : 0/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;Total ram usage:        0 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_TMR0_Initialize
 13157 ;;		_TMR0_CallBack
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161                           
 13162                           ;psect for function _TMR0_DefaultInterruptHandler
 13163  0BEC                     _TMR0_DefaultInterruptHandler:	
 13164  0BEC                     i1l552:	
 13165                           ;incstack = 0
 13166                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 13167                           
 13168  0BEC  0008               	return
 13169  0BED                     __end_of_TMR0_DefaultInterruptHandler:	
 13170                           
 13171                           	psect	text119
 13172  0282                     __ptext119:	
 13173 ;; *************** function _displayRefreshISR *****************
 13174 ;; Defined at:
 13175 ;;		line 344 in file "main.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;		None
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;		None
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  1    wreg      void 
 13182 ;; Registers used:
 13183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;Total ram usage:        2 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_main
 13199 ;;		_TMR0_CallBack
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           
 13204                           ;psect for function _displayRefreshISR
 13205  0282                     _displayRefreshISR:	
 13206  0282                     i1l3804:	
 13207                           ;incstack = 0
 13208                           ; Regs used in _displayRefreshISR: [wreg-fsr1h+status,2+status,0]
 13209                           
 13210                           
 13211                           ;main.c: 345:     static uint8_t i;;main.c: 346:     i &= 0x03;
 13212  0282  3003               	movlw	3
 13213  0283  00F0               	movwf	??_displayRefreshISR
 13214  0284  0870               	movf	??_displayRefreshISR,w
 13215  0285  05FC               	andwf	displayRefreshISR@i,f
 13216  0286                     i1l3806:	
 13217                           
 13218                           ;main.c: 347:     LATD = displayBuff[i];
 13219  0286  087C               	movf	displayRefreshISR@i,w
 13220  0287  3E28               	addlw	(low (_displayBuff| 0))& (0+255)
 13221  0288  0086               	movwf	6
 13222  0289  0187               	clrf	7
 13223  028A  0801               	movf	1,w
 13224  028B  0022               	movlb	2	; select bank2
 13225  028C  008F               	movwf	15	;volatile
 13226                           
 13227                           ;main.c: 348:     switch(i){
 13228  028D  2A9A               	goto	i1l3810
 13229  028E                     i1l918:	
 13230                           ;main.c: 350:             do { LATAbits.LATA3 = 0; } while(0);
 13231                           
 13232  028E  118C               	bcf	12,3	;volatile
 13233  028F                     i1l920:	
 13234                           ;main.c: 351:             do { LATEbits.LATE1 = 1; } while(0);
 13235                           
 13236  028F  1490               	bsf	16,1	;volatile
 13237  0290  2AB0               	goto	i1l3812
 13238  0291                     i1l924:	
 13239                           ;main.c: 354:             do { LATEbits.LATE1 = 0; } while(0);
 13240                           
 13241  0291  1090               	bcf	16,1	;volatile
 13242  0292                     i1l926:	
 13243                           ;main.c: 355:             do { LATCbits.LATC1 = 1; } while(0);
 13244                           
 13245  0292  148E               	bsf	14,1	;volatile
 13246  0293  2AB0               	goto	i1l3812
 13247  0294                     i1l929:	
 13248                           ;main.c: 358:             do { LATCbits.LATC1 = 0; } while(0);
 13249                           
 13250  0294  108E               	bcf	14,1	;volatile
 13251  0295                     i1l931:	
 13252                           ;main.c: 359:             do { LATAbits.LATA4 = 1; } while(0);
 13253                           
 13254  0295  160C               	bsf	12,4	;volatile
 13255  0296  2AB0               	goto	i1l3812
 13256  0297                     i1l934:	
 13257                           ;main.c: 362:             do { LATAbits.LATA4 = 0; } while(0);
 13258                           
 13259  0297  120C               	bcf	12,4	;volatile
 13260  0298                     i1l936:	
 13261                           ;main.c: 363:             do { LATAbits.LATA3 = 1; } while(0);
 13262                           
 13263  0298  158C               	bsf	12,3	;volatile
 13264  0299  2AB0               	goto	i1l3812
 13265  029A                     i1l3810:	
 13266  029A  087C               	movf	displayRefreshISR@i,w
 13267  029B  00F0               	movwf	??_displayRefreshISR
 13268  029C  01F1               	clrf	??_displayRefreshISR+1
 13269                           
 13270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13271                           ; Switch size 1, requested type "simple"
 13272                           ; Number of cases is 1, Range of values is 0 to 0
 13273                           ; switch strategies available:
 13274                           ; Name         Instructions Cycles
 13275                           ; simple_byte            4     3 (average)
 13276                           ; direct_byte            8     6 (fixed)
 13277                           ; jumptable            260     6 (fixed)
 13278                           ;	Chosen strategy is simple_byte
 13279  029D  0871               	movf	??_displayRefreshISR+1,w
 13280  029E  3A00               	xorlw	0	; case 0
 13281  029F  1903               	skipnz
 13282  02A0  2AA2               	goto	i1l6378
 13283  02A1  2AB0               	goto	i1l3812
 13284  02A2                     i1l6378:	
 13285                           
 13286                           ; Switch size 1, requested type "simple"
 13287                           ; Number of cases is 4, Range of values is 0 to 3
 13288                           ; switch strategies available:
 13289                           ; Name         Instructions Cycles
 13290                           ; simple_byte           13     7 (average)
 13291                           ; direct_byte           14     6 (fixed)
 13292                           ; jumptable            260     6 (fixed)
 13293                           ;	Chosen strategy is simple_byte
 13294  02A2  0870               	movf	??_displayRefreshISR,w
 13295  02A3  3A00               	xorlw	0	; case 0
 13296  02A4  1903               	skipnz
 13297  02A5  2A8E               	goto	i1l918
 13298  02A6  3A01               	xorlw	1	; case 1
 13299  02A7  1903               	skipnz
 13300  02A8  2A91               	goto	i1l924
 13301  02A9  3A03               	xorlw	3	; case 2
 13302  02AA  1903               	skipnz
 13303  02AB  2A94               	goto	i1l929
 13304  02AC  3A01               	xorlw	1	; case 3
 13305  02AD  1903               	skipnz
 13306  02AE  2A97               	goto	i1l934
 13307  02AF  2AB0               	goto	i1l3812
 13308  02B0                     i1l3812:	
 13309                           
 13310                           ;main.c: 367:     i++;
 13311  02B0  3001               	movlw	1
 13312  02B1  00F0               	movwf	??_displayRefreshISR
 13313  02B2  0870               	movf	??_displayRefreshISR,w
 13314  02B3  07FC               	addwf	displayRefreshISR@i,f
 13315                           
 13316                           ;main.c: 370:     if(flag_button_press_count[0] != 0){
 13317  02B4  0020               	movlb	0	; select bank0
 13318  02B5  0824               	movf	_flag_button_press_count,w
 13319  02B6  1903               	btfsc	3,2
 13320  02B7  2AB9               	goto	u170_21
 13321  02B8  2ABA               	goto	u170_20
 13322  02B9                     u170_21:	
 13323  02B9  2AC4               	goto	i1l938
 13324  02BA                     u170_20:	
 13325  02BA                     i1l3814:	
 13326                           
 13327                           ;main.c: 371:   if(button_press_count[0] < 200) button_press_count[0]++;
 13328  02BA  30C8               	movlw	200
 13329  02BB  0220               	subwf	_button_press_count,w
 13330  02BC  1803               	skipnc
 13331  02BD  2ABF               	goto	u171_21
 13332  02BE  2AC0               	goto	u171_20
 13333  02BF                     u171_21:	
 13334  02BF  2AC4               	goto	i1l938
 13335  02C0                     u171_20:	
 13336  02C0                     i1l3816:	
 13337  02C0  3001               	movlw	1
 13338  02C1  00F0               	movwf	??_displayRefreshISR
 13339  02C2  0870               	movf	??_displayRefreshISR,w
 13340  02C3  07A0               	addwf	_button_press_count,f
 13341  02C4                     i1l938:	
 13342                           ;main.c: 372:  }
 13343                           
 13344                           
 13345                           ;main.c: 373:     if(flag_button_press_count[1] != 0){
 13346  02C4  0825               	movf	_flag_button_press_count+1,w
 13347  02C5  1903               	btfsc	3,2
 13348  02C6  2AC8               	goto	u172_21
 13349  02C7  2AC9               	goto	u172_20
 13350  02C8                     u172_21:	
 13351  02C8  2AD3               	goto	i1l940
 13352  02C9                     u172_20:	
 13353  02C9                     i1l3818:	
 13354                           
 13355                           ;main.c: 374:   if(button_press_count[1] < 200) button_press_count[1]++;
 13356  02C9  30C8               	movlw	200
 13357  02CA  0221               	subwf	_button_press_count+1,w
 13358  02CB  1803               	skipnc
 13359  02CC  2ACE               	goto	u173_21
 13360  02CD  2ACF               	goto	u173_20
 13361  02CE                     u173_21:	
 13362  02CE  2AD3               	goto	i1l940
 13363  02CF                     u173_20:	
 13364  02CF                     i1l3820:	
 13365  02CF  3001               	movlw	1
 13366  02D0  00F0               	movwf	??_displayRefreshISR
 13367  02D1  0870               	movf	??_displayRefreshISR,w
 13368  02D2  07A1               	addwf	_button_press_count+1,f
 13369  02D3                     i1l940:	
 13370                           ;main.c: 375:  }
 13371                           
 13372                           
 13373                           ;main.c: 376:     if(flag_button_press_count[2] != 0){
 13374  02D3  0826               	movf	_flag_button_press_count+2,w
 13375  02D4  1903               	btfsc	3,2
 13376  02D5  2AD7               	goto	u174_21
 13377  02D6  2AD8               	goto	u174_20
 13378  02D7                     u174_21:	
 13379  02D7  2AE2               	goto	i1l942
 13380  02D8                     u174_20:	
 13381  02D8                     i1l3822:	
 13382                           
 13383                           ;main.c: 377:   if(button_press_count[2] < 200) button_press_count[2]++;
 13384  02D8  30C8               	movlw	200
 13385  02D9  0222               	subwf	_button_press_count+2,w
 13386  02DA  1803               	skipnc
 13387  02DB  2ADD               	goto	u175_21
 13388  02DC  2ADE               	goto	u175_20
 13389  02DD                     u175_21:	
 13390  02DD  2AE2               	goto	i1l942
 13391  02DE                     u175_20:	
 13392  02DE                     i1l3824:	
 13393  02DE  3001               	movlw	1
 13394  02DF  00F0               	movwf	??_displayRefreshISR
 13395  02E0  0870               	movf	??_displayRefreshISR,w
 13396  02E1  07A2               	addwf	_button_press_count+2,f
 13397  02E2                     i1l942:	
 13398                           ;main.c: 378:  }
 13399                           
 13400                           
 13401                           ;main.c: 379:     if(flag_button_press_count[3] != 0){
 13402  02E2  0827               	movf	_flag_button_press_count+3,w
 13403  02E3  1903               	btfsc	3,2
 13404  02E4  2AE6               	goto	u176_21
 13405  02E5  2AE7               	goto	u176_20
 13406  02E6                     u176_21:	
 13407  02E6  2AF1               	goto	i1l946
 13408  02E7                     u176_20:	
 13409  02E7                     i1l3826:	
 13410                           
 13411                           ;main.c: 380:   if(button_press_count[3] < 200) button_press_count[3]++;
 13412  02E7  30C8               	movlw	200
 13413  02E8  0223               	subwf	_button_press_count+3,w
 13414  02E9  1803               	skipnc
 13415  02EA  2AEC               	goto	u177_21
 13416  02EB  2AED               	goto	u177_20
 13417  02EC                     u177_21:	
 13418  02EC  2AF1               	goto	i1l946
 13419  02ED                     u177_20:	
 13420  02ED                     i1l3828:	
 13421  02ED  3001               	movlw	1
 13422  02EE  00F0               	movwf	??_displayRefreshISR
 13423  02EF  0870               	movf	??_displayRefreshISR,w
 13424  02F0  07A3               	addwf	_button_press_count+3,f
 13425  02F1                     i1l946:	
 13426  02F1  0008               	return
 13427  02F2                     __end_of_displayRefreshISR:	
 13428                           
 13429                           	psect	text120
 13430  0CD3                     __ptext120:	
 13431 ;; *************** function _PIN_MANAGER_IOC *****************
 13432 ;; Defined at:
 13433 ;;		line 118 in file "mcc_generated_files/pin_manager.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;		None
 13436 ;; Auto vars:     Size  Location     Type
 13437 ;;		None
 13438 ;; Return value:  Size  Location     Type
 13439 ;;                  1    wreg      void 
 13440 ;; Registers used:
 13441 ;;		wreg, status,2, status,0, pclath, cstack
 13442 ;; Tracked objects:
 13443 ;;		On entry : 0/0
 13444 ;;		On exit  : 0/0
 13445 ;;		Unchanged: 0/0
 13446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;Total ram usage:        0 bytes
 13452 ;; Hardware stack levels used:    1
 13453 ;; Hardware stack levels required when called:    2
 13454 ;; This function calls:
 13455 ;;		_IOCBF4_ISR
 13456 ;; This function is called by:
 13457 ;;		_INTERRUPT_InterruptManager
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           
 13462                           ;psect for function _PIN_MANAGER_IOC
 13463  0CD3                     _PIN_MANAGER_IOC:	
 13464  0CD3                     i1l4260:	
 13465                           ;incstack = 0
 13466                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 13467                           
 13468                           
 13469                           ;mcc_generated_files/pin_manager.c: 121:     if(IOCBFbits.IOCBF4 == 1)
 13470  0CD3  0027               	movlb	7	; select bank7
 13471  0CD4  1E16               	btfss	22,4	;volatile
 13472  0CD5  2CD7               	goto	u201_21
 13473  0CD6  2CD8               	goto	u201_20
 13474  0CD7                     u201_21:	
 13475  0CD7  2CDB               	goto	i1l501
 13476  0CD8                     u201_20:	
 13477  0CD8                     i1l4262:	
 13478                           
 13479                           ;mcc_generated_files/pin_manager.c: 122:     {;mcc_generated_files/pin_manager.c: 123:  
      +                                 IOCBF4_ISR();
 13480  0CD8  318D  25CC  318C   	fcall	_IOCBF4_ISR
 13481  0CDB                     i1l501:	
 13482  0CDB  0008               	return
 13483  0CDC                     __end_of_PIN_MANAGER_IOC:	
 13484                           
 13485                           	psect	text121
 13486  0DCC                     __ptext121:	
 13487 ;; *************** function _IOCBF4_ISR *****************
 13488 ;; Defined at:
 13489 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;		None
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;		None
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      void 
 13496 ;; Registers used:
 13497 ;;		wreg, status,2, status,0, pclath, cstack
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;Total ram usage:        0 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    1
 13510 ;; This function calls:
 13511 ;;		Absolute function
 13512 ;;		_IOCBF4_DefaultInterruptHandler
 13513 ;;		_secondISR
 13514 ;; This function is called by:
 13515 ;;		_PIN_MANAGER_IOC
 13516 ;; This function uses a non-reentrant model
 13517 ;;
 13518                           
 13519                           
 13520                           ;psect for function _IOCBF4_ISR
 13521  0DCC                     _IOCBF4_ISR:	
 13522  0DCC                     i1l4026:	
 13523                           ;incstack = 0
 13524                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13525                           
 13526                           
 13527                           ;mcc_generated_files/pin_manager.c: 135:     if(IOCBF4_InterruptHandler)
 13528  0DCC  0020               	movlb	0	; select bank0
 13529  0DCD  0857               	movf	_IOCBF4_InterruptHandler,w
 13530  0DCE  0458               	iorwf	_IOCBF4_InterruptHandler+1,w
 13531  0DCF  1903               	btfsc	3,2
 13532  0DD0  2DD2               	goto	u183_21
 13533  0DD1  2DD3               	goto	u183_20
 13534  0DD2                     u183_21:	
 13535  0DD2  2DD8               	goto	i1l4030
 13536  0DD3                     u183_20:	
 13537  0DD3                     i1l4028:	
 13538                           
 13539                           ;mcc_generated_files/pin_manager.c: 136:     {;mcc_generated_files/pin_manager.c: 137:  
      +                                 IOCBF4_InterruptHandler();
 13540  0DD3  0858               	movf	_IOCBF4_InterruptHandler+1,w
 13541  0DD4  008A               	movwf	10
 13542  0DD5  0857               	movf	_IOCBF4_InterruptHandler,w
 13543  0DD6  000A               	callw
 13544  0DD7  318D               	pagesel	$
 13545  0DD8                     i1l4030:	
 13546                           
 13547                           ;mcc_generated_files/pin_manager.c: 139:     IOCBFbits.IOCBF4 = 0;
 13548  0DD8  0027               	movlb	7	; select bank7
 13549  0DD9  1216               	bcf	22,4	;volatile
 13550  0DDA                     i1l505:	
 13551  0DDA  0008               	return
 13552  0DDB                     __end_of_IOCBF4_ISR:	
 13553                           
 13554                           	psect	text122
 13555  0BEB                     __ptext122:	
 13556 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 13557 ;; Defined at:
 13558 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;		None
 13561 ;; Auto vars:     Size  Location     Type
 13562 ;;		None
 13563 ;; Return value:  Size  Location     Type
 13564 ;;                  1    wreg      void 
 13565 ;; Registers used:
 13566 ;;		None
 13567 ;; Tracked objects:
 13568 ;;		On entry : 0/0
 13569 ;;		On exit  : 0/0
 13570 ;;		Unchanged: 0/0
 13571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13576 ;;Total ram usage:        0 bytes
 13577 ;; Hardware stack levels used:    1
 13578 ;; This function calls:
 13579 ;;		Nothing
 13580 ;; This function is called by:
 13581 ;;		_PIN_MANAGER_Initialize
 13582 ;;		_IOCBF4_ISR
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           
 13587                           ;psect for function _IOCBF4_DefaultInterruptHandler
 13588  0BEB                     _IOCBF4_DefaultInterruptHandler:	
 13589  0BEB                     i1l511:	
 13590                           ;incstack = 0
 13591                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 13592                           
 13593  0BEB  0008               	return
 13594  0BEC                     __end_of_IOCBF4_DefaultInterruptHandler:	
 13595                           
 13596                           	psect	text123
 13597  0700                     __ptext123:	
 13598 ;; *************** function _secondISR *****************
 13599 ;; Defined at:
 13600 ;;		line 325 in file "main.c"
 13601 ;; Parameters:    Size  Location     Type
 13602 ;;		None
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;		None
 13605 ;; Return value:  Size  Location     Type
 13606 ;;                  1    wreg      void 
 13607 ;; Registers used:
 13608 ;;		wreg, status,2, status,0
 13609 ;; Tracked objects:
 13610 ;;		On entry : 0/0
 13611 ;;		On exit  : 0/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;Total ram usage:        0 bytes
 13619 ;; Hardware stack levels used:    1
 13620 ;; This function calls:
 13621 ;;		Nothing
 13622 ;; This function is called by:
 13623 ;;		_main
 13624 ;;		_IOCBF4_ISR
 13625 ;; This function uses a non-reentrant model
 13626 ;;
 13627                           
 13628                           
 13629                           ;psect for function _secondISR
 13630  0700                     _secondISR:	
 13631  0700                     i1l3788:	
 13632                           ;incstack = 0
 13633                           ; Regs used in _secondISR: [wreg+status,2+status,0]
 13634                           
 13635                           
 13636                           ;main.c: 327:     if(mode == MODE_NORMAL){
 13637  0700  0020               	movlb	0	; select bank0
 13638  0701  0831               	movf	_mode,w
 13639  0702  1D03               	btfss	3,2
 13640  0703  2F05               	goto	u164_21
 13641  0704  2F06               	goto	u164_20
 13642  0705                     u164_21:	
 13643  0705  2F16               	goto	i1l3794
 13644  0706                     u164_20:	
 13645  0706                     i1l3790:	
 13646  0706  1003               	clrc
 13647  0707  0022               	movlb	2	; select bank2
 13648  0708  1F8C               	btfss	12,7	;volatile
 13649  0709  1403               	setc
 13650  070A  1803               	btfsc	3,0
 13651  070B  2F0D               	goto	u165_21
 13652  070C  2F10               	goto	u165_20
 13653  070D                     u165_21:	
 13654  070D  0022               	movlb	2	; select bank2
 13655  070E  178C               	bsf	12,7	;volatile
 13656  070F  2F12               	goto	u166_24
 13657  0710                     u165_20:	
 13658  0710  0022               	movlb	2	; select bank2
 13659  0711  138C               	bcf	12,7	;volatile
 13660  0712                     u166_24:	
 13661  0712                     i1l3792:	
 13662                           
 13663                           ;main.c: 329:         flag_time_display_update = 1;
 13664  0712  0020               	movlb	0	; select bank0
 13665  0713  01B3               	clrf	_flag_time_display_update
 13666  0714  0AB3               	incf	_flag_time_display_update,f
 13667                           
 13668                           ;main.c: 330:     } else {
 13669  0715  2F20               	goto	i1l3798
 13670  0716                     i1l3794:	
 13671                           
 13672                           ;main.c: 331:         if(flag_dot_blink) flag_dot_blink = 0;
 13673  0716  0832               	movf	_flag_dot_blink,w
 13674  0717  1903               	btfsc	3,2
 13675  0718  2F1A               	goto	u167_21
 13676  0719  2F1B               	goto	u167_20
 13677  071A                     u167_21:	
 13678  071A  2F1D               	goto	i1l907
 13679  071B                     u167_20:	
 13680  071B                     i1l3796:	
 13681  071B  01B2               	clrf	_flag_dot_blink
 13682  071C  2F12               	goto	i1l3792
 13683  071D                     i1l907:	
 13684                           ;main.c: 332:         else flag_dot_blink = 1;
 13685                           
 13686  071D  01B2               	clrf	_flag_dot_blink
 13687  071E  0AB2               	incf	_flag_dot_blink,f
 13688  071F  2F12               	goto	i1l3792
 13689  0720                     i1l3798:	
 13690                           
 13691                           ;main.c: 336:     if(mode_timeout_count) {
 13692  0720  0830               	movf	_mode_timeout_count,w
 13693  0721  1903               	btfsc	3,2
 13694  0722  2F24               	goto	u168_21
 13695  0723  2F25               	goto	u168_20
 13696  0724                     u168_21:	
 13697  0724  2F2D               	goto	i1l911
 13698  0725                     u168_20:	
 13699  0725                     i1l3800:	
 13700                           
 13701                           ;main.c: 337:         mode_timeout_count--;
 13702  0725  3001               	movlw	1
 13703  0726  02B0               	subwf	_mode_timeout_count,f
 13704                           
 13705                           ;main.c: 338:         if(mode_timeout_count == 0){
 13706  0727  0830               	movf	_mode_timeout_count,w
 13707  0728  1D03               	btfss	3,2
 13708  0729  2F2B               	goto	u169_21
 13709  072A  2F2C               	goto	u169_20
 13710  072B                     u169_21:	
 13711  072B  2F2D               	goto	i1l911
 13712  072C                     u169_20:	
 13713  072C                     i1l3802:	
 13714                           
 13715                           ;main.c: 339:             mode = MODE_NORMAL;
 13716  072C  01B1               	clrf	_mode
 13717  072D                     i1l911:	
 13718  072D  0008               	return
 13719  072E                     __end_of_secondISR:	
 13720  007E                     btemp	set	126	;btemp
 13721  007E                     int$flags	set	126
 13722  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    42
    Data        0
    BSS         64
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      57
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    do_I2C_TX$2341$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2347	const PTR FTN()enum E3411 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$2346	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2341	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S52$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    mssp_waitForEvent@timeout	PTR unsigned short  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_driver_setI2cISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c_driver_setBusCollisionISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayRefreshISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayRefreshISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondISR(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondISR(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i1_i2c_ISR(), Absolute function(), i2c_ISR(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    i2c_readDataBlock@data	PTR void  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    d.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    S373$data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E3411[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S52$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S52$callbackTable	PTR FTN(PTR void ,)enum E3257[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E3257[6] size(2) Largest target is 1
		 -> i1_wr1RegCompleteHandler(), i1_i2c_restartWrite(), i1_rd1RegCompleteHandler(), i1_rd2RegCompleteHandler(), 
		 -> i1_wr2RegCompleteHandler(), i1_rdBlkRegCompleteHandler(), i1_returnReset(), i1_returnStop(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S52$data_ptr	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_i2c_ISR
    i1_i2c_ISR->i1_do_I2C_DO_ADDRESS_NACK
    i1_i2c_ISR->i1_do_I2C_RX
    i1_i2c_ISR->i1_do_I2C_TX
    i1_i2c_ISR->i1_do_I2C_TX_EMPTY
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack
    _TMR0_CallBack->_displayRefreshISR

Critical Paths under _main in BANK0

    _main->_initRTC
    _updateRTC->_i2c_writeNBytes
    _intToBCD->___lwdiv
    _initRTC->_i2c_readDataBlock
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c_driver_setBusCollisionISR
    _i2c_open->_i2c_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c_driver_TXData
    _do_I2C_TX->_i2c_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  400192
                                             21 BANK0      5     5      0
                  _ADC_GetConversion
         _IOCBF4_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _bcdHourDecr
                        _bcdHourIncr
                      _bcdMinuteDecr
                      _bcdMinuteIncr
                  _i2c_readDataBlock
                            _initRTC
                           _intToBCD
                          _updateRTC
 ---------------------------------------------------------------------------------
 (1) _updateRTC                                            3     2      1   97845
                                             14 BANK0      3     2      1
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _intToBCD                                             9     7      2    1093
                                              8 BANK0      9     7      2
                  _ADC_GetConversion (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initRTC                                              2     2      0  198695
                                             19 BANK0      2     2      0
                  _i2c_readDataBlock
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _i2c_writeNBytes                                      4     1      3   97693
                                             10 BANK0      4     1      3
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_readDataBlock                                    9     5      4  101002
                                             10 BANK0      9     5      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddressNACKCallback                           4     1      3    2259
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     310
                                              2 BANK0      3     3      0
                    _i2c_driver_open
      _i2c_driver_setBusCollisionISR
               _i2c_driver_setI2cISR
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_setI2cISR                                 2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_setBusCollisionISR                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_open                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_masterWrite                                      0     0      0   93060
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0   93060
                                              7 BANK0      3     3      0
                   _i2c_driver_start
                         _i2c_poller
                  _mssp_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp_IRQisEnabled                                    2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0   92992
                            _i2c_ISR
                  _mssp_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp_waitForEvent                                    1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   92937
                                              4 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                  _i2c_driver_isNACK
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   23211
                                              0 BANK0      3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                        _mssp_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp_setIRQ                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   23242
                                              1 BANK0      3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                  _i2c_driver_TXData
                  _i2c_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c_driver_isNACK                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_TXData                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   23211
                                              0 BANK0      3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
               _i2c_driver_getRXData
                 _i2c_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_getRXData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c_driver_sendNACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
                _i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_resetBus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                 _i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_startRX                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   23211
                                              0 BANK0      3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4692
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1      32
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4735
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2979
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (4) _setCallBack                                          5     2      3    1117
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _i2c_setBuffer                                        4     2      2    1574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                    _i2c_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c_driver_stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c_driver_restart                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                 _i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_sendACK                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_driver_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_close                                            2     2      0      37
                                              0 BANK0      2     2      0
                      _mssp_clearIRQ
                    _mssp_disableIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp_disableIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mssp_clearIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bcdMinuteIncr                                        1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcdMinuteDecr                                        1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcdHourIncr                                          1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcdHourDecr                                          1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     422
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCBF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0   18830
                   Absolute function *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (12) i1_i2c_ISR                                           3     3      0   18830
                                              3 COMMON     3     3      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
                i1_i2c_driver_isNACK
                    i1_mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (13) i1_mssp_clearIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_TX_EMPTY                                   3     3      0    4691
                                              0 COMMON     3     3      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                      i1_mssp_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) i1_mssp_setIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_TX                                         3     3      0    4713
                                              0 COMMON     3     3      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
                i1_i2c_driver_TXData
                i1_i2c_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_driver_isNACK                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
               i1_i2c_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
               i1_i2c_driver_restart
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
                i1_i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
                i1_i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_TXData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RX                                         3     3      0    4691
                                              0 COMMON     3     3      0
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
             i1_i2c_driver_getRXData
               i1_i2c_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_getRXData                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
              i1_i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
              i1_i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c_driver_sendNACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RESET                                      0     0      0       0
              i1_i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_resetBus                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RCEN                                       0     0      0       0
               i1_i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_startRX                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_DO_ADDRESS_NACK                            3     3      0    4691
                                              0 COMMON     3     3      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) i1_wr2RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_wr1RegCompleteHandler                             1     0      1    1044
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_returnStop                                        1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_returnReset                                       1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_rdBlkRegCompleteHandler                           1     0      1     935
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_rd2RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_rd1RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (15) i1_i2c_setDataCompleteCallback                       4     1      3     699
                                              5 COMMON     3     0      3
                                              0 BANK0      1     1      0
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (16) i1_setCallBack                                       5     2      3     287
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (15) i1_i2c_setBuffer                                     4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) i1_i2c_restartWrite                                  1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_STOP                                  0     0      0       0
                  i1_i2c_driver_stop
 ---------------------------------------------------------------------------------
 (15) i1_i2c_driver_stop                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART                               0     0      0       0
               i1_i2c_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_i2c_driver_restart                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_DO_ACK                                     0     0      0       0
               i1_i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_sendACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_busCollisionISR                                 0     0      0       0
       _i2c_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                  _displayRefreshISR *
 ---------------------------------------------------------------------------------
 (14) _displayRefreshISR                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCBF4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCBF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                          _secondISR *
 ---------------------------------------------------------------------------------
 (14) _secondISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IOCBF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCBF4_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF4_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _bcdHourDecr
   _bcdHourIncr
   _bcdMinuteDecr
   _bcdMinuteIncr
   _i2c_readDataBlock
     _i2c_close
       _mssp_clearIRQ
       _mssp_disableIRQ
     _i2c_masterWrite
       _i2c_masterOperation
         _i2c_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c_driver_startRX
             _do_I2C_RESET *
               _i2c_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _i2c_driver_getRXData *
               _i2c_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c_driver_restart
             _do_I2C_SEND_STOP *
               _i2c_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _i2c_driver_TXData *
               _i2c_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _i2c_restartWrite *
               _mssp_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c_driver_isNACK *
             _mssp_clearIRQ *
           _mssp_waitForEvent
         _mssp_IRQisEnabled
     _i2c_open
       _i2c_driver_open
       _i2c_driver_setBusCollisionISR
       _i2c_driver_setI2cISR
       _mssp_clearIRQ
     _i2c_setAddressNACKCallback
       _setCallBack
     _i2c_setBuffer
     _i2c_setDataCompleteCallback
       _setCallBack
   _initRTC
     _i2c_readDataBlock
       _i2c_close
         _mssp_clearIRQ
         _mssp_disableIRQ
       _i2c_masterWrite
         _i2c_masterOperation
           _i2c_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c_driver_startRX
               _do_I2C_RESET *
                 _i2c_driver_resetBus
               _do_I2C_RX *
                 Absolute function(Fake) *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c_driver_sendNACK
                 _i2c_driver_getRXData *
                 _i2c_driver_sendACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_SEND_ADR_READ *
                 _i2c_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _do_I2C_TX *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART_READ *
                   _i2c_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_driver_TXData *
                 _i2c_driver_isNACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_TX_EMPTY *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _mssp_setIRQ *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _i2c_driver_isNACK *
               _mssp_clearIRQ *
             _mssp_waitForEvent
           _mssp_IRQisEnabled
       _i2c_open
         _i2c_driver_open
         _i2c_driver_setBusCollisionISR
         _i2c_driver_setI2cISR
         _mssp_clearIRQ
       _i2c_setAddressNACKCallback
         _setCallBack
       _i2c_setBuffer
       _i2c_setDataCompleteCallback
         _setCallBack
     _i2c_writeNBytes
       _i2c_close
         _mssp_clearIRQ
         _mssp_disableIRQ
       _i2c_masterWrite
         _i2c_masterOperation
           _i2c_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c_driver_startRX
               _do_I2C_RESET *
                 _i2c_driver_resetBus
               _do_I2C_RX *
                 Absolute function(Fake) *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c_driver_sendNACK
                 _i2c_driver_getRXData *
                 _i2c_driver_sendACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_SEND_ADR_READ *
                 _i2c_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _do_I2C_TX *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART_READ *
                   _i2c_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_driver_TXData *
                 _i2c_driver_isNACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_TX_EMPTY *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _mssp_setIRQ *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _i2c_driver_isNACK *
               _mssp_clearIRQ *
             _mssp_waitForEvent
           _mssp_IRQisEnabled
       _i2c_open
         _i2c_driver_open
         _i2c_driver_setBusCollisionISR
         _i2c_driver_setI2cISR
         _mssp_clearIRQ
       _i2c_setAddressNACKCallback
         _setCallBack
       _i2c_setBuffer
   _intToBCD
     _ADC_GetConversion (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _updateRTC
     _i2c_writeNBytes
       _i2c_close
         _mssp_clearIRQ
         _mssp_disableIRQ
       _i2c_masterWrite
         _i2c_masterOperation
           _i2c_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c_driver_startRX
               _do_I2C_RESET *
                 _i2c_driver_resetBus
               _do_I2C_RX *
                 Absolute function(Fake) *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c_driver_sendNACK
                 _i2c_driver_getRXData *
                 _i2c_driver_sendACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_SEND_ADR_READ *
                 _i2c_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _do_I2C_TX *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART_READ *
                   _i2c_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_driver_TXData *
                 _i2c_driver_isNACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_TX_EMPTY *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _mssp_setIRQ *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _i2c_driver_isNACK *
               _mssp_clearIRQ *
             _mssp_waitForEvent
           _mssp_IRQisEnabled
       _i2c_open
         _i2c_driver_open
         _i2c_driver_setBusCollisionISR
         _i2c_driver_setI2cISR
         _mssp_clearIRQ
       _i2c_setAddressNACKCallback
         _setCallBack
       _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _PIN_MANAGER_IOC *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _secondISR *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _displayRefreshISR *
   _i2c_busCollisionISR *
     _i2c_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c_driver_sendNACK
       i1_i2c_driver_getRXData *
       i1_i2c_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c_driver_stop
       i1_i2c_driver_TXData *
       i1_i2c_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c_driver_stop
       i1_i2c_restartWrite *
       i1_mssp_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c_driver_isNACK *
     i1_mssp_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      62      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      62      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jul  7 17:22:50 2020

                __end_of_i2c_driver_restart 0C14                         i1_i2c_driver_isNACK 0CB3  
                              returnReset@p 0046                                  __CFG_CP$ON 0000  
                __end_of_i2c_driver_startRX 0C1A                      __size_of_bcdMinuteDecr 0034  
             _do_I2C_SEND_RESTART$intlevel0 0D0D                                 _SSPSTATbits 0214  
                    __size_of_bcdMinuteIncr 0035                                          l61 0DAF  
                                        l83 0F68                                          l91 0E83  
                                        l67 0DCB                                          l84 0F6A  
                                        l76 0442                                          l77 0444  
                                        l98 07DB                             i1_mssp_clearIRQ 0C05  
                      __size_of_do_I2C_IDLE 0009                      __end_of_FVR_Initialize 0C30  
                       _do_I2C_SEND_RESTART 0D09                        __size_of_do_I2C_RCEN 000B  
                           _timer0ReloadVal 007D                        __end_ofi1_returnStop 0BF1  
                      ?i1_i2c_driver_TXData 0070                                 i1_do_I2C_RX 0445  
                               i1_do_I2C_TX 034C                                 __CFG_LVP$ON 0000  
                      i1_i2c_driver_sendACK 0C24                                         l110 0DBD  
                                       l104 0C6D                                         l113 0D6E  
                                       l122 0D08                                         l131 0D93  
                                       l212 0FD5                                         l204 0C7F  
                                       l116 0CF6                                         l140 0D23  
                                       l300 0552                                         l125 0D11  
                                       l134 0D7A                                         l207 0C85  
                                       l231 0EB1                                         l119 0CFF  
                                       l143 0D2C                                         l128 0D1A  
                                       l152 0666                                         l160 034B  
                                       l137 0D4A                                         l146 0D35  
                                       l252 0EC8                                         l157 032F  
                                       l173 03C5                                         l318 0C8B  
                                       l174 03F3                                         l600 0C1F  
                                       l433 0E56                                         l249 07B1  
                                       l530 0E6C                                         l442 0C33  
                                       l267 0EDF                                         l291 0F88  
                                       l611 0DFB                                         l436 0D5D  
                                       l508 0C73                                         l188 05C8  
                                       l198 06FF                                         l439 0D62  
                                       l279 0E9A                                         l623 0BEE  
                                       l607 0DF0                                         l615 0D86  
                                       l632 0C16                                         l641 0C1C  
                                       l706 0C2F                                         l810 0F4C  
                                       l626 0C10                                         l650 0C91  
                                       l635 0CED                                         l803 0514  
                                       l740 07F2                                         l724 0CD2  
                                       l549 0C79                                         l629 0C13  
                                       l742 07FF                                         l822 0632  
                                       l638 0C19                                         l806 0F13  
                                       l831 069A                                         l591 0D3F  
                                       l816 0F2F                                         l656 0C37  
                                       l497 075A                                         l594 0C0D  
                                       l842 04D6                                         l739 07F3  
                                       l659 0C3B                                         l860 0095  
                                       l597 0C0A                                         l855 007E  
                                       l696 0C97                                         l856 0087  
                                       l865 00CD                                         l858 008E  
                                       l699 0C9D                                         l859 015D  
                                       l892 022B                                         l885 027F  
                                       l888 01CC                                __CFG_CPD$OFF 0000  
                  i1_do_I2C_DO_NACK_RESTART 0C64                __size_of_i2c_masterOperation 002A  
                      _returnStop$intlevel0 0C7E                        i1_i2c_driver_restart 0BF6  
             i2c_setDataCompleteCallback@cb 0042                    ?i1_rd2RegCompleteHandler 003E  
                     __size_of_do_I2C_RESET 000C                                __CFG_BORV$LO 0000  
                                       wreg 0009                                __CFG_IESO$ON 0000  
                      i1_i2c_driver_startRX 0BFC                       __end_ofi1_returnReset 0BF3  
        __end_of_IOCBF4_SetInterruptHandler 0C74                  _IOCBF4_SetInterruptHandler 0C6E  
                      ?i1_i2c_driver_isNACK 0070                    ?i1_wr2RegCompleteHandler 003E  
           ??i1_i2c_setDataCompleteCallback 003D                      i1_i2c_driver_getRXData 0BFF  
                     __end_ofi1_mssp_setIRQ 0C05                     ??_rd2RegCompleteHandler 0047  
                     i1_i2c_driver_sendNACK 0C28                                        l5000 0C8E  
                                      l1376 058F                                        l5002 0C17  
                                      l1386 05FD                                        l5004 0C34  
                                      l5100 0D8D                                        l5012 0D31  
                                      l5022 0C1A                                        l5102 0D92  
                                      l5110 0D79                                        l5006 0D28  
                                      l5014 0D34                                        l5032 0C84  
                                      l5040 0EB0                                        l5008 0D2B  
                                      l5200 03CB                                        l6000 008B  
                                      l5018 0CE5                                        l5026 0C1D  
                                      l5106 0D73                                        l5114 0D44  
                                      l5122 0D1F                                        l5130 0639  
                                      l6010 00A7                                        l6002 0092  
                             i1returnStop@p 003E                                        l5060 0E88  
                                      l5028 0C7E                                        l5036 0E9F  
                                      l5044 0EB6                                        l5052 0ECD  
                                      l5220 059E                                        l5212 0594  
                                      l5108 0D75                                        l5116 0D46  
                                      l5124 0D22                                        l5132 0640  
                                      l5300 07C7                                        l6100 0174  
                                      l6020 00C3                                        l6012 00AD  
                                      l6004 0099                                        l5062 0E91  
                                      l5038 0EA8                                        l5046 0EBF  
                                      l5054 0ED6                                        l5070 0F87  
                                      l5214 0597                                        l5230 05A4  
                                      l5118 0D49                                        l5142 0648  
                                      l5206 03CF                                        l5302 07CC  
                                      l6110 01B2                                        l6102 0187  
                                      l6030 00DA                                        l6014 00B2  
                                      l6006 009C                                        l5064 0E99  
                                      l5048 0EC7                                        l5056 0EDE  
                                      l5224 05A0                                        l5080 0D67  
                                      l5136 0644                                        l5128 0637  
                                      l5160 0306                                        l5152 02FE  
                                      l5240 0DF6                                        l5304 07D6  
                                      l5320 0404                                        l5312 0DBE  
                                      l6120 01CE                                        l6112 01BB  
                                      l6104 0193                                        l6040 00F5  
                                      l6032 00E0                                        l6024 00CC  
                                      l6016 00BA                                        l6008 00A1  
                                      l5074 0C8A                                        l5218 059B  
                                      l5082 0D6A                                        l5090 0CF2  
                                      l5170 033D                                        l5250 06E8  
                                      l5242 06D3                                        l5306 07D9  
                                      l5330 041B                                        l5322 0405  
                                      l5314 03F6                                        l6130 0224  
                                      l6122 01DF                                        l6114 01BD  
                                      l6106 01A5                                        l6050 0105  
                                      l6042 00FB                                        l6034 00E6  
                                      l6018 00BD                                        l6026 00CF  
                                      l5500 0E5F                                        l5252 0C0E  
                                      l5068 0F6F                                        l5084 0D6C  
                                      l5092 0CF4                                        l5172 0348  
                                      l5156 0302                                        l5148 02F6  
                                      l5244 06D6                                        l5236 0DEB  
                                      l5260 0DB1                                        l5340 042D  
                                      l5332 041F                                        l5324 0410  
                                      l5316 03FD                                        l5420 078A  
                                      l6140 026A                                        l6124 01F6  
                                      l6132 0226                                        l6108 01B1  
                                      l6116 01C2                                        l6060 011D  
                                      l6036 00EE                                        l6028 00D4  
                                      l6052 0106                                        l5502 0E63  
                                      l5078 0C08                                        l5350 0F4D  
                                      l5086 0D6D                                        l5094 0CF5  
                                      l5174 034A                                        l5166 030A  
                                      l5190 03C3                                        l5182 03A5  
                                      l5246 06DB                                        l5262 0DB5  
                                      l5254 0D36                                        l5342 0430  
                                      l5334 0424                                        l5326 0415  
                                      l5318 0403                                        l5430 07A9  
                                      l5422 078A                                        l5510 0556  
                                      l6142 026F                                        l6134 022D  
                                      l6126 0210                                        l6118 01C7  
                                      l6062 0125                                        l6054 010B  
                                      l6038 00F2                                        l5504 0E64  
                                      l5352 0F55                                        l5168 0331  
                                      l5184 03B1                                        l5248 06E2  
                                      l5264 0DB8                                        l5272 0D7B  
                                      l5344 0438                                        l5336 0425  
                                      l5328 0416                                        l5440 053E  
                                      l5432 0517                                        l5424 0794  
                                      l5520 056C                                        l5512 055C  
                                      l6144 0275                                        l6136 0240  
                                      l6128 0220                                        l6080 0142  
                                      l6064 0129                                        l6056 0111  
                                      l6048 0104                                        l5450 0737  
                                      l5506 0E65                                        l5354 0F56  
                                      l5098 0D8B                                        l5186 03B6  
                                      l5258 0DB0                                        l5290 07B4  
                                      l5362 0C69                                        l5274 0D80  
                                      l5346 0440                                        l5338 042A  
                                      l5442 0547                                        l5434 051F  
                                      l5426 079D                                        l5522 057B  
                                      l5514 055F                                        l5530 058B  
                                      l6146 0277                                        l6138 024C  
                                      l6082 0148                                        l6090 015A  
                                      l6066 012C                                        l6058 0117  
                                      l6074 013B                                        l5460 0744  
                                      l5452 0739                                        l5356 0F5C  
                                      l5196 03C7                                        l5188 03C0  
                                      l5292 07BB                                        l5276 0D81  
                                      l5284 0C92                                        l5444 054A  
                                      l5436 0529                                        l5428 07A6  
                                      l5700 04FE                                        l5524 057F  
                                      l5516 0564                                        l5508 0553  
                                      l5540 05D8                                        l6148 027D  
                                      l6092 015B                                        l6084 014E  
                                      l6076 013C                                        l6068 0132  
                                      l5366 0C6E                                        l5470 074D  
                                      l5462 0746                                        l5454 073B  
                                      l5446 072E                                        l5358 0F5F  
                                      l5294 07BC                                        l5278 0D83  
                                      l5286 0C98                                        l5438 0535  
                                      l5702 0500                                        l5526 0580  
                                      l5518 0568                                        l5550 05F3  
                                      l5542 05DC                                        l5534 05C9  
                                      l5710 0EFD                                        l6086 0156  
                                      l6078 013D                                        l6094 015D  
                                      l5480 0D57                                        l5472 074F  
                                      l5464 0748                                        l5456 0740  
                                      l5448 0734                                        l5368 0C74  
                                      l5800 0669                                        l5288 0C0B  
                                      l5296 07BE                                        l5704 0504  
                                      l5528 0585                                        l5544 05E0  
                                      l5536 05D0                                        l5552 05F9  
                                      l5712 0F02                                        l6096 0162  
                                      l6088 0158                                        l5490 0CCB  
                                      l5482 0D5A                                        l5474 0750  
                                      l5466 0749                                        l5458 0742  
                                      l5730 0F48                                        l5722 0F3A  
                                      l5802 066E                                        l6362 03E5  
                                      l5298 07C3                                        l5706 0508  
                                      l5546 05EA                                        l5538 05D3  
                                      l5714 0F07                                        l6098 0167  
                                      l5492 0CD0                                        l5484 0D5B  
                                      l5476 0751                                        l5468 074B  
                                      l5740 0F1B                                        l5724 0F40  
                                      l5716 0F32                                        l5820 0686  
                                      l5812 0678                                        l6364 0321  
                                      l5548 05EE                                        l5708 0EFB  
                                      l5494 0CD1                                        l5478 0759  
                                      l5486 0C30                                        l5750 0F25  
                                      l5734 0F4A                                        l5718 0F38  
                                      l5830 0690                                        l5814 067E  
                                      l5806 0670                                        l6366 065E  
                                      l5680 07EB                                        l5488 0C2C  
                                      l5496 0E57                                        l5752 0F2B  
                                      l5744 0F1D                                        l5728 0F42  
                                      l5832 0696                                        l5824 0688  
                                      l5808 0676                                        l5760 0600  
                                      l4960 0FC8                                        l6368 05BA  
                                      l5840 0490                                        l5682 07EF  
                                      l5498 0E5C                                        l5674 0E44  
                                      l5746 0F23                                        l5738 0F16  
                                      l5826 068E                                        l5818 0680  
                                      l5762 0606                                        l4970 0C11  
                                      l4962 0DA2                                        l5690 04E3  
                                      l5850 04D2                                        l5842 0496  
                                      l5684 07F8                                        l5676 07DE  
                                      l5756 0F2D                                        l5836 0698  
                                      l5780 061E                                        l5772 0610  
                                      l4972 0C14                                        l4964 0E6F  
                                      l4956 0FB1                                        l5692 04F1  
                                      l5844 04B8                                        l5678 07EA  
                                      l5790 0628                                        l5774 0616  
                                      l5766 0608                                        l4966 0E74  
                                      l4958 0FB7                                        l4974 0C38  
                                      l4982 0D04                                        l4990 0D10  
                                      l5694 04F6                                        l5846 04BC  
                                      l5792 062E                                        l5784 0620  
                                      l5768 060E                                        l4968 0E82  
                                      l4976 0CFB                                        l4984 0D07  
                                      l5696 04FA                                        l5688 04D7  
                                      l5848 04CC                                        l5786 0626  
                                      l5778 0618                                        l4978 0CFE  
                                      l4994 0D16                                        l5698 04FC  
                                      l5796 0630                                        l4988 0D0D  
                                      l4996 0D19                                        l5980 0066  
                                      l5990 0079                                        l5982 0067  
                                      l5974 0060                                        l5992 007A  
                                      l5984 0068                                        l5976 0063  
                                      l5994 007B                                        l5986 006A  
                                      l5978 0065                                        l5996 007F  
                                      l5988 0071                                        l5998 0084  
                              __CFG_WDTE$ON 0000                                        u3000 0F55  
                                      u3001 0F54                                        u3010 0794  
                                      u3011 0793                                        u3020 07B1  
                                      u3100 057B                                        u3021 07B0  
                                      u3101 057A                                        _LATA 010C  
                                      u3030 0529                                        _LATB 010D  
                                      u3031 0528                                        _LATC 010E  
                                      u3040 0552                                        u3120 058B  
                                      _LATD 010F                                        u3041 0551  
                                      u3121 058A                                        u3105 0577  
                                      _LATE 0110                                        u3050 0D62  
                                      u3130 05D0                                        u4010 026F  
                                      u3051 0D61                                        u3115 0581  
                                      u3131 05CF                                        u4011 026E  
                                      u3220 07F8                                        u3300 0606  
                                      u3060 055C                                        u4020 0275  
                                      u3221 07F7                                        u3301 0605  
                                      u3061 055B                                        u4021 0274  
                                      u4005 024F                                        u3310 060E  
                                      u3230 04F6                                        u3150 05E0  
                                      u4030 027D                                        u3311 060D  
                                      u3231 04F5                                        u3151 05DF  
                                      u4031 027C                                        u3240 0F38  
                                      u3400 068E                                        u3320 0616  
                                      u3080 056C                                        u3160 05EA  
                                      u3241 0F37                                        u3401 068D  
                                      u3321 0615                                        u3081 056B  
                                      u3161 05E9                                        u3145 05D4  
                                      u3250 0F40                                        u3410 0696  
                                      u3330 061E                                        u3251 0F3F  
                                      u3411 0695                                        u3331 061D  
                                      u3075 0560                                        u3260 0F48  
                                      u3340 0626                                        u3180 05F9  
                                      u3261 0F47                                        u3341 0625  
                                      u3181 05F8                                        u3165 05E6  
                                      u3270 0F1B                                        u3350 062E  
                                      u3271 0F1A                                        u3351 062D  
                                      u4047 04DD                                        u3095 056D  
                                      u3175 05EF                                        u3280 0F23  
                                      u3360 066E                                        u3440 04D2  
                                      u3281 0F22                                        u3361 066D  
                                      u4057 0DF7                                        u3441 04D1  
                                      u3425 04A9                                        u3290 0F2B  
                                      u3370 0676                                        u3434 04B2  
                                      u4067 07EC                                        u3291 0F2A  
                                      u3371 0675                                        u3435 04B0  
                                      u3380 067E                                        u2900 0DF5  
                                      u3700 0092                                        u3381 067D  
                                      u2901 0DF4                                        u3701 0091  
                                      u3390 0686                                        u2910 06DB  
                                      u3710 0099                                        u3391 0685  
                                      u2911 06DA                                        u3711 0098  
                                      u2840 0FB7                                        u2920 06E2  
                                      u3800 00E6                                        u3720 00A1  
                                      u2841 0FB6                                        u2921 06E1  
                                      u3801 00E5                                        u3721 00A0  
                                      u2850 0E74                                        u2930 0DBD  
                                      u3810 00FB                                        u3730 00A7  
                                      u2851 0E73                                        u2931 0DBC  
                                      u3811 00FA                                        u3731 00A6  
                                      u2860 02FD                                        u3900 0162  
                                      u3820 010B                                        u3740 00AD  
                                      u2861 02FC                                        u3901 0161  
                                      u3821 010A                                        u3741 00AC  
                                      u2870 0348                                        u2950 0D80  
                                      u3910 0167                                        u3830 0111  
                                      u3750 00B2                                        u2871 0347  
                                      u2951 0D7F                                        u3911 0166  
                                      u3831 0110                                        u3751 00B1  
                                      u2880 03C0                                        u2960 07BB  
                                      u3840 0117                                        u3760 00C3  
                                      u3680 0084                                        u2881 03BF  
                                      u2961 07BA                                        u3841 0116  
                                      u3761 00C2                                        u3681 0083  
                                      u2890 0DF0                                        u2970 07C3  
                                      u3850 011D                                        u3770 00D4  
                                      u3690 008B                                        u2891 0DEF  
                                      u2971 07C2                                        u3851 011C  
                                      u3771 00D3                                        u3691 008A  
                                      u2980 07D6                                        u3940 01BB  
                                      u3860 0132                                        u3780 00DA  
                                      i1l61 0DA1                                        u2981 07D5  
                                      u3941 01BA                                        u3925 0178  
                                      u3861 0131                                        u3781 00D9  
                                      u2990 03FD                                        u3950 01C7  
                                      u3870 0142                                        u3790 00E0  
                                      u2991 03FC                                        u3951 01C6  
                                      u3935 0196                                        u3871 0141  
                                      u3791 00DF                                        u3960 01CC  
                                      u3880 0148                                        u3961 01CB  
                                      u3881 0147                                        u3890 014E  
                                      i1l91 0DEA                                        u3891 014D  
                                      u3980 022B                                        u3981 022A  
                                      u3975 01FB                                        u3995 0231  
                      ?_do_I2C_SEND_RESTART 0070                                        _PLLR 04D6  
                                      _TMR0 0015                                        _WPUB 020D  
                                      _WPUE 0210                     ??_wr2RegCompleteHandler 0047  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                     i1_i2c_driver_resetBus 0BED           __size_of_do_I2C_SEND_RESTART_READ 0009  
                 ?_do_I2C_SEND_RESTART_READ 0070                             ??_mssp_clearIRQ 003D  
                                      _main 0060                                        _mode 0031  
                 __size_of_do_I2C_SEND_STOP 0009                      __size_of_do_I2C_DO_ACK 0009  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                           ??i1_do_I2C_DO_ACK 0070  
                             __CFG_BOREN$ON 0000                       ?_do_I2C_SEND_ADR_READ 0070  
                  __size_of_i2c_writeNBytes 002A                                        start 0044  
                             _i2c_setBuffer 0E6D                               __CFG_MCLRE$ON 0000  
                           __end_of_i2c_ISR 0700            __size_of_rdBlkRegCompleteHandler 001E  
                  ??_do_I2C_DO_NACK_RESTART 003D                               i1_do_I2C_IDLE 0C41  
                             i1_do_I2C_RCEN 0CA4                     __end_of_TMR0_Initialize 0E6D  
                              _do_I2C_RESET 0D63                              i1returnReset@p 003E  
                             __CFG_PLLEN$ON 0000              ??_TMR0_DefaultInterruptHandler 0070  
                           ?_FVR_Initialize 0070              __size_of_OSCILLATOR_Initialize 000C  
               i2c_setAddressNACKCallback@p 0044                       ??i1_i2c_driver_TXData 0070  
             __end_of_OSCILLATOR_Initialize 0D63                         __size_of_IOCBF4_ISR 000F  
                     ?i1_i2c_driver_sendACK 0070                                       ?_main 0070  
                  __size_of_mssp_disableIRQ 0003                 i2c_driver_setI2cISR@handler 003D  
                           __end_of___lwdiv 0590                                       i1l201 0C23  
                                     i1l113 0CC2                                       i1l122 0C4F  
                                     i1l131 0CE4                                       i1l212 0FAE  
                                     i1l204 0BF0                                       i1l116 0C45  
                                     i1l140 0C5E                                       i1l125 0C54  
                                     i1l134 0CCA                                       i1l207 0BF2  
                                     i1l231 0E1F                                       i1l119 0C4A  
                                     i1l143 0C63                                       i1l128 0C59  
                                     i1l152 0787                                       i1l160 03A0  
                                     i1l137 0CAA                                       i1l146 0C68  
                                     i1l403 0042                                       i1l252 0E31  
                                     i1l404 0042                                       i1l501 0CDB  
                                     i1l157 0384                                       i1l173 0462  
                                     i1l318 0003                                       i1l174 048F  
                                     i1l511 0BEB                                       i1l600 0C04  
                                     i1l505 0DDA                             __end_of___lwmod 05FE  
                                     i1l267 0E43                                       i1l291 0EF8  
                                     i1l188 06CE                                       i1l542 0CB2  
                                     i1l198 0FFF                                       i1l279 0E0D  
                                     i1l623 0BED                                       i1l552 0BEC  
                                     i1l632 0BFB                                       i1l641 0C01  
                                     i1l546 0D56                                       i1l650 0C40  
                                     i1l394 0012                                       i1l635 0CBA  
                                     i1l396 001E                                       i1l629 0BF8  
                                     i1l638 0BFE                                       i1l911 072D  
                                     i1l399 0032                                       i1l920 028F  
                                     i1l656 0C27                                       i1l907 071D  
                                     i1l931 0295                                       i1l659 0C2B  
                                     i1l940 02D3                                       i1l924 0291  
                                     i1l693 0BF5                                       i1l597 0C07  
                                     i1l942 02E2                                       i1l934 0297  
                                     i1l926 0292                                       i1l918 028E  
                                     i1l936 0298                                       i1l929 0294  
                                     i1l946 02F1                                       i1l938 02C4  
                     ?i1_i2c_driver_restart 0070                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
                                     _TRISD 008F                                       _TRISE 0090  
                     ?i1_i2c_driver_startRX 0070           __size_of_TMR0_SetInterruptHandler 0006  
                 ?_TMR0_SetInterruptHandler 003D                               __CFG_PWRTE$ON 0000  
                     ??i1_i2c_driver_isNACK 0070                                 i2c_open@ret 0041  
                          __end_of_TMR0_ISR 0CB3                          __size_ofi1_i2c_ISR 002A  
                           __end_of_initRTC 0515                     __end_of_PIN_MANAGER_IOC 0CDC  
                            _WDT_Initialize 0C30                               _bcdMinuteDecr 0667  
                      _i2c_driver_getRXData 0C1A                ?i1_do_I2C_SEND_RESTART_WRITE 0070  
                ?_do_I2C_SEND_RESTART_WRITE 0070                               _bcdMinuteIncr 05FE  
                     ??_do_I2C_SEND_RESTART 003D                                       pclath 000A  
                _i2c_driver_busCollisionISR 007A                      ?_do_I2C_SEND_ADR_WRITE 0070  
                                     status 0003                                       wtemp0 007E  
                        i2c_driver_TXData@d 003D                   __size_of_i2c_driver_start 0003  
                            ?_i2c_setBuffer 003D                                ?_setCallBack 003D  
                   __end_ofi1_mssp_clearIRQ 0C08                               _fsmStateTable 1000  
                           __initialization 0046              __size_ofi1_do_I2C_SEND_RESTART 0005  
                                _i2c_poller 0DB0               __end_ofi1_do_I2C_SEND_RESTART 0C55  
                                _i2c_status 00A0                              ?i1_do_I2C_IDLE 0070  
                              __end_of_main 0282                              ?i1_do_I2C_RCEN 0070  
                __end_ofi1_do_I2C_SEND_STOP 0C5A                            __end_of_i2c_open 0445  
                      _i2c_driver_setI2cISR 0C98                 ?_INTERRUPT_InterruptManager 0070  
           __end_ofi1_rd2RegCompleteHandler 0E44                               setCallBack@cb 003D  
                            i1_do_I2C_RESET 0CBB                               _do_I2C_DO_ACK 0D1B  
                                    ??_main 0052                           ?_i2c_restartWrite 0046  
           __end_ofi1_wr2RegCompleteHandler 0E0E                                i2c_close@ret 003E  
                           _i2c_driver_open 0D7B                          ??_i2c_restartWrite 0047  
                           _i2c_driver_stop 0C14                      __end_of_WDT_Initialize 0C34  
                   ?_do_I2C_DO_ADDRESS_NACK 0070                      ?i1_i2c_driver_sendNACK 0070  
                            ?_bcdMinuteDecr 0070                                      _ADCON0 009D  
                                    _ADCON1 009E                       ?_i2c_driver_getRXData 0070  
                            ?_bcdMinuteIncr 0070                                      _ADRESH 009C  
                                    _EEADRH 0192                                      _ADRESL 009B  
                                    _EEADRL 0191                                      _EEDATH 0194  
                                    _EEDATL 0193                                      _EECON2 0196  
                                    _APFCON 011D             i1i2c_setDataCompleteCallback@cb 0075  
                                    _ANSELA 018C                                      _ANSELB 018D  
                                    _ANSELD 018F                                      _ANSELE 0190  
                                    _BORCON 0116                     ?i1_do_I2C_SEND_ADR_READ 0070  
                    ?i1_i2c_driver_resetBus 0070                                      i1l4030 0DD8  
                                    i1l4102 0CDC                                      i1l4110 0CC3  
                                    u201_20 0CD8                                      i1l4032 0D4B  
                                    i1l4104 0CDE                                      i1l4112 0CC5  
                                    i1l4120 0CA6                                      u201_21 0CD7  
                                    i1l4026 0DCC                                      i1l4034 0D51  
                                    i1l4106 0CE3                                      i1l4114 0CC9  
                                    i1l4122 0CA9                                      i1l4028 0DD3  
                                    i1l4118 0CA4                                      i1l4126 0C5A  
                                    i1l4128 0C5D                                      i1l4090 0CC1  
                                    i1l4260 0CD3                                      i1l4252 0C20  
                                    i1l4084 0CBB                                      i1l4262 0CD8  
                                    i1l4254 0CAB                                      i1l5310 0D94  
                                    i1l4086 0CBE                                      i1l4094 0C41  
                                    i1l4246 0C05                                      i1l3800 0725  
                                    i1l4256 0CAC                                      i1l3720 0DE1  
                                    i1l4088 0CC0                                      i1l4096 0C43  
                                    i1l3802 072C                                      i1l3810 029A  
                                    i1l4258 0CAF                                      i1l3722 0DE9  
                                    i1l5402 0DFC                                      i1l5410 0EE0  
                                    i1l4098 0C44                                      i1l3820 02CF  
                                    i1l3812 02B0                                      i1l3804 0282  
                                    i1l3724 0BF6                                      i1l5404 0E05  
                                    i1l5412 0EF7                                      i1l3822 02D8  
                                    i1l3814 02BA                                      i1l3806 0286  
                                    i1l3726 0BF9                                      i1l3718 0DDC  
                                    i1l5270 0FA1                                      i1l5406 0E0C  
                                    i1l3824 02DE                                      i1l3816 02C0  
                                    i1l5416 0002                                      i1l3728 0C28  
                                    i1l3920 0C02                                      i1l3840 0C4B  
                                    i1l5600 0392                                      i1l3826 02E7  
                                    i1l3818 02C9                                      i1l5266 0F8A  
                                    i1l5370 0BEF                                      i1l3922 0CB3  
                                    i1l3834 0C46                                      i1l3842 0C4E  
                                    i1l5602 039D                                      i1l3828 02ED  
                                    i1l5268 0F90                                      i1l5380 0E17  
                                    i1l3932 0C3D                                      i1l3836 0C49  
                                    i1l3852 0C55                                      i1l3860 0C62  
                                    i1l5604 039F                                      i1l5620 0460  
                                    i1l5612 0445                                      i1l3790 0706  
                                    i1l3934 0C24                                      i1l5374 0BF1  
                                    i1l5382 0E1E                                      i1l5390 0E30  
                                    i1l3926 0BFC                                      i1l3846 0C50  
                                    i1l3854 0C58                                      i1l5630 0468  
                                    i1l5614 044F                                      i1l3792 0712  
                                    i1l3936 0BF3                                      i1l3928 0BFF  
                                    i1l3848 0C53                                      i1l3864 0C64  
                                    i1l5560 0762                                      i1l5616 0453  
                                    i1l3794 0716                                      i1l5378 0E0E  
                                    i1l5386 0E20                                      i1l5394 0E32  
                                    i1l5650 06A2                                      i1l3858 0C5F  
                                    i1l3866 0C67                                      i1l5570 076A  
                                    i1l6370 0481                                      i1l5626 0464  
                                    i1l5618 045D                                      i1l3796 071B  
                                    i1l3788 0700                                      i1l5388 0E29  
                                    i1l5396 0E3B                                      i1l5652 06A5  
                                    i1l5644 069B                                      i1l5564 0766  
                                    i1l5556 075B                                      i1l6372 0376  
                                    i1l5636 046C                                      i1l3798 0720  
                                    i1l5398 0E42                                      i1l5646 069E  
                                    i1l5662 06AB                                      i1l6374 077F  
                                    i1l5558 075D                                      i1l5590 035C  
                                    i1l5582 0354                                      i1l6376 06C0  
                                    i1l5656 06A7                                      i1l6378 02A2  
                                    i1l5586 0358                                      i1l5578 034C  
                                    i1l5596 0360                                      i1l5860 0FE5  
                                    i1l5598 0386                                      i1l5862 0FEA  
                                    i1l5854 0FD6                                      i1l5856 0FD9  
                                    i1l5960 0016                                      i1l5858 0FDE  
                                    i1l5970 0037                                      i1l5962 001A  
                                    i1l5954 0006                                      i1l5972 003C  
                                    i1l5964 0022                                      i1l5956 000A  
                                    i1l5966 0027                                      i1l5958 000E  
                                    u320_20 039D                                      i1l5968 002C  
                                    u320_21 039C                                      u161_20 0DE1  
                                    u321_20 045D                                      u161_21 0DE0  
                                    u321_21 045C                                      u170_20 02BA  
                                    u170_21 02B9                                      u171_20 02C0  
                                    _FVRCON 0117                                      u171_21 02BF  
                                    u164_20 0706                                      u172_20 02C9  
                                    u164_21 0705                                      u172_21 02C8  
                                    u165_20 0710                                      u173_20 02CF  
                                    u165_21 070D                                      u173_21 02CE  
                                    u174_20 02D8                                      u174_21 02D7  
                                    u166_24 0712                                      u167_20 071B  
                                    u183_20 0DD3                                      u175_20 02DE  
                                    u319_20 0353                                      u167_21 071A  
                                    u183_21 0DD2                                      u175_21 02DD  
                                    u319_21 0352                                      u168_20 0725  
                                    u176_20 02E7                                      u184_20 0D51  
                                    u360_20 000E                                      u168_21 0724  
                                    u176_21 02E6                                      u184_21 0D50  
                                    u360_21 000D                                      u169_20 072C  
                                    u177_20 02ED                                      u345_20 0FDE  
                                    u361_20 0016                                      u169_21 072B  
                                    u177_21 02EC                                      u345_21 0FDD  
                                    u361_21 0015               ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                                    u346_20 0FE5                                      u362_20 001A  
                                    u346_21 0FE4                                      u362_21 0019  
                                    u363_20 0022                                      u363_21 0021  
                                    u364_20 0027                                      u364_21 0026  
                                    u365_20 002C                                      u365_21 002B  
                                    u294_20 0F90                                      u366_20 0037  
                                    u294_21 0F8F                                      u366_21 0036  
                                    u367_20 003C                                      u359_20 000A  
                                    u367_21 003B                                      u359_21 0009  
                        __size_of_i2c_close 001E                                      _OSCCON 0099  
                   i1_rd1RegCompleteHandler 0E20                      ??_do_I2C_SEND_ADR_READ 003D  
                                    _WDTCON 0097                                      _SSPADD 0212  
                                    _SSPBUF 0211                    rdBlkRegCompleteHandler@p 0046  
                                    _SSPMSK 0213                                   ??_i2c_ISR 0041  
                   i1_wr1RegCompleteHandler 0E0E                 ??i1_rdBlkRegCompleteHandler 0078  
                       _do_I2C_RX$intlevel0 03A5                       __size_ofi1_returnStop 0002  
               __end_of_do_I2C_DO_NACK_STOP 0D2D                           __end_ofi1_i2c_ISR 1000  
       __end_of_i2c_setDataCompleteCallback 0DB0                 _i2c_setDataCompleteCallback 0DA2  
                           _i2c_masterWrite 0C69                              __CFG_STVREN$ON 0000  
                          __end_of_intToBCD 04D7             __size_of_do_I2C_DO_NACK_RESTART 0009  
                     ?_i2c_driver_setI2cISR 003D                                   ??___lwdiv 0041  
                         ??_i2c_writeNBytes 004A                                   ??___lwmod 0041  
                    __end_ofi1_do_I2C_RESET 0CC3                             i1_i2c_setBuffer 0DDB  
                    ??i1_i2c_driver_sendACK 0070                            ?_TMR0_Initialize 0070  
                            ?_do_I2C_DO_ACK 0070                 __size_ofi1_i2c_restartWrite 0002  
                    ??i1_i2c_driver_restart 0070                      ??i1_i2c_driver_startRX 0070  
                                 ??_initRTC 0050              __end_of_do_I2C_DO_ADDRESS_NACK 0667  
               ?_i2c_setAddressNACKCallback 0042                             ?_WDT_Initialize 0070  
                              ?_returnReset 0046               _do_I2C_DO_NACK_STOP$intlevel0 0D28  
                  ADC_GetConversion@channel 0040                  i1rdBlkRegCompleteHandler@p 003E  
                     __end_of_TMR0_CallBack 0D57           __size_ofi1_do_I2C_DO_ADDRESS_NACK 002D  
                              ?_mssp_setIRQ 0070              __end_ofi1_do_I2C_SEND_ADR_READ 0CE5  
                         ??_mssp_disableIRQ 003D    TMR0_SetInterruptHandler@InterruptHandler 003D  
IOCBF4_SetInterruptHandler@InterruptHandler 003D                   ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                          ?_PIN_MANAGER_IOC 0070                                ??_IOCBF4_ISR 0070  
                         i1_do_I2C_TX_EMPTY 069B                           _SYSTEM_Initialize 0E44  
                   __end_of__initialization 005C                             ??_i2c_setBuffer 003F  
            _do_I2C_SEND_ADR_READ$intlevel0 0D8B                            _do_I2C_SEND_STOP 0D12  
                              i1_returnStop 0BEF                       i1_do_I2C_DO_NACK_STOP 0C5F  
                        __size_of_do_I2C_RX 0053                          __size_of_do_I2C_TX 005A  
                        ?i1_do_I2C_TX_EMPTY 0070                          ?_SYSTEM_Initialize 0070  
         _rdBlkRegCompleteHandler$intlevel0 0F6F                         _i2c_masterOperation 07B2  
                  __size_of_do_I2C_TX_EMPTY 0039                            ?i1_mssp_clearIRQ 0070  
                           ??i1_do_I2C_IDLE 0070                             ??i1_do_I2C_RCEN 0070  
                   _rdBlkRegCompleteHandler 0F6B                                 ?_i2c_poller 0070  
                            __pcstackCOMMON 0070                  ??i1_do_I2C_DO_NACK_RESTART 0070  
                       _do_I2C_TX$intlevel0 02F6                         ??i1_do_I2C_TX_EMPTY 0070  
                       ??_SYSTEM_Initialize 0040                                   ?_TMR0_ISR 0070  
                           ?i1_do_I2C_RESET 0070                     __end_of_i2c_driver_open 0D87  
                   __end_of_i2c_driver_stop 0C17                           __end_of_i2c_close 0F6B  
                              ?i1_do_I2C_RX 0070                                ?i1_do_I2C_TX 0070  
                        __end_of_IOCBF4_ISR 0DDB                         i1i2c_restartWrite@p 003E  
                        _i2c_driver_sendACK 0C34                   i1_rdBlkRegCompleteHandler 0EE0  
                      ?_i2c_masterOperation 0070              i1i2c_setDataCompleteCallback@p 0077  
                   ?i1_i2c_driver_getRXData 0070                              _OPTION_REGbits 0095  
              ??i1_do_I2C_SEND_RESTART_READ 0070                          _i2c_driver_restart 0C11  
                           ??_bcdMinuteDecr 003D                             ??_bcdMinuteIncr 003D  
                    __size_ofi1_setCallBack 0026                          _i2c_driver_startRX 0C17  
                    ??_i2c_driver_getRXData 003D                             i1setCallBack@cb 0070  
                  i1rd1RegCompleteHandler@p 003E                             i1_do_I2C_DO_ACK 0C5A  
               ?_IOCBF4_SetInterruptHandler 003D                         ?_i2c_driver_sendACK 0070  
                            setCallBack@idx 0041                   __end_ofi1_do_I2C_TX_EMPTY 06CF  
                    _do_I2C_DO_NACK_RESTART 0D2D                   __end_of_SYSTEM_Initialize 0E57  
                 ??i1_rd1RegCompleteHandler 0078                         ?_i2c_driver_restart 0070  
                                __pbssBANK0 0020                                  __pbssBANK1 00A0  
                 ??i1_wr1RegCompleteHandler 0078                         ?_i2c_driver_startRX 0070  
            __size_of_rd2RegCompleteHandler 0017                                   ?_i2c_open 0070  
             __end_of_rd2RegCompleteHandler 0EE0                               ??_bcdHourDecr 003D  
                             ??_bcdHourIncr 003D                             __CFG_VCAPEN$RA0 0000  
            __size_of_wr2RegCompleteHandler 0017            __size_ofi1_rd2RegCompleteHandler 0012  
             __end_of_wr2RegCompleteHandler 0E9B                     __end_of_i2c_masterWrite 0C6E  
                  i1wr1RegCompleteHandler@p 003E                            _i2c_driver_start 0C0E  
                     _rd1RegCompleteHandler 0EB2                     __end_ofi1_i2c_setBuffer 0DEB  
          __size_ofi1_wr2RegCompleteHandler 0012                       _do_I2C_IDLE$intlevel0 0CF2  
                     _wr1RegCompleteHandler 0E9B                __size_of_i2c_busCollisionISR 0004  
                          ??_FVR_Initialize 003D             _wr1RegCompleteHandler$intlevel0 0E9F  
           _rd1RegCompleteHandler$intlevel0 0EB6                                  __pmaintext 0060  
                             ??_do_I2C_IDLE 003D                        __size_of_setCallBack 0027  
                             ??_do_I2C_RCEN 003D                        ??_i2c_driver_sendACK 003D  
                    ??_i2c_driver_setI2cISR 003F            __end_of_TMR0_SetInterruptHandler 0C7A  
                        __size_of_secondISR 002E                                  ??_TMR0_ISR 0072  
                           ??_do_I2C_DO_ACK 003D                                  __pintentry 0004  
                      ??_i2c_driver_restart 003D                __size_of_i2c_driver_sendNACK 0004  
                      ??_i2c_driver_startRX 003D                         intToBCD@binaryInput 0045  
          ??_IOCBF4_DefaultInterruptHandler 0070             ?_IOCBF4_DefaultInterruptHandler 0070  
                       i2c_setBuffer@buffer 0040                __size_of_i2c_driver_resetBus 0001  
            __end_ofi1_i2c_driver_getRXData 0C02              ?_i2c_driver_setBusCollisionISR 003D  
                   __size_of_ADC_Initialize 0008                       ??_i2c_masterOperation 0044  
                         __end_of_do_I2C_RX 03F4                           __end_of_do_I2C_TX 034C  
                     i2c_readDataBlock@data 0048                    ?i1_do_I2C_SEND_ADR_WRITE 0070  
                        __size_of_updateRTC 001B                                     _OSCTUNE 0098  
                                _displayNum 1020                         __size_of_i2c_poller 000E  
                                   _SSPCON1 0215                                     _SSPCON2 0216  
                   ??_do_I2C_SEND_ADR_WRITE 003E         _do_I2C_SEND_RESTART_WRITE$intlevel0 0D04  
                                   _SSPSTAT 0214                 ??_do_I2C_SEND_RESTART_WRITE 003D  
                                 ?_intToBCD 0045                      ?i1_do_I2C_DO_NACK_STOP 0070  
                         _mssp_IRQisEnabled 0D36                                  ??_i2c_open 003F  
                                   _i2c_ISR 06CF                   ??_rdBlkRegCompleteHandler 0047  
                         _mssp_waitForEvent 0DEB                          ?_mssp_IRQisEnabled 0070  
                     __end_of_mssp_clearIRQ 0C0B                       _returnReset$intlevel0 0C84  
                     _do_I2C_RCEN$intlevel0 0D44                               i1_setCallBack 0F89  
                        ?_mssp_waitForEvent 0070            _do_I2C_DO_ADDRESS_NACK$intlevel0 0637  
               __end_ofi1_i2c_driver_TXData 0C41                         __end_of_bcdHourDecr 0F30  
                       __end_of_bcdHourIncr 0F4D         __size_of_i2c_setAddressNACKCallback 000E  
                    __size_ofi1_returnReset 0002                         ??_mssp_IRQisEnabled 003D  
                                   ___lwdiv 0553                                     ___lwmod 05C9  
                    __size_ofi1_mssp_setIRQ 0003                           ??_do_I2C_TX_EMPTY 003D  
                          ?_i2c_driver_open 0070                         ??_mssp_waitForEvent 003D  
                          ?_i2c_driver_stop 0070                      i2c_writeNBytes@address 004A  
               __end_ofi1_i2c_driver_isNACK 0CBB                     __end_ofi1_do_I2C_DO_ACK 0C5F  
                                   __ptext1 0EF9                                     __ptext2 0490  
                                   __ptext3 05C9                                     __ptext4 0553  
                                   __ptext5 04D7                                     __ptext6 0788  
                                   __ptext7 0515                                     __ptext8 0DBE  
                                   __ptext9 03F4                          i2c_readDataBlock@d 004D  
                       __end_of_do_I2C_IDLE 0CF7                         __end_of_do_I2C_RCEN 0D4B  
                                   _initRTC 04D7                       _OSCILLATOR_Initialize 0D57  
                   ??i1_i2c_driver_sendNACK 0070                 __end_of_do_I2C_SEND_RESTART 0D12  
                  ??_PIN_MANAGER_Initialize 003F                                     _rtcData 0034  
                                 _IOCBFbits 0396                               bcdHourDecr@hr 003D  
                    i2c_masterOperation@ret 0046                                   _IOCBNbits 0395  
                   ??i1_i2c_driver_resetBus 0070                                   _IOCBPbits 0394  
                        i1_do_I2C_SEND_STOP 0C55                  _do_I2C_SEND_STOP$intlevel0 0D16  
                __size_ofi1_do_I2C_TX_EMPTY 0034                    _do_I2C_SEND_RESTART_READ 0CF7  
                __size_of_SYSTEM_Initialize 0013                                     clrloop0 0C9F  
                 __end_of_mssp_IRQisEnabled 0D40                           __end_of_secondISR 072E  
                             bcdHourIncr@hr 003D                        __size_of_returnReset 0006  
                      end_of_initialization 005C                        __size_of_mssp_setIRQ 0003  
                                ??_intToBCD 0047                   __end_of_mssp_waitForEvent 0DFC  
                 __size_of_i2c_restartWrite 0006                         ?i1_do_I2C_SEND_STOP 0070  
                    ?_rd1RegCompleteHandler 0046                             _i2c_writeNBytes 0788  
                          ?_i2c_masterWrite 0070                      ?_wr1RegCompleteHandler 0046  
                            ?i1_setCallBack 0070                            ?i1_i2c_setBuffer 0070  
                         __end_of_updateRTC 0F14                   _do_I2C_SEND_RESTART_WRITE 0D00  
                     i1_do_I2C_SEND_RESTART 0C50            __end_ofi1_do_I2C_DO_ADDRESS_NACK 0788  
                        _button_press_count 0020             __end_ofi1_do_I2C_SEND_ADR_WRITE 0CCB  
                           _mssp_disableIRQ 0C0B                            ??_WDT_Initialize 003D  
                                 i1_i2c_ISR 0FD6                        ??i1_do_I2C_SEND_STOP 0070  
                                _returnStop 0C7A                    _TMR0_SetInterruptHandler 0C74  
                                 _PORTBbits 000D             __end_of_rdBlkRegCompleteHandler 0F89  
                  __end_of_do_I2C_SEND_STOP 0D1B          __end_ofi1_do_I2C_SEND_RESTART_READ 0C4B  
                i1_do_I2C_SEND_RESTART_READ 0C46                            __CFG_FOSC$INTOSC 0000  
                      __size_ofi1_do_I2C_RX 004B                        __size_ofi1_do_I2C_TX 0055  
      __size_of_i2c_setDataCompleteCallback 000E                               i1_returnReset 0BF1  
                               returnStop@p 0046                               i1_mssp_setIRQ 0C02  
        __size_ofi1_rdBlkRegCompleteHandler 0019                i2c_setDataCompleteCallback@p 0044  
                   i1_rd2RegCompleteHandler 0E32                                 _bcdHourDecr 0F14  
                               _bcdHourIncr 0F30                     i1_wr2RegCompleteHandler 0DFC  
             __size_of_do_I2C_SEND_ADR_READ 000D                            ??i1_do_I2C_RESET 0070  
                  _flag_time_display_update 0033                                ??_i2c_poller 0044  
                               _do_I2C_IDLE 0CEE                                 _do_I2C_RCEN 0D40  
                __end_ofi1_i2c_restartWrite 0004                               intToBCD@shift 004C  
      __end_of_i2c_driver_clearBusCollision 0BF6       __size_of_i2c_driver_clearBusCollision 0003  
              _i2c_driver_clearBusCollision 0BF3                          _mode_timeout_count 0030  
                         __size_of_TMR0_ISR 0008                                  ?i1_i2c_ISR 0070  
                            _ADC_Initialize 0CCB                            ?i1_do_I2C_DO_ACK 0070  
                    ?_OSCILLATOR_Initialize 0070               __size_ofi1_i2c_driver_sendACK 0004  
                         intToBCD@bcdResult 004A                __size_of_do_I2C_DO_NACK_STOP 0009  
                  __end_of_i2c_driver_start 0C11               __size_ofi1_i2c_driver_restart 0003  
                   ?_do_I2C_DO_NACK_RESTART 0070                         start_initialization 0046  
                        updateRTC@bcdMinute 004B                                   _i2c_close 0F4D  
             __size_ofi1_i2c_driver_startRX 0003                         _i2c_busCollisionISR 0C20  
                  __size_of_TMR0_Initialize 0016             __size_of_PIN_MANAGER_Initialize 002D  
                            ?i1_returnReset 003E                     __end_of_i2c_writeNBytes 07B2  
       __end_ofi1_do_I2C_SEND_RESTART_WRITE 0C50                 i1_do_I2C_SEND_RESTART_WRITE 0C4B  
                            ?i1_mssp_setIRQ 0070                              _flag_dot_blink 0032  
                __size_of_mssp_IRQisEnabled 000A                                setCallBack@p 003F  
                        __end_of_i2c_poller 0DBE                           _displayRefreshISR 0282  
                       _i2c_driver_sendNACK 0C38                             i2c_open@address 0040  
                   i2c_setBuffer@bufferSize 003D                  __size_of_mssp_waitForEvent 0011  
                    rd1RegCompleteHandler@p 0046                          ?_displayRefreshISR 0070  
                       _i2c_driver_resetBus 0BEE                             ??i1_setCallBack 0073  
                   _flag_button_press_count 0024                       __end_of_i2c_setBuffer 0E84  
                         __size_of_i2c_open 0051                    __size_of_PIN_MANAGER_IOC 0009  
     __end_ofi1_i2c_setDataCompleteCallback 0DA2      __size_ofi1_i2c_setDataCompleteCallback 000E  
             i1_i2c_setDataCompleteCallback 0D94                        ?_i2c_busCollisionISR 0070  
                   __end_of_mssp_disableIRQ 0C0E                            i1setCallBack@idx 0074  
                       ??_displayRefreshISR 0070                       __end_ofi1_do_I2C_IDLE 0C46  
                     __end_ofi1_do_I2C_RCEN 0CAB                   i1i2c_setBuffer@bufferSize 0070  
                    ?i1_do_I2C_SEND_RESTART 0070                      wr1RegCompleteHandler@p 0046  
                    __size_of_TMR0_CallBack 000C                      __end_of_ADC_Initialize 0CD3  
                      ?_i2c_driver_sendNACK 0070                               ?_do_I2C_RESET 0070  
                 _do_I2C_TX_EMPTY$intlevel0 0594                    __size_ofi1_mssp_clearIRQ 0003  
                               ?_returnStop 0046                        ?_i2c_driver_resetBus 0070  
                         _i2c_driver_TXData 0C8C              __end_of_do_I2C_DO_NACK_RESTART 0D36  
             ?_i2c_driver_clearBusCollision 0070                           _i2c_driver_i2cISR 002E  
                  i1_do_I2C_DO_ADDRESS_NACK 075B                          ?_i2c_driver_TXData 0070  
                               __pbssCOMMON 0078                                  ?_i2c_close 0070  
                                 ___latbits 0003                               __pcstackBANK0 003D  
         __size_ofi1_do_I2C_DO_NACK_RESTART 0005                    i1rd2RegCompleteHandler@p 003E  
                                 _do_I2C_RX 03A1                   ?i1_do_I2C_DO_NACK_RESTART 0070  
                                 _do_I2C_TX 02F2                   __end_of_displayRefreshISR 02F2  
                         _i2c_driver_isNACK 0CE5                       __end_of_bcdMinuteDecr 069B  
                   ??i1_do_I2C_DO_NACK_STOP 0070                       __end_of_bcdMinuteIncr 0633  
                          updateRTC@bcdHour 004D                   ??i1_rd2RegCompleteHandler 0078  
             __size_of_i2c_driver_getRXData 0003      __end_of_IOCBF4_DefaultInterruptHandler 0BEC  
   __size_of_IOCBF4_DefaultInterruptHandler 0001              _IOCBF4_DefaultInterruptHandler 0BEB  
                        ?_i2c_driver_isNACK 0070                         ??_i2c_driver_TXData 003D  
            __size_of_do_I2C_SEND_ADR_WRITE 000C                   ??i1_wr2RegCompleteHandler 0078  
             __end_of_do_I2C_SEND_ADR_WRITE 0D7B             ??_i2c_driver_setBusCollisionISR 003F  
                            i1setCallBack@p 0072                            _i2c_restartWrite 0C86  
                _i2c_restartWrite$intlevel0 0C8A                                    ?_i2c_ISR 0070  
           _do_I2C_SEND_ADR_WRITE$intlevel0 0D73            __size_ofi1_do_I2C_SEND_ADR_WRITE 0008  
                           _do_I2C_TX_EMPTY 0590                       _TMR0_InterruptHandler 0078  
                         __size_of_intToBCD 0047                               ??_setCallBack 0040  
                                 __pnvBANK0 0057                    i1wr2RegCompleteHandler@p 003E  
                     _rd2RegCompleteHandler 0EC9                         ??_i2c_driver_isNACK 003D  
                     ??_i2c_busCollisionISR 0070                       __end_of_fsmStateTable 1020  
                          ___lwdiv@dividend 003F                      _PIN_MANAGER_Initialize 072E  
                     _wr2RegCompleteHandler 0E84                 __size_of_i2c_driver_sendACK 0004  
                            ??_do_I2C_RESET 003D                                   __ptext100 0002  
                                 __ptext101 0EE0                                   __ptext110 0DDB  
                                 __ptext102 0E32                                   __ptext111 0BF9  
                                 __ptext103 0E20                                   __ptext120 0CD3  
                                 __ptext112 0BF6                                   __ptext104 0E0E  
                                 __ptext121 0DCC                                   __ptext113 0C24  
                                 __ptext105 0BF1                                   __ptext122 0BEB  
                                 __ptext114 0C20                                   __ptext106 0BEF  
                                 __ptext123 0700                                   __ptext115 0BF3  
                                 __ptext107 0DFC                                   __ptext116 0CAB  
                                 __ptext108 0D94                       ??_i2c_driver_sendNACK 003D  
                                 __ptext117 0D4B                                   __ptext109 0F89  
                                 __ptext118 0BEC                                   __ptext119 0282  
               __end_of_i2c_masterOperation 07DC                                    ?___lwdiv 003D  
                  ??_do_I2C_DO_ADDRESS_NACK 003D                                    ?___lwmod 003D  
                           ?_ADC_Initialize 0070               __size_of_i2c_driver_setI2cISR 0006  
               __size_of_i2c_driver_restart 0003                        i2c_readDataBlock@len 0049  
                 __end_of_i2c_driver_TXData 0C92                        i2c_readDataBlock@reg 0047  
                     __end_of_do_I2C_DO_ACK 0D24                       ??_i2c_driver_resetBus 003D  
               __size_of_i2c_driver_startRX 0003                                 ??i1_i2c_ISR 0073  
              ??_INTERRUPT_InterruptManager 0076                  ??_do_I2C_SEND_RESTART_READ 003D  
                  ??i1_do_I2C_SEND_ADR_READ 0070                                    ?_initRTC 0070  
                           ??i1_returnReset 0078                           _i2c_readDataBlock 0515  
                 __end_of_i2c_driver_isNACK 0CEE                    ?i1_rd1RegCompleteHandler 003E  
        __size_of_do_I2C_SEND_RESTART_WRITE 0009                             ??i1_mssp_setIRQ 0070  
            __size_ofi1_i2c_driver_sendNACK 0004               __end_ofi1_i2c_driver_sendNACK 0C2C  
                  ?i1_wr1RegCompleteHandler 003E                                  ?_do_I2C_RX 0070  
                                ?_do_I2C_TX 0070                          ?_i2c_readDataBlock 0047  
                          ___lwdiv@quotient 0043                            ?_i2c_writeNBytes 0047  
            __size_ofi1_i2c_driver_resetBus 0001                               _TMR0_CallBack 0D4B  
             __end_ofi1_i2c_driver_resetBus 0BEE                     ??_rd1RegCompleteHandler 0047  
                         _i2c_ISR$intlevel0 06D3                     ??_wr1RegCompleteHandler 0047  
                         ??_TMR0_Initialize 003F                         ??_i2c_readDataBlock 004B  
                                  _LATAbits 010C                                   _secondISR 0700  
                                  _LATCbits 010E                                    _LATEbits 0110  
                       __size_of_returnStop 0006                                   clear_ram0 0C9E  
                                  _PIE1bits 0091                                    _PIE2bits 0092  
       __size_of_INTERRUPT_InterruptManager 0040                  ??_TMR0_SetInterruptHandler 003F  
                                  _PIR1bits 0011                                    _PIR2bits 0012  
                          ?_mssp_disableIRQ 0070                                    _TMR0_ISR 0CAB  
              ?_i2c_setDataCompleteCallback 0042              ?i1_i2c_setDataCompleteCallback 0075  
                               _displayBuff 0028                         __end_of_setCallBack 0FD6  
                         ??_PIN_MANAGER_IOC 0070                                   _updateRTC 0EF9  
                                _ADCON0bits 009D                   __end_of_i2c_readDataBlock 0553  
              __size_ofi1_i2c_driver_TXData 0005                           i1_i2c_driver_stop 0BF9  
              i2c_setAddressNACKCallback@cb 0042                           ?_do_I2C_SEND_STOP 0070  
               ?i1_do_I2C_SEND_RESTART_READ 0070                     __size_of_FVR_Initialize 0004  
                        ?i1_i2c_driver_stop 0070                                 ??_i2c_close 003D  
                             ??_returnReset 0047                          ??_do_I2C_SEND_STOP 003D  
                    __size_of_mssp_clearIRQ 0003                    __size_of_i2c_driver_open 000C  
                         ??i1_mssp_clearIRQ 0070                ??_i2c_setAddressNACKCallback 0045  
                  __size_of_i2c_driver_stop 0003                  __size_of_displayRefreshISR 0070  
         __end_of_do_I2C_SEND_RESTART_WRITE 0D09                __size_ofi1_i2c_driver_isNACK 0008  
                             ??_mssp_setIRQ 003D              ??_i2c_driver_clearBusCollision 0070  
                            ?_TMR0_CallBack 0070                     __end_of_do_I2C_TX_EMPTY 05C9  
                  ?_rdBlkRegCompleteHandler 0046                         ??i1_i2c_driver_stop 0070  
              __size_of_do_I2C_SEND_RESTART 0009                     _do_I2C_DO_ACK$intlevel0 0D1F  
                                  _i2c_open 03F4                               ?i1_returnStop 003E  
                              ?_bcdHourDecr 0070                      ?_rd2RegCompleteHandler 0046  
                                ?_secondISR 0070                                ?_bcdHourIncr 0070  
                       _do_I2C_DO_NACK_STOP 0D24                                  _EECON1bits 0195  
                          __size_of_i2c_ISR 0031                      ?_wr2RegCompleteHandler 0046  
           _wr2RegCompleteHandler$intlevel0 0E88             _rd2RegCompleteHandler$intlevel0 0ECD  
     __end_of_i2c_driver_setBusCollisionISR 0C98      __size_of_i2c_driver_setBusCollisionISR 0006  
             _i2c_driver_setBusCollisionISR 0C92                           _ADC_GetConversion 07DC  
                       i2c_writeNBytes@data 0047                                ?_do_I2C_IDLE 0070  
                  ??i1_i2c_driver_getRXData 0070                                ?_do_I2C_RCEN 0070  
                   ??_OSCILLATOR_Initialize 003D                          ?_ADC_GetConversion 003D  
                  __size_of_i2c_masterWrite 0005                  __size_of_i2c_driver_TXData 0006  
           __size_of_do_I2C_DO_ADDRESS_NACK 0034                   __end_ofi1_i2c_driver_stop 0BFC  
                        __end_of_displayNum 102A                       i1i2c_setBuffer@buffer 0073  
                          __size_of___lwdiv 003D                                  ?_updateRTC 004B  
                          __size_of___lwmod 0035               ??_i2c_setDataCompleteCallback 0045  
           __end_ofi1_rd1RegCompleteHandler 0E32                    __size_ofi1_i2c_setBuffer 0010  
                             ??i1_do_I2C_RX 0070                               ??i1_do_I2C_TX 0070  
        _do_I2C_SEND_RESTART_READ$intlevel0 0CFB                 __size_ofi1_do_I2C_SEND_STOP 0005  
                                  _bcd_temp 002C             __end_ofi1_wr1RegCompleteHandler 0E20  
                      ?_do_I2C_DO_NACK_STOP 0070                __end_of_do_I2C_SEND_ADR_READ 0D94  
                       ??_ADC_GetConversion 003F             __size_ofi1_do_I2C_SEND_ADR_READ 0009  
                __size_of_i2c_driver_isNACK 0009                     _IOCBF4_InterruptHandler 0057  
                         ?_i2c_driver_start 0070                            __size_of_initRTC 003E  
                        i1_i2c_restartWrite 0002                             ___lwdiv@divisor 003D  
                               ??_do_I2C_RX 003D                                 ??_do_I2C_TX 003E  
                           ___lwdiv@counter 0042                          ??_i2c_driver_start 003D  
                                  __ptext10 0C98                                    __ptext11 0C92  
                                  __ptext20 02F2                                    __ptext12 0D7B  
                                  __ptext21 0633                                    __ptext13 0C69  
                                  __ptext30 0D00                                    __ptext22 0D2D  
                                  __ptext14 07B2                                    __ptext31 0CF7  
                                  __ptext23 0D24                                    __ptext15 0D36  
                                  __ptext40 0BEE                                    __ptext32 0CEE  
                                  __ptext24 0D1B                                    __ptext16 0DB0  
                                  __ptext41 0C17                                    __ptext33 0D63  
                                  __ptext25 0D40                                    __ptext17 0DEB  
                                  __ptext50 0DA2                                    __ptext42 0F6B  
                                  __ptext34 0590                                    __ptext26 0D6F  
                                  __ptext18 06CF                                    __ptext51 0FAF  
                                  __ptext43 0EC9                                    __ptext35 0C1D  
                                  __ptext27 0D87                                    __ptext19 03A1  
                                  __ptext60 05FE                                    __ptext52 0E6D  
                                  __ptext44 0EB2                                    __ptext36 0CE5  
                                  __ptext28 0D12                                    __ptext61 0667  
                                  __ptext53 0C14                                    __ptext45 0E9B  
                                  __ptext37 0C8C                                    __ptext29 0D09  
                                  __ptext70 0D57                                    __ptext62 0F30  
                                  __ptext54 0C11                                    __ptext46 0C86  
                                  __ptext38 0C1A                                    __ptext71 0C2C  
                                  __ptext63 0F14                                    __ptext55 0C34  
                                  __ptext47 0C80                                    __ptext39 0C38  
                                  __ptext80 0C64                                    __ptext72 0CCB  
                                  __ptext64 0E44                                    __ptext56 0C0E  
                                  __ptext48 0C7A                                    __ptext81 0C5F  
                                  __ptext73 07DC                                    __ptext65 0C30  
                                  __ptext57 0F4D                                    __ptext49 0E84  
                                  __ptext90 0C41                                    __ptext82 0C5A  
                                  __ptext66 0E57                                    __ptext58 0C0B  
                                  __ptext91 0CBB                                    __ptext83 0CA4  
                                  __ptext75 0FD6                                    __ptext67 0C74  
                                  __ptext59 0C08                                    __ptext92 069B  
                                  __ptext84 0CC3                                    __ptext76 0C05  
                                  __ptext68 072E                                    __ptext93 0C02  
                                  __ptext85 0CDC                                    __ptext77 0445  
                                  __ptext69 0C6E                                    __ptext94 0CB3  
                                  __ptext86 0C55                                    __ptext78 034C  
                                  __ptext95 0C3C                                    __ptext87 0C50  
                                  __ptext79 075B                                    __ptext96 0BFF  
                                  __ptext88 0C4B                                    __ptext97 0C28  
                                  __ptext89 0C46                                    __ptext98 0BED  
                                  __ptext99 0BFC                ??_IOCBF4_SetInterruptHandler 003F  
                      __end_of_do_I2C_RESET 0D6F                                  _IOCBF4_ISR 0DCC  
                            ??i1_returnStop 0078                                    _intToBCD 0490  
                   i1_do_I2C_SEND_ADR_WRITE 0CC3                         ?i1_i2c_restartWrite 003E  
              __end_ofi1_i2c_driver_sendACK 0C28                         __end_of_returnReset 0C86  
                             __size_of_main 0222                         __end_of_mssp_setIRQ 0C20  
              __end_ofi1_i2c_driver_restart 0BF9                        i1i2c_driver_TXData@d 0070  
      __end_of_TMR0_DefaultInterruptHandler 0BED       __size_of_TMR0_DefaultInterruptHandler 0001  
              _TMR0_DefaultInterruptHandler 0BEC                   __end_of_ADC_GetConversion 0800  
              __end_ofi1_i2c_driver_startRX 0BFF                    i2c_readDataBlock@address 004C  
                               _setCallBack 0FAF                     ??i1_do_I2C_SEND_RESTART 0070  
                             _mssp_clearIRQ 0C08                     i2c_masterOperation@read 0045  
      __size_ofi1_do_I2C_SEND_RESTART_WRITE 0005                                    int$flags 007E  
                ??i1_do_I2C_DO_ADDRESS_NACK 0070            __end_ofi1_do_I2C_DO_NACK_RESTART 0C69  
        __end_of_INTERRUPT_InterruptManager 0044                  _INTERRUPT_InterruptManager 0004  
                      ??i1_i2c_restartWrite 0078            __end_of_do_I2C_SEND_RESTART_READ 0D00  
                              ??_returnStop 0047                    __end_of_i2c_restartWrite 0C8C  
                     ??_do_I2C_DO_NACK_STOP 003D                  __size_of_i2c_readDataBlock 003E  
                  mssp_waitForEvent@timeout 003D         __size_of_IOCBF4_SetInterruptHandler 0006  
      i2c_driver_setBusCollisionISR@handler 003D                                  _INTCONbits 000B  
                           ??_TMR0_CallBack 0072                                  _FVRCONbits 0117  
                        i2c_writeNBytes@len 0048                         __end_ofi1_do_I2C_RX 0490  
                       __end_ofi1_do_I2C_TX 03A1                    __size_ofi1_do_I2C_DO_ACK 0005  
                          ?_do_I2C_TX_EMPTY 0070                     __size_of_WDT_Initialize 0004  
                    _do_I2C_DO_ADDRESS_NACK 0633              __size_ofi1_do_I2C_DO_NACK_STOP 0005  
                                  intlevel1 0000               __end_ofi1_do_I2C_DO_NACK_STOP 0C64  
                    _do_I2C_RESET$intlevel0 0D67                      rd2RegCompleteHandler@p 0046  
                         ??_i2c_driver_open 003D                            ___lwmod@dividend 003F  
                         ??_i2c_driver_stop 003D                     ?_PIN_MANAGER_Initialize 0070  
                               ??_secondISR 0070                           i2c_restartWrite@p 0046  
                    i1_do_I2C_SEND_ADR_READ 0CDC                           __CFG_CLKOUTEN$OFF 0000  
                ?i1_rdBlkRegCompleteHandler 003E                          __end_of_returnStop 0C80  
                            ?_mssp_clearIRQ 0070                       __end_ofi1_setCallBack 0FAF  
                          ??_ADC_Initialize 003D         __size_ofi1_do_I2C_SEND_RESTART_READ 0005  
             ?_TMR0_DefaultInterruptHandler 0070                __end_of_i2c_driver_getRXData 0C1D  
           __size_ofi1_i2c_driver_getRXData 0003                      wr2RegCompleteHandler@p 0046  
                           bcdMinuteDecr@mn 003D                  __size_ofi1_i2c_driver_stop 0003  
                               ??_updateRTC 004C                          displayRefreshISR@i 007C  
                             __pstringtext1 1000                               __pstringtext2 1020  
                           bcdMinuteIncr@mn 003D                              _FVR_Initialize 0C2C  
                   __size_ofi1_do_I2C_RESET 0008                                  _OPTION_REG 0095  
                           ___lwmod@divisor 003D                             _TMR0_Initialize 0E57  
                         ??_i2c_masterWrite 0047          __end_of_i2c_setAddressNACKCallback 0DCC  
                _i2c_setAddressNACKCallback 0DBE                             ___lwmod@counter 0042  
                    __size_of_i2c_setBuffer 0017                           ??i1_i2c_setBuffer 0072  
                               _returnReset 0C80            _do_I2C_DO_NACK_RESTART$intlevel0 0D31  
                               _SSPCON1bits 0215                                 _SSPCON2bits 0216  
                               _mssp_setIRQ 0C1D                   ??i1_do_I2C_SEND_ADR_WRITE 0070  
              __end_of_i2c_driver_setI2cISR 0C9E                      __size_ofi1_do_I2C_IDLE 0005  
                    __size_ofi1_do_I2C_RCEN 0007                                 ?_IOCBF4_ISR 0070  
            __end_of_PIN_MANAGER_Initialize 075B                 __end_of_i2c_busCollisionISR 0C24  
            __size_of_rd1RegCompleteHandler 0017               __end_of_rd1RegCompleteHandler 0EC9  
                       i1_i2c_driver_TXData 0C3C                             _PIN_MANAGER_IOC 0CD3  
            __size_of_wr1RegCompleteHandler 0017            __size_ofi1_rd1RegCompleteHandler 0012  
             __end_of_wr1RegCompleteHandler 0EB2                       _do_I2C_SEND_ADR_WRITE 0D6F  
               __end_of_i2c_driver_sendNACK 0C3C                  __size_of_ADC_GetConversion 0024  
                      _do_I2C_SEND_ADR_READ 0D87           __end_ofi1_rdBlkRegCompleteHandler 0EF9  
          __size_ofi1_wr1RegCompleteHandler 0012                  __end_of_i2c_driver_sendACK 0C38  
                      __size_of_bcdHourDecr 001C                        __size_of_bcdHourIncr 001D  
               __end_of_i2c_driver_resetBus 0BEF  

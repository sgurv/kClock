

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul  8 18:20:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,delta=2
    89                           	psect	intentry,global,class=CODE,delta=2
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	text79,local,class=CODE,merge=1,delta=2
    94                           	psect	text80,local,class=CODE,merge=1,delta=2
    95                           	psect	text81,local,class=CODE,merge=1,delta=2
    96                           	psect	text82,local,class=CODE,merge=1,delta=2
    97                           	psect	text83,local,class=CODE,merge=1,delta=2
    98                           	psect	text84,local,class=CODE,merge=1,delta=2
    99                           	psect	text85,local,class=CODE,merge=1,delta=2
   100                           	psect	text86,local,class=CODE,merge=1,delta=2
   101                           	psect	text87,local,class=CODE,merge=1,delta=2
   102                           	psect	text88,local,class=CODE,merge=1,delta=2
   103                           	psect	text89,local,class=CODE,merge=1,delta=2
   104                           	psect	text90,local,class=CODE,merge=1,delta=2
   105                           	psect	text91,local,class=CODE,merge=1,delta=2
   106                           	psect	text92,local,class=CODE,merge=1,delta=2
   107                           	psect	text93,local,class=CODE,merge=1,delta=2
   108                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text101,local,class=CODE,merge=1,delta=2
   116                           	psect	text102,local,class=CODE,merge=1,delta=2
   117                           	psect	text103,local,class=CODE,merge=1,delta=2
   118                           	psect	text104,local,class=CODE,merge=1,delta=2
   119                           	psect	text105,local,class=CODE,merge=1,delta=2
   120                           	psect	text106,local,class=CODE,merge=1,delta=2
   121                           	psect	text107,local,class=CODE,merge=1,delta=2
   122                           	psect	text108,local,class=CODE,merge=1,delta=2
   123                           	psect	text109,local,class=CODE,merge=1,delta=2
   124                           	psect	text110,local,class=CODE,merge=1,delta=2
   125                           	psect	text111,local,class=CODE,merge=1,delta=2
   126                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	text115,local,class=CODE,merge=1,delta=2
   130                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text117,local,class=CODE,merge=1,delta=2
   132                           	psect	text118,local,class=CODE,merge=1,delta=2
   133                           	psect	text119,local,class=CODE,merge=1,delta=2
   134                           	psect	text120,local,class=CODE,merge=1,delta=2
   135                           	psect	text121,local,class=CODE,merge=1,delta=2
   136                           	psect	text122,local,class=CODE,merge=1,delta=2
   137                           	psect	text123,local,class=CODE,merge=1,delta=2
   138                           	psect	text124,local,class=CODE,merge=1,delta=2
   139                           	dabs	1,0x7E,2
   140  0000                     
   141                           ; Version 2.10
   142                           ; Generated 31/07/2019 GMT
   143                           ; 
   144                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution.
   158                           ; 
   159                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   160                           ;        software without specific prior written permission.
   161                           ; 
   162                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   163                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   164                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   165                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   166                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   167                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   168                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   169                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   170                           ; 
   171                           ; 
   172                           ; Code-generator required, PIC16F1939 Definitions
   173                           ; 
   174                           ; SFR Addresses
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0110                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0113                     	;# 
   233  0114                     	;# 
   234  0115                     	;# 
   235  0116                     	;# 
   236  0117                     	;# 
   237  0118                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011B                     	;# 
   241  011D                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  018F                     	;# 
   245  0190                     	;# 
   246  0191                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0193                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0199                     	;# 
   256  019A                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019C                     	;# 
   262  019C                     	;# 
   263  019D                     	;# 
   264  019E                     	;# 
   265  019F                     	;# 
   266  020D                     	;# 
   267  0210                     	;# 
   268  0211                     	;# 
   269  0212                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0291                     	;# 
   277  0291                     	;# 
   278  0292                     	;# 
   279  0293                     	;# 
   280  0294                     	;# 
   281  0295                     	;# 
   282  0295                     	;# 
   283  0296                     	;# 
   284  0298                     	;# 
   285  0298                     	;# 
   286  0299                     	;# 
   287  029A                     	;# 
   288  029B                     	;# 
   289  029C                     	;# 
   290  029C                     	;# 
   291  029D                     	;# 
   292  029E                     	;# 
   293  029F                     	;# 
   294  0311                     	;# 
   295  0311                     	;# 
   296  0312                     	;# 
   297  0313                     	;# 
   298  0314                     	;# 
   299  0315                     	;# 
   300  0315                     	;# 
   301  0316                     	;# 
   302  0318                     	;# 
   303  0318                     	;# 
   304  0319                     	;# 
   305  031A                     	;# 
   306  031C                     	;# 
   307  031C                     	;# 
   308  031D                     	;# 
   309  031E                     	;# 
   310  0394                     	;# 
   311  0395                     	;# 
   312  0396                     	;# 
   313  0415                     	;# 
   314  0416                     	;# 
   315  0417                     	;# 
   316  041C                     	;# 
   317  041D                     	;# 
   318  041E                     	;# 
   319  0791                     	;# 
   320  0792                     	;# 
   321  0793                     	;# 
   322  0794                     	;# 
   323  0795                     	;# 
   324  0798                     	;# 
   325  0799                     	;# 
   326  079A                     	;# 
   327  07A0                     	;# 
   328  07A1                     	;# 
   329  07A2                     	;# 
   330  07A3                     	;# 
   331  07A4                     	;# 
   332  07A5                     	;# 
   333  07A6                     	;# 
   334  07A7                     	;# 
   335  07A8                     	;# 
   336  07A9                     	;# 
   337  07AA                     	;# 
   338  07AB                     	;# 
   339  0FE4                     	;# 
   340  0FE5                     	;# 
   341  0FE6                     	;# 
   342  0FE7                     	;# 
   343  0FE8                     	;# 
   344  0FE9                     	;# 
   345  0FEA                     	;# 
   346  0FEB                     	;# 
   347  0FED                     	;# 
   348  0FEE                     	;# 
   349  0FEF                     	;# 
   350  0000                     	;# 
   351  0001                     	;# 
   352  0002                     	;# 
   353  0003                     	;# 
   354  0004                     	;# 
   355  0005                     	;# 
   356  0006                     	;# 
   357  0007                     	;# 
   358  0008                     	;# 
   359  0009                     	;# 
   360  000A                     	;# 
   361  000B                     	;# 
   362  000C                     	;# 
   363  000D                     	;# 
   364  000E                     	;# 
   365  000F                     	;# 
   366  0010                     	;# 
   367  0011                     	;# 
   368  0012                     	;# 
   369  0013                     	;# 
   370  0015                     	;# 
   371  0016                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001C                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  008F                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  010F                     	;# 
   404  0110                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011A                     	;# 
   415  011B                     	;# 
   416  011D                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  018F                     	;# 
   420  0190                     	;# 
   421  0191                     	;# 
   422  0191                     	;# 
   423  0192                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0194                     	;# 
   428  0195                     	;# 
   429  0196                     	;# 
   430  0199                     	;# 
   431  019A                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019C                     	;# 
   438  019D                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  020D                     	;# 
   442  0210                     	;# 
   443  0211                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0216                     	;# 
   450  0217                     	;# 
   451  0291                     	;# 
   452  0291                     	;# 
   453  0292                     	;# 
   454  0293                     	;# 
   455  0294                     	;# 
   456  0295                     	;# 
   457  0295                     	;# 
   458  0296                     	;# 
   459  0298                     	;# 
   460  0298                     	;# 
   461  0299                     	;# 
   462  029A                     	;# 
   463  029B                     	;# 
   464  029C                     	;# 
   465  029C                     	;# 
   466  029D                     	;# 
   467  029E                     	;# 
   468  029F                     	;# 
   469  0311                     	;# 
   470  0311                     	;# 
   471  0312                     	;# 
   472  0313                     	;# 
   473  0314                     	;# 
   474  0315                     	;# 
   475  0315                     	;# 
   476  0316                     	;# 
   477  0318                     	;# 
   478  0318                     	;# 
   479  0319                     	;# 
   480  031A                     	;# 
   481  031C                     	;# 
   482  031C                     	;# 
   483  031D                     	;# 
   484  031E                     	;# 
   485  0394                     	;# 
   486  0395                     	;# 
   487  0396                     	;# 
   488  0415                     	;# 
   489  0416                     	;# 
   490  0417                     	;# 
   491  041C                     	;# 
   492  041D                     	;# 
   493  041E                     	;# 
   494  0791                     	;# 
   495  0792                     	;# 
   496  0793                     	;# 
   497  0794                     	;# 
   498  0795                     	;# 
   499  0798                     	;# 
   500  0799                     	;# 
   501  079A                     	;# 
   502  07A0                     	;# 
   503  07A1                     	;# 
   504  07A2                     	;# 
   505  07A3                     	;# 
   506  07A4                     	;# 
   507  07A5                     	;# 
   508  07A6                     	;# 
   509  07A7                     	;# 
   510  07A8                     	;# 
   511  07A9                     	;# 
   512  07AA                     	;# 
   513  07AB                     	;# 
   514  0FE4                     	;# 
   515  0FE5                     	;# 
   516  0FE6                     	;# 
   517  0FE7                     	;# 
   518  0FE8                     	;# 
   519  0FE9                     	;# 
   520  0FEA                     	;# 
   521  0FEB                     	;# 
   522  0FED                     	;# 
   523  0FEE                     	;# 
   524  0FEF                     	;# 
   525  0000                     	;# 
   526  0001                     	;# 
   527  0002                     	;# 
   528  0003                     	;# 
   529  0004                     	;# 
   530  0005                     	;# 
   531  0006                     	;# 
   532  0007                     	;# 
   533  0008                     	;# 
   534  0009                     	;# 
   535  000A                     	;# 
   536  000B                     	;# 
   537  000C                     	;# 
   538  000D                     	;# 
   539  000E                     	;# 
   540  000F                     	;# 
   541  0010                     	;# 
   542  0011                     	;# 
   543  0012                     	;# 
   544  0013                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  008C                     	;# 
   557  008D                     	;# 
   558  008E                     	;# 
   559  008F                     	;# 
   560  0090                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0093                     	;# 
   564  0095                     	;# 
   565  0096                     	;# 
   566  0097                     	;# 
   567  0098                     	;# 
   568  0099                     	;# 
   569  009A                     	;# 
   570  009B                     	;# 
   571  009B                     	;# 
   572  009C                     	;# 
   573  009D                     	;# 
   574  009E                     	;# 
   575  010C                     	;# 
   576  010D                     	;# 
   577  010E                     	;# 
   578  010F                     	;# 
   579  0110                     	;# 
   580  0111                     	;# 
   581  0112                     	;# 
   582  0113                     	;# 
   583  0114                     	;# 
   584  0115                     	;# 
   585  0116                     	;# 
   586  0117                     	;# 
   587  0118                     	;# 
   588  0119                     	;# 
   589  011A                     	;# 
   590  011B                     	;# 
   591  011D                     	;# 
   592  018C                     	;# 
   593  018D                     	;# 
   594  018F                     	;# 
   595  0190                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0193                     	;# 
   602  0194                     	;# 
   603  0195                     	;# 
   604  0196                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019D                     	;# 
   614  019E                     	;# 
   615  019F                     	;# 
   616  020D                     	;# 
   617  0210                     	;# 
   618  0211                     	;# 
   619  0212                     	;# 
   620  0213                     	;# 
   621  0214                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0291                     	;# 
   627  0291                     	;# 
   628  0292                     	;# 
   629  0293                     	;# 
   630  0294                     	;# 
   631  0295                     	;# 
   632  0295                     	;# 
   633  0296                     	;# 
   634  0298                     	;# 
   635  0298                     	;# 
   636  0299                     	;# 
   637  029A                     	;# 
   638  029B                     	;# 
   639  029C                     	;# 
   640  029C                     	;# 
   641  029D                     	;# 
   642  029E                     	;# 
   643  029F                     	;# 
   644  0311                     	;# 
   645  0311                     	;# 
   646  0312                     	;# 
   647  0313                     	;# 
   648  0314                     	;# 
   649  0315                     	;# 
   650  0315                     	;# 
   651  0316                     	;# 
   652  0318                     	;# 
   653  0318                     	;# 
   654  0319                     	;# 
   655  031A                     	;# 
   656  031C                     	;# 
   657  031C                     	;# 
   658  031D                     	;# 
   659  031E                     	;# 
   660  0394                     	;# 
   661  0395                     	;# 
   662  0396                     	;# 
   663  0415                     	;# 
   664  0416                     	;# 
   665  0417                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  0791                     	;# 
   670  0792                     	;# 
   671  0793                     	;# 
   672  0794                     	;# 
   673  0795                     	;# 
   674  0798                     	;# 
   675  0799                     	;# 
   676  079A                     	;# 
   677  07A0                     	;# 
   678  07A1                     	;# 
   679  07A2                     	;# 
   680  07A3                     	;# 
   681  07A4                     	;# 
   682  07A5                     	;# 
   683  07A6                     	;# 
   684  07A7                     	;# 
   685  07A8                     	;# 
   686  07A9                     	;# 
   687  07AA                     	;# 
   688  07AB                     	;# 
   689  0FE4                     	;# 
   690  0FE5                     	;# 
   691  0FE6                     	;# 
   692  0FE7                     	;# 
   693  0FE8                     	;# 
   694  0FE9                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEF                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000F                     	;# 
   716  0010                     	;# 
   717  0011                     	;# 
   718  0012                     	;# 
   719  0013                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  008C                     	;# 
   732  008D                     	;# 
   733  008E                     	;# 
   734  008F                     	;# 
   735  0090                     	;# 
   736  0091                     	;# 
   737  0092                     	;# 
   738  0093                     	;# 
   739  0095                     	;# 
   740  0096                     	;# 
   741  0097                     	;# 
   742  0098                     	;# 
   743  0099                     	;# 
   744  009A                     	;# 
   745  009B                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  010C                     	;# 
   751  010D                     	;# 
   752  010E                     	;# 
   753  010F                     	;# 
   754  0110                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018F                     	;# 
   770  0190                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020D                     	;# 
   792  0210                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0215                     	;# 
   798  0215                     	;# 
   799  0216                     	;# 
   800  0217                     	;# 
   801  0291                     	;# 
   802  0291                     	;# 
   803  0292                     	;# 
   804  0293                     	;# 
   805  0294                     	;# 
   806  0295                     	;# 
   807  0295                     	;# 
   808  0296                     	;# 
   809  0298                     	;# 
   810  0298                     	;# 
   811  0299                     	;# 
   812  029A                     	;# 
   813  029B                     	;# 
   814  029C                     	;# 
   815  029C                     	;# 
   816  029D                     	;# 
   817  029E                     	;# 
   818  029F                     	;# 
   819  0311                     	;# 
   820  0311                     	;# 
   821  0312                     	;# 
   822  0313                     	;# 
   823  0314                     	;# 
   824  0315                     	;# 
   825  0315                     	;# 
   826  0316                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  031C                     	;# 
   832  031C                     	;# 
   833  031D                     	;# 
   834  031E                     	;# 
   835  0394                     	;# 
   836  0395                     	;# 
   837  0396                     	;# 
   838  0415                     	;# 
   839  0416                     	;# 
   840  0417                     	;# 
   841  041C                     	;# 
   842  041D                     	;# 
   843  041E                     	;# 
   844  0791                     	;# 
   845  0792                     	;# 
   846  0793                     	;# 
   847  0794                     	;# 
   848  0795                     	;# 
   849  0798                     	;# 
   850  0799                     	;# 
   851  079A                     	;# 
   852  07A0                     	;# 
   853  07A1                     	;# 
   854  07A2                     	;# 
   855  07A3                     	;# 
   856  07A4                     	;# 
   857  07A5                     	;# 
   858  07A6                     	;# 
   859  07A7                     	;# 
   860  07A8                     	;# 
   861  07A9                     	;# 
   862  07AA                     	;# 
   863  07AB                     	;# 
   864  0FE4                     	;# 
   865  0FE5                     	;# 
   866  0FE6                     	;# 
   867  0FE7                     	;# 
   868  0FE8                     	;# 
   869  0FE9                     	;# 
   870  0FEA                     	;# 
   871  0FEB                     	;# 
   872  0FED                     	;# 
   873  0FEE                     	;# 
   874  0FEF                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0008                     	;# 
   884  0009                     	;# 
   885  000A                     	;# 
   886  000B                     	;# 
   887  000C                     	;# 
   888  000D                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008D                     	;# 
   908  008E                     	;# 
   909  008F                     	;# 
   910  0090                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0093                     	;# 
   914  0095                     	;# 
   915  0096                     	;# 
   916  0097                     	;# 
   917  0098                     	;# 
   918  0099                     	;# 
   919  009A                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  010E                     	;# 
   928  010F                     	;# 
   929  0110                     	;# 
   930  0111                     	;# 
   931  0112                     	;# 
   932  0113                     	;# 
   933  0114                     	;# 
   934  0115                     	;# 
   935  0116                     	;# 
   936  0117                     	;# 
   937  0118                     	;# 
   938  0119                     	;# 
   939  011A                     	;# 
   940  011B                     	;# 
   941  011D                     	;# 
   942  018C                     	;# 
   943  018D                     	;# 
   944  018F                     	;# 
   945  0190                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0193                     	;# 
   952  0194                     	;# 
   953  0195                     	;# 
   954  0196                     	;# 
   955  0199                     	;# 
   956  019A                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019C                     	;# 
   962  019C                     	;# 
   963  019D                     	;# 
   964  019E                     	;# 
   965  019F                     	;# 
   966  020D                     	;# 
   967  0210                     	;# 
   968  0211                     	;# 
   969  0212                     	;# 
   970  0213                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0291                     	;# 
   977  0291                     	;# 
   978  0292                     	;# 
   979  0293                     	;# 
   980  0294                     	;# 
   981  0295                     	;# 
   982  0295                     	;# 
   983  0296                     	;# 
   984  0298                     	;# 
   985  0298                     	;# 
   986  0299                     	;# 
   987  029A                     	;# 
   988  029B                     	;# 
   989  029C                     	;# 
   990  029C                     	;# 
   991  029D                     	;# 
   992  029E                     	;# 
   993  029F                     	;# 
   994  0311                     	;# 
   995  0311                     	;# 
   996  0312                     	;# 
   997  0313                     	;# 
   998  0314                     	;# 
   999  0315                     	;# 
  1000  0315                     	;# 
  1001  0316                     	;# 
  1002  0318                     	;# 
  1003  0318                     	;# 
  1004  0319                     	;# 
  1005  031A                     	;# 
  1006  031C                     	;# 
  1007  031C                     	;# 
  1008  031D                     	;# 
  1009  031E                     	;# 
  1010  0394                     	;# 
  1011  0395                     	;# 
  1012  0396                     	;# 
  1013  0415                     	;# 
  1014  0416                     	;# 
  1015  0417                     	;# 
  1016  041C                     	;# 
  1017  041D                     	;# 
  1018  041E                     	;# 
  1019  0791                     	;# 
  1020  0792                     	;# 
  1021  0793                     	;# 
  1022  0794                     	;# 
  1023  0795                     	;# 
  1024  0798                     	;# 
  1025  0799                     	;# 
  1026  079A                     	;# 
  1027  07A0                     	;# 
  1028  07A1                     	;# 
  1029  07A2                     	;# 
  1030  07A3                     	;# 
  1031  07A4                     	;# 
  1032  07A5                     	;# 
  1033  07A6                     	;# 
  1034  07A7                     	;# 
  1035  07A8                     	;# 
  1036  07A9                     	;# 
  1037  07AA                     	;# 
  1038  07AB                     	;# 
  1039  0FE4                     	;# 
  1040  0FE5                     	;# 
  1041  0FE6                     	;# 
  1042  0FE7                     	;# 
  1043  0FE8                     	;# 
  1044  0FE9                     	;# 
  1045  0FEA                     	;# 
  1046  0FEB                     	;# 
  1047  0FED                     	;# 
  1048  0FEE                     	;# 
  1049  0FEF                     	;# 
  1050  0000                     	;# 
  1051  0001                     	;# 
  1052  0002                     	;# 
  1053  0003                     	;# 
  1054  0004                     	;# 
  1055  0005                     	;# 
  1056  0006                     	;# 
  1057  0007                     	;# 
  1058  0008                     	;# 
  1059  0009                     	;# 
  1060  000A                     	;# 
  1061  000B                     	;# 
  1062  000C                     	;# 
  1063  000D                     	;# 
  1064  000E                     	;# 
  1065  000F                     	;# 
  1066  0010                     	;# 
  1067  0011                     	;# 
  1068  0012                     	;# 
  1069  0013                     	;# 
  1070  0015                     	;# 
  1071  0016                     	;# 
  1072  0016                     	;# 
  1073  0017                     	;# 
  1074  0018                     	;# 
  1075  0019                     	;# 
  1076  001A                     	;# 
  1077  001B                     	;# 
  1078  001C                     	;# 
  1079  001E                     	;# 
  1080  001F                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  008F                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0097                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009A                     	;# 
  1095  009B                     	;# 
  1096  009B                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009E                     	;# 
  1100  010C                     	;# 
  1101  010D                     	;# 
  1102  010E                     	;# 
  1103  010F                     	;# 
  1104  0110                     	;# 
  1105  0111                     	;# 
  1106  0112                     	;# 
  1107  0113                     	;# 
  1108  0114                     	;# 
  1109  0115                     	;# 
  1110  0116                     	;# 
  1111  0117                     	;# 
  1112  0118                     	;# 
  1113  0119                     	;# 
  1114  011A                     	;# 
  1115  011B                     	;# 
  1116  011D                     	;# 
  1117  018C                     	;# 
  1118  018D                     	;# 
  1119  018F                     	;# 
  1120  0190                     	;# 
  1121  0191                     	;# 
  1122  0191                     	;# 
  1123  0192                     	;# 
  1124  0193                     	;# 
  1125  0193                     	;# 
  1126  0193                     	;# 
  1127  0194                     	;# 
  1128  0195                     	;# 
  1129  0196                     	;# 
  1130  0199                     	;# 
  1131  019A                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019B                     	;# 
  1136  019C                     	;# 
  1137  019C                     	;# 
  1138  019D                     	;# 
  1139  019E                     	;# 
  1140  019F                     	;# 
  1141  020D                     	;# 
  1142  0210                     	;# 
  1143  0211                     	;# 
  1144  0212                     	;# 
  1145  0213                     	;# 
  1146  0214                     	;# 
  1147  0215                     	;# 
  1148  0215                     	;# 
  1149  0216                     	;# 
  1150  0217                     	;# 
  1151  0291                     	;# 
  1152  0291                     	;# 
  1153  0292                     	;# 
  1154  0293                     	;# 
  1155  0294                     	;# 
  1156  0295                     	;# 
  1157  0295                     	;# 
  1158  0296                     	;# 
  1159  0298                     	;# 
  1160  0298                     	;# 
  1161  0299                     	;# 
  1162  029A                     	;# 
  1163  029B                     	;# 
  1164  029C                     	;# 
  1165  029C                     	;# 
  1166  029D                     	;# 
  1167  029E                     	;# 
  1168  029F                     	;# 
  1169  0311                     	;# 
  1170  0311                     	;# 
  1171  0312                     	;# 
  1172  0313                     	;# 
  1173  0314                     	;# 
  1174  0315                     	;# 
  1175  0315                     	;# 
  1176  0316                     	;# 
  1177  0318                     	;# 
  1178  0318                     	;# 
  1179  0319                     	;# 
  1180  031A                     	;# 
  1181  031C                     	;# 
  1182  031C                     	;# 
  1183  031D                     	;# 
  1184  031E                     	;# 
  1185  0394                     	;# 
  1186  0395                     	;# 
  1187  0396                     	;# 
  1188  0415                     	;# 
  1189  0416                     	;# 
  1190  0417                     	;# 
  1191  041C                     	;# 
  1192  041D                     	;# 
  1193  041E                     	;# 
  1194  0791                     	;# 
  1195  0792                     	;# 
  1196  0793                     	;# 
  1197  0794                     	;# 
  1198  0795                     	;# 
  1199  0798                     	;# 
  1200  0799                     	;# 
  1201  079A                     	;# 
  1202  07A0                     	;# 
  1203  07A1                     	;# 
  1204  07A2                     	;# 
  1205  07A3                     	;# 
  1206  07A4                     	;# 
  1207  07A5                     	;# 
  1208  07A6                     	;# 
  1209  07A7                     	;# 
  1210  07A8                     	;# 
  1211  07A9                     	;# 
  1212  07AA                     	;# 
  1213  07AB                     	;# 
  1214  0FE4                     	;# 
  1215  0FE5                     	;# 
  1216  0FE6                     	;# 
  1217  0FE7                     	;# 
  1218  0FE8                     	;# 
  1219  0FE9                     	;# 
  1220  0FEA                     	;# 
  1221  0FEB                     	;# 
  1222  0FED                     	;# 
  1223  0FEE                     	;# 
  1224  0FEF                     	;# 
  1225  0000                     	;# 
  1226  0001                     	;# 
  1227  0002                     	;# 
  1228  0003                     	;# 
  1229  0004                     	;# 
  1230  0005                     	;# 
  1231  0006                     	;# 
  1232  0007                     	;# 
  1233  0008                     	;# 
  1234  0009                     	;# 
  1235  000A                     	;# 
  1236  000B                     	;# 
  1237  000C                     	;# 
  1238  000D                     	;# 
  1239  000E                     	;# 
  1240  000F                     	;# 
  1241  0010                     	;# 
  1242  0011                     	;# 
  1243  0012                     	;# 
  1244  0013                     	;# 
  1245  0015                     	;# 
  1246  0016                     	;# 
  1247  0016                     	;# 
  1248  0017                     	;# 
  1249  0018                     	;# 
  1250  0019                     	;# 
  1251  001A                     	;# 
  1252  001B                     	;# 
  1253  001C                     	;# 
  1254  001E                     	;# 
  1255  001F                     	;# 
  1256  008C                     	;# 
  1257  008D                     	;# 
  1258  008E                     	;# 
  1259  008F                     	;# 
  1260  0090                     	;# 
  1261  0091                     	;# 
  1262  0092                     	;# 
  1263  0093                     	;# 
  1264  0095                     	;# 
  1265  0096                     	;# 
  1266  0097                     	;# 
  1267  0098                     	;# 
  1268  0099                     	;# 
  1269  009A                     	;# 
  1270  009B                     	;# 
  1271  009B                     	;# 
  1272  009C                     	;# 
  1273  009D                     	;# 
  1274  009E                     	;# 
  1275  010C                     	;# 
  1276  010D                     	;# 
  1277  010E                     	;# 
  1278  010F                     	;# 
  1279  0110                     	;# 
  1280  0111                     	;# 
  1281  0112                     	;# 
  1282  0113                     	;# 
  1283  0114                     	;# 
  1284  0115                     	;# 
  1285  0116                     	;# 
  1286  0117                     	;# 
  1287  0118                     	;# 
  1288  0119                     	;# 
  1289  011A                     	;# 
  1290  011B                     	;# 
  1291  011D                     	;# 
  1292  018C                     	;# 
  1293  018D                     	;# 
  1294  018F                     	;# 
  1295  0190                     	;# 
  1296  0191                     	;# 
  1297  0191                     	;# 
  1298  0192                     	;# 
  1299  0193                     	;# 
  1300  0193                     	;# 
  1301  0193                     	;# 
  1302  0194                     	;# 
  1303  0195                     	;# 
  1304  0196                     	;# 
  1305  0199                     	;# 
  1306  019A                     	;# 
  1307  019B                     	;# 
  1308  019B                     	;# 
  1309  019B                     	;# 
  1310  019B                     	;# 
  1311  019C                     	;# 
  1312  019C                     	;# 
  1313  019D                     	;# 
  1314  019E                     	;# 
  1315  019F                     	;# 
  1316  020D                     	;# 
  1317  0210                     	;# 
  1318  0211                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0214                     	;# 
  1322  0215                     	;# 
  1323  0215                     	;# 
  1324  0216                     	;# 
  1325  0217                     	;# 
  1326  0291                     	;# 
  1327  0291                     	;# 
  1328  0292                     	;# 
  1329  0293                     	;# 
  1330  0294                     	;# 
  1331  0295                     	;# 
  1332  0295                     	;# 
  1333  0296                     	;# 
  1334  0298                     	;# 
  1335  0298                     	;# 
  1336  0299                     	;# 
  1337  029A                     	;# 
  1338  029B                     	;# 
  1339  029C                     	;# 
  1340  029C                     	;# 
  1341  029D                     	;# 
  1342  029E                     	;# 
  1343  029F                     	;# 
  1344  0311                     	;# 
  1345  0311                     	;# 
  1346  0312                     	;# 
  1347  0313                     	;# 
  1348  0314                     	;# 
  1349  0315                     	;# 
  1350  0315                     	;# 
  1351  0316                     	;# 
  1352  0318                     	;# 
  1353  0318                     	;# 
  1354  0319                     	;# 
  1355  031A                     	;# 
  1356  031C                     	;# 
  1357  031C                     	;# 
  1358  031D                     	;# 
  1359  031E                     	;# 
  1360  0394                     	;# 
  1361  0395                     	;# 
  1362  0396                     	;# 
  1363  0415                     	;# 
  1364  0416                     	;# 
  1365  0417                     	;# 
  1366  041C                     	;# 
  1367  041D                     	;# 
  1368  041E                     	;# 
  1369  0791                     	;# 
  1370  0792                     	;# 
  1371  0793                     	;# 
  1372  0794                     	;# 
  1373  0795                     	;# 
  1374  0798                     	;# 
  1375  0799                     	;# 
  1376  079A                     	;# 
  1377  07A0                     	;# 
  1378  07A1                     	;# 
  1379  07A2                     	;# 
  1380  07A3                     	;# 
  1381  07A4                     	;# 
  1382  07A5                     	;# 
  1383  07A6                     	;# 
  1384  07A7                     	;# 
  1385  07A8                     	;# 
  1386  07A9                     	;# 
  1387  07AA                     	;# 
  1388  07AB                     	;# 
  1389  0FE4                     	;# 
  1390  0FE5                     	;# 
  1391  0FE6                     	;# 
  1392  0FE7                     	;# 
  1393  0FE8                     	;# 
  1394  0FE9                     	;# 
  1395  0FEA                     	;# 
  1396  0FEB                     	;# 
  1397  0FED                     	;# 
  1398  0FEE                     	;# 
  1399  0FEF                     	;# 
  1400  0000                     	;# 
  1401  0001                     	;# 
  1402  0002                     	;# 
  1403  0003                     	;# 
  1404  0004                     	;# 
  1405  0005                     	;# 
  1406  0006                     	;# 
  1407  0007                     	;# 
  1408  0008                     	;# 
  1409  0009                     	;# 
  1410  000A                     	;# 
  1411  000B                     	;# 
  1412  000C                     	;# 
  1413  000D                     	;# 
  1414  000E                     	;# 
  1415  000F                     	;# 
  1416  0010                     	;# 
  1417  0011                     	;# 
  1418  0012                     	;# 
  1419  0013                     	;# 
  1420  0015                     	;# 
  1421  0016                     	;# 
  1422  0016                     	;# 
  1423  0017                     	;# 
  1424  0018                     	;# 
  1425  0019                     	;# 
  1426  001A                     	;# 
  1427  001B                     	;# 
  1428  001C                     	;# 
  1429  001E                     	;# 
  1430  001F                     	;# 
  1431  008C                     	;# 
  1432  008D                     	;# 
  1433  008E                     	;# 
  1434  008F                     	;# 
  1435  0090                     	;# 
  1436  0091                     	;# 
  1437  0092                     	;# 
  1438  0093                     	;# 
  1439  0095                     	;# 
  1440  0096                     	;# 
  1441  0097                     	;# 
  1442  0098                     	;# 
  1443  0099                     	;# 
  1444  009A                     	;# 
  1445  009B                     	;# 
  1446  009B                     	;# 
  1447  009C                     	;# 
  1448  009D                     	;# 
  1449  009E                     	;# 
  1450  010C                     	;# 
  1451  010D                     	;# 
  1452  010E                     	;# 
  1453  010F                     	;# 
  1454  0110                     	;# 
  1455  0111                     	;# 
  1456  0112                     	;# 
  1457  0113                     	;# 
  1458  0114                     	;# 
  1459  0115                     	;# 
  1460  0116                     	;# 
  1461  0117                     	;# 
  1462  0118                     	;# 
  1463  0119                     	;# 
  1464  011A                     	;# 
  1465  011B                     	;# 
  1466  011D                     	;# 
  1467  018C                     	;# 
  1468  018D                     	;# 
  1469  018F                     	;# 
  1470  0190                     	;# 
  1471  0191                     	;# 
  1472  0191                     	;# 
  1473  0192                     	;# 
  1474  0193                     	;# 
  1475  0193                     	;# 
  1476  0193                     	;# 
  1477  0194                     	;# 
  1478  0195                     	;# 
  1479  0196                     	;# 
  1480  0199                     	;# 
  1481  019A                     	;# 
  1482  019B                     	;# 
  1483  019B                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019C                     	;# 
  1487  019C                     	;# 
  1488  019D                     	;# 
  1489  019E                     	;# 
  1490  019F                     	;# 
  1491  020D                     	;# 
  1492  0210                     	;# 
  1493  0211                     	;# 
  1494  0212                     	;# 
  1495  0213                     	;# 
  1496  0214                     	;# 
  1497  0215                     	;# 
  1498  0215                     	;# 
  1499  0216                     	;# 
  1500  0217                     	;# 
  1501  0291                     	;# 
  1502  0291                     	;# 
  1503  0292                     	;# 
  1504  0293                     	;# 
  1505  0294                     	;# 
  1506  0295                     	;# 
  1507  0295                     	;# 
  1508  0296                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  029B                     	;# 
  1514  029C                     	;# 
  1515  029C                     	;# 
  1516  029D                     	;# 
  1517  029E                     	;# 
  1518  029F                     	;# 
  1519  0311                     	;# 
  1520  0311                     	;# 
  1521  0312                     	;# 
  1522  0313                     	;# 
  1523  0314                     	;# 
  1524  0315                     	;# 
  1525  0315                     	;# 
  1526  0316                     	;# 
  1527  0318                     	;# 
  1528  0318                     	;# 
  1529  0319                     	;# 
  1530  031A                     	;# 
  1531  031C                     	;# 
  1532  031C                     	;# 
  1533  031D                     	;# 
  1534  031E                     	;# 
  1535  0394                     	;# 
  1536  0395                     	;# 
  1537  0396                     	;# 
  1538  0415                     	;# 
  1539  0416                     	;# 
  1540  0417                     	;# 
  1541  041C                     	;# 
  1542  041D                     	;# 
  1543  041E                     	;# 
  1544  0791                     	;# 
  1545  0792                     	;# 
  1546  0793                     	;# 
  1547  0794                     	;# 
  1548  0795                     	;# 
  1549  0798                     	;# 
  1550  0799                     	;# 
  1551  079A                     	;# 
  1552  07A0                     	;# 
  1553  07A1                     	;# 
  1554  07A2                     	;# 
  1555  07A3                     	;# 
  1556  07A4                     	;# 
  1557  07A5                     	;# 
  1558  07A6                     	;# 
  1559  07A7                     	;# 
  1560  07A8                     	;# 
  1561  07A9                     	;# 
  1562  07AA                     	;# 
  1563  07AB                     	;# 
  1564  0FE4                     	;# 
  1565  0FE5                     	;# 
  1566  0FE6                     	;# 
  1567  0FE7                     	;# 
  1568  0FE8                     	;# 
  1569  0FE9                     	;# 
  1570  0FEA                     	;# 
  1571  0FEB                     	;# 
  1572  0FED                     	;# 
  1573  0FEE                     	;# 
  1574  0FEF                     	;# 
  1575  0000                     	;# 
  1576  0001                     	;# 
  1577  0002                     	;# 
  1578  0003                     	;# 
  1579  0004                     	;# 
  1580  0005                     	;# 
  1581  0006                     	;# 
  1582  0007                     	;# 
  1583  0008                     	;# 
  1584  0009                     	;# 
  1585  000A                     	;# 
  1586  000B                     	;# 
  1587  000C                     	;# 
  1588  000D                     	;# 
  1589  000E                     	;# 
  1590  000F                     	;# 
  1591  0010                     	;# 
  1592  0011                     	;# 
  1593  0012                     	;# 
  1594  0013                     	;# 
  1595  0015                     	;# 
  1596  0016                     	;# 
  1597  0016                     	;# 
  1598  0017                     	;# 
  1599  0018                     	;# 
  1600  0019                     	;# 
  1601  001A                     	;# 
  1602  001B                     	;# 
  1603  001C                     	;# 
  1604  001E                     	;# 
  1605  001F                     	;# 
  1606  008C                     	;# 
  1607  008D                     	;# 
  1608  008E                     	;# 
  1609  008F                     	;# 
  1610  0090                     	;# 
  1611  0091                     	;# 
  1612  0092                     	;# 
  1613  0093                     	;# 
  1614  0095                     	;# 
  1615  0096                     	;# 
  1616  0097                     	;# 
  1617  0098                     	;# 
  1618  0099                     	;# 
  1619  009A                     	;# 
  1620  009B                     	;# 
  1621  009B                     	;# 
  1622  009C                     	;# 
  1623  009D                     	;# 
  1624  009E                     	;# 
  1625  010C                     	;# 
  1626  010D                     	;# 
  1627  010E                     	;# 
  1628  010F                     	;# 
  1629  0110                     	;# 
  1630  0111                     	;# 
  1631  0112                     	;# 
  1632  0113                     	;# 
  1633  0114                     	;# 
  1634  0115                     	;# 
  1635  0116                     	;# 
  1636  0117                     	;# 
  1637  0118                     	;# 
  1638  0119                     	;# 
  1639  011A                     	;# 
  1640  011B                     	;# 
  1641  011D                     	;# 
  1642  018C                     	;# 
  1643  018D                     	;# 
  1644  018F                     	;# 
  1645  0190                     	;# 
  1646  0191                     	;# 
  1647  0191                     	;# 
  1648  0192                     	;# 
  1649  0193                     	;# 
  1650  0193                     	;# 
  1651  0193                     	;# 
  1652  0194                     	;# 
  1653  0195                     	;# 
  1654  0196                     	;# 
  1655  0199                     	;# 
  1656  019A                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019C                     	;# 
  1662  019C                     	;# 
  1663  019D                     	;# 
  1664  019E                     	;# 
  1665  019F                     	;# 
  1666  020D                     	;# 
  1667  0210                     	;# 
  1668  0211                     	;# 
  1669  0212                     	;# 
  1670  0213                     	;# 
  1671  0214                     	;# 
  1672  0215                     	;# 
  1673  0215                     	;# 
  1674  0216                     	;# 
  1675  0217                     	;# 
  1676  0291                     	;# 
  1677  0291                     	;# 
  1678  0292                     	;# 
  1679  0293                     	;# 
  1680  0294                     	;# 
  1681  0295                     	;# 
  1682  0295                     	;# 
  1683  0296                     	;# 
  1684  0298                     	;# 
  1685  0298                     	;# 
  1686  0299                     	;# 
  1687  029A                     	;# 
  1688  029B                     	;# 
  1689  029C                     	;# 
  1690  029C                     	;# 
  1691  029D                     	;# 
  1692  029E                     	;# 
  1693  029F                     	;# 
  1694  0311                     	;# 
  1695  0311                     	;# 
  1696  0312                     	;# 
  1697  0313                     	;# 
  1698  0314                     	;# 
  1699  0315                     	;# 
  1700  0315                     	;# 
  1701  0316                     	;# 
  1702  0318                     	;# 
  1703  0318                     	;# 
  1704  0319                     	;# 
  1705  031A                     	;# 
  1706  031C                     	;# 
  1707  031C                     	;# 
  1708  031D                     	;# 
  1709  031E                     	;# 
  1710  0394                     	;# 
  1711  0395                     	;# 
  1712  0396                     	;# 
  1713  0415                     	;# 
  1714  0416                     	;# 
  1715  0417                     	;# 
  1716  041C                     	;# 
  1717  041D                     	;# 
  1718  041E                     	;# 
  1719  0791                     	;# 
  1720  0792                     	;# 
  1721  0793                     	;# 
  1722  0794                     	;# 
  1723  0795                     	;# 
  1724  0798                     	;# 
  1725  0799                     	;# 
  1726  079A                     	;# 
  1727  07A0                     	;# 
  1728  07A1                     	;# 
  1729  07A2                     	;# 
  1730  07A3                     	;# 
  1731  07A4                     	;# 
  1732  07A5                     	;# 
  1733  07A6                     	;# 
  1734  07A7                     	;# 
  1735  07A8                     	;# 
  1736  07A9                     	;# 
  1737  07AA                     	;# 
  1738  07AB                     	;# 
  1739  0FE4                     	;# 
  1740  0FE5                     	;# 
  1741  0FE6                     	;# 
  1742  0FE7                     	;# 
  1743  0FE8                     	;# 
  1744  0FE9                     	;# 
  1745  0FEA                     	;# 
  1746  0FEB                     	;# 
  1747  0FED                     	;# 
  1748  0FEE                     	;# 
  1749  0FEF                     	;# 
  1750  0000                     	;# 
  1751  0001                     	;# 
  1752  0002                     	;# 
  1753  0003                     	;# 
  1754  0004                     	;# 
  1755  0005                     	;# 
  1756  0006                     	;# 
  1757  0007                     	;# 
  1758  0008                     	;# 
  1759  0009                     	;# 
  1760  000A                     	;# 
  1761  000B                     	;# 
  1762  000C                     	;# 
  1763  000D                     	;# 
  1764  000E                     	;# 
  1765  000F                     	;# 
  1766  0010                     	;# 
  1767  0011                     	;# 
  1768  0012                     	;# 
  1769  0013                     	;# 
  1770  0015                     	;# 
  1771  0016                     	;# 
  1772  0016                     	;# 
  1773  0017                     	;# 
  1774  0018                     	;# 
  1775  0019                     	;# 
  1776  001A                     	;# 
  1777  001B                     	;# 
  1778  001C                     	;# 
  1779  001E                     	;# 
  1780  001F                     	;# 
  1781  008C                     	;# 
  1782  008D                     	;# 
  1783  008E                     	;# 
  1784  008F                     	;# 
  1785  0090                     	;# 
  1786  0091                     	;# 
  1787  0092                     	;# 
  1788  0093                     	;# 
  1789  0095                     	;# 
  1790  0096                     	;# 
  1791  0097                     	;# 
  1792  0098                     	;# 
  1793  0099                     	;# 
  1794  009A                     	;# 
  1795  009B                     	;# 
  1796  009B                     	;# 
  1797  009C                     	;# 
  1798  009D                     	;# 
  1799  009E                     	;# 
  1800  010C                     	;# 
  1801  010D                     	;# 
  1802  010E                     	;# 
  1803  010F                     	;# 
  1804  0110                     	;# 
  1805  0111                     	;# 
  1806  0112                     	;# 
  1807  0113                     	;# 
  1808  0114                     	;# 
  1809  0115                     	;# 
  1810  0116                     	;# 
  1811  0117                     	;# 
  1812  0118                     	;# 
  1813  0119                     	;# 
  1814  011A                     	;# 
  1815  011B                     	;# 
  1816  011D                     	;# 
  1817  018C                     	;# 
  1818  018D                     	;# 
  1819  018F                     	;# 
  1820  0190                     	;# 
  1821  0191                     	;# 
  1822  0191                     	;# 
  1823  0192                     	;# 
  1824  0193                     	;# 
  1825  0193                     	;# 
  1826  0193                     	;# 
  1827  0194                     	;# 
  1828  0195                     	;# 
  1829  0196                     	;# 
  1830  0199                     	;# 
  1831  019A                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019C                     	;# 
  1837  019C                     	;# 
  1838  019D                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  020D                     	;# 
  1842  0210                     	;# 
  1843  0211                     	;# 
  1844  0212                     	;# 
  1845  0213                     	;# 
  1846  0214                     	;# 
  1847  0215                     	;# 
  1848  0215                     	;# 
  1849  0216                     	;# 
  1850  0217                     	;# 
  1851  0291                     	;# 
  1852  0291                     	;# 
  1853  0292                     	;# 
  1854  0293                     	;# 
  1855  0294                     	;# 
  1856  0295                     	;# 
  1857  0295                     	;# 
  1858  0296                     	;# 
  1859  0298                     	;# 
  1860  0298                     	;# 
  1861  0299                     	;# 
  1862  029A                     	;# 
  1863  029B                     	;# 
  1864  029C                     	;# 
  1865  029C                     	;# 
  1866  029D                     	;# 
  1867  029E                     	;# 
  1868  029F                     	;# 
  1869  0311                     	;# 
  1870  0311                     	;# 
  1871  0312                     	;# 
  1872  0313                     	;# 
  1873  0314                     	;# 
  1874  0315                     	;# 
  1875  0315                     	;# 
  1876  0316                     	;# 
  1877  0318                     	;# 
  1878  0318                     	;# 
  1879  0319                     	;# 
  1880  031A                     	;# 
  1881  031C                     	;# 
  1882  031C                     	;# 
  1883  031D                     	;# 
  1884  031E                     	;# 
  1885  0394                     	;# 
  1886  0395                     	;# 
  1887  0396                     	;# 
  1888  0415                     	;# 
  1889  0416                     	;# 
  1890  0417                     	;# 
  1891  041C                     	;# 
  1892  041D                     	;# 
  1893  041E                     	;# 
  1894  0791                     	;# 
  1895  0792                     	;# 
  1896  0793                     	;# 
  1897  0794                     	;# 
  1898  0795                     	;# 
  1899  0798                     	;# 
  1900  0799                     	;# 
  1901  079A                     	;# 
  1902  07A0                     	;# 
  1903  07A1                     	;# 
  1904  07A2                     	;# 
  1905  07A3                     	;# 
  1906  07A4                     	;# 
  1907  07A5                     	;# 
  1908  07A6                     	;# 
  1909  07A7                     	;# 
  1910  07A8                     	;# 
  1911  07A9                     	;# 
  1912  07AA                     	;# 
  1913  07AB                     	;# 
  1914  0FE4                     	;# 
  1915  0FE5                     	;# 
  1916  0FE6                     	;# 
  1917  0FE7                     	;# 
  1918  0FE8                     	;# 
  1919  0FE9                     	;# 
  1920  0FEA                     	;# 
  1921  0FEB                     	;# 
  1922  0FED                     	;# 
  1923  0FEE                     	;# 
  1924  0FEF                     	;# 
  1925  0000                     	;# 
  1926  0001                     	;# 
  1927  0002                     	;# 
  1928  0003                     	;# 
  1929  0004                     	;# 
  1930  0005                     	;# 
  1931  0006                     	;# 
  1932  0007                     	;# 
  1933  0008                     	;# 
  1934  0009                     	;# 
  1935  000A                     	;# 
  1936  000B                     	;# 
  1937  000C                     	;# 
  1938  000D                     	;# 
  1939  000E                     	;# 
  1940  000F                     	;# 
  1941  0010                     	;# 
  1942  0011                     	;# 
  1943  0012                     	;# 
  1944  0013                     	;# 
  1945  0015                     	;# 
  1946  0016                     	;# 
  1947  0016                     	;# 
  1948  0017                     	;# 
  1949  0018                     	;# 
  1950  0019                     	;# 
  1951  001A                     	;# 
  1952  001B                     	;# 
  1953  001C                     	;# 
  1954  001E                     	;# 
  1955  001F                     	;# 
  1956  008C                     	;# 
  1957  008D                     	;# 
  1958  008E                     	;# 
  1959  008F                     	;# 
  1960  0090                     	;# 
  1961  0091                     	;# 
  1962  0092                     	;# 
  1963  0093                     	;# 
  1964  0095                     	;# 
  1965  0096                     	;# 
  1966  0097                     	;# 
  1967  0098                     	;# 
  1968  0099                     	;# 
  1969  009A                     	;# 
  1970  009B                     	;# 
  1971  009B                     	;# 
  1972  009C                     	;# 
  1973  009D                     	;# 
  1974  009E                     	;# 
  1975  010C                     	;# 
  1976  010D                     	;# 
  1977  010E                     	;# 
  1978  010F                     	;# 
  1979  0110                     	;# 
  1980  0111                     	;# 
  1981  0112                     	;# 
  1982  0113                     	;# 
  1983  0114                     	;# 
  1984  0115                     	;# 
  1985  0116                     	;# 
  1986  0117                     	;# 
  1987  0118                     	;# 
  1988  0119                     	;# 
  1989  011A                     	;# 
  1990  011B                     	;# 
  1991  011D                     	;# 
  1992  018C                     	;# 
  1993  018D                     	;# 
  1994  018F                     	;# 
  1995  0190                     	;# 
  1996  0191                     	;# 
  1997  0191                     	;# 
  1998  0192                     	;# 
  1999  0193                     	;# 
  2000  0193                     	;# 
  2001  0193                     	;# 
  2002  0194                     	;# 
  2003  0195                     	;# 
  2004  0196                     	;# 
  2005  0199                     	;# 
  2006  019A                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019B                     	;# 
  2011  019C                     	;# 
  2012  019C                     	;# 
  2013  019D                     	;# 
  2014  019E                     	;# 
  2015  019F                     	;# 
  2016  020D                     	;# 
  2017  0210                     	;# 
  2018  0211                     	;# 
  2019  0212                     	;# 
  2020  0213                     	;# 
  2021  0214                     	;# 
  2022  0215                     	;# 
  2023  0215                     	;# 
  2024  0216                     	;# 
  2025  0217                     	;# 
  2026  0291                     	;# 
  2027  0291                     	;# 
  2028  0292                     	;# 
  2029  0293                     	;# 
  2030  0294                     	;# 
  2031  0295                     	;# 
  2032  0295                     	;# 
  2033  0296                     	;# 
  2034  0298                     	;# 
  2035  0298                     	;# 
  2036  0299                     	;# 
  2037  029A                     	;# 
  2038  029B                     	;# 
  2039  029C                     	;# 
  2040  029C                     	;# 
  2041  029D                     	;# 
  2042  029E                     	;# 
  2043  029F                     	;# 
  2044  0311                     	;# 
  2045  0311                     	;# 
  2046  0312                     	;# 
  2047  0313                     	;# 
  2048  0314                     	;# 
  2049  0315                     	;# 
  2050  0315                     	;# 
  2051  0316                     	;# 
  2052  0318                     	;# 
  2053  0318                     	;# 
  2054  0319                     	;# 
  2055  031A                     	;# 
  2056  031C                     	;# 
  2057  031C                     	;# 
  2058  031D                     	;# 
  2059  031E                     	;# 
  2060  0394                     	;# 
  2061  0395                     	;# 
  2062  0396                     	;# 
  2063  0415                     	;# 
  2064  0416                     	;# 
  2065  0417                     	;# 
  2066  041C                     	;# 
  2067  041D                     	;# 
  2068  041E                     	;# 
  2069  0791                     	;# 
  2070  0792                     	;# 
  2071  0793                     	;# 
  2072  0794                     	;# 
  2073  0795                     	;# 
  2074  0798                     	;# 
  2075  0799                     	;# 
  2076  079A                     	;# 
  2077  07A0                     	;# 
  2078  07A1                     	;# 
  2079  07A2                     	;# 
  2080  07A3                     	;# 
  2081  07A4                     	;# 
  2082  07A5                     	;# 
  2083  07A6                     	;# 
  2084  07A7                     	;# 
  2085  07A8                     	;# 
  2086  07A9                     	;# 
  2087  07AA                     	;# 
  2088  07AB                     	;# 
  2089  0FE4                     	;# 
  2090  0FE5                     	;# 
  2091  0FE6                     	;# 
  2092  0FE7                     	;# 
  2093  0FE8                     	;# 
  2094  0FE9                     	;# 
  2095  0FEA                     	;# 
  2096  0FEB                     	;# 
  2097  0FED                     	;# 
  2098  0FEE                     	;# 
  2099  0FEF                     	;# 
  2100                           
  2101                           	psect	stringtext1
  2102  1000                     __pstringtext1:	
  2103  1000                     _fsmStateTable:	
  2104  1000  3448               	retlw	low _do_I2C_IDLE
  2105  1001  340B               	retlw	high _do_I2C_IDLE
  2106  1002  34E1               	retlw	low _do_I2C_SEND_ADR_READ
  2107  1003  340B               	retlw	high _do_I2C_SEND_ADR_READ
  2108  1004  34C9               	retlw	low _do_I2C_SEND_ADR_WRITE
  2109  1005  340B               	retlw	high _do_I2C_SEND_ADR_WRITE
  2110  1006  344F               	retlw	low _do_I2C_TX
  2111  1007  3404               	retlw	high _do_I2C_TX
  2112  1008  34FE               	retlw	low _do_I2C_RX
  2113  1009  3404               	retlw	high _do_I2C_RX
  2114  100A  349A               	retlw	low _do_I2C_RCEN
  2115  100B  340B               	retlw	high _do_I2C_RCEN
  2116  100C  3436               	retlw	low _do_I2C_TX_EMPTY
  2117  100D  3407               	retlw	high _do_I2C_TX_EMPTY
  2118  100E  3451               	retlw	low _do_I2C_SEND_RESTART_READ
  2119  100F  340B               	retlw	high _do_I2C_SEND_RESTART_READ
  2120  1010  345A               	retlw	low _do_I2C_SEND_RESTART_WRITE
  2121  1011  340B               	retlw	high _do_I2C_SEND_RESTART_WRITE
  2122  1012  3463               	retlw	low _do_I2C_SEND_RESTART
  2123  1013  340B               	retlw	high _do_I2C_SEND_RESTART
  2124  1014  346C               	retlw	low _do_I2C_SEND_STOP
  2125  1015  340B               	retlw	high _do_I2C_SEND_STOP
  2126  1016  3475               	retlw	low _do_I2C_DO_ACK
  2127  1017  340B               	retlw	high _do_I2C_DO_ACK
  2128  1018  347E               	retlw	low _do_I2C_DO_NACK_STOP
  2129  1019  340B               	retlw	high _do_I2C_DO_NACK_STOP
  2130  101A  3487               	retlw	low _do_I2C_DO_NACK_RESTART
  2131  101B  340B               	retlw	high _do_I2C_DO_NACK_RESTART
  2132  101C  34BD               	retlw	low _do_I2C_RESET
  2133  101D  340B               	retlw	high _do_I2C_RESET
  2134  101E  34CC               	retlw	low _do_I2C_DO_ADDRESS_NACK
  2135  101F  340F               	retlw	high _do_I2C_DO_ADDRESS_NACK
  2136  1020                     __end_of_fsmStateTable:	
  2137                           
  2138                           	psect	stringtext2
  2139  1020                     __pstringtext2:	
  2140  1020                     _displayNum:	
  2141  1020  34FC               	retlw	252
  2142  1021  3460               	retlw	96
  2143  1022  34DA               	retlw	218
  2144  1023  34F2               	retlw	242
  2145  1024  3466               	retlw	102
  2146  1025  34B6               	retlw	182
  2147  1026  34BE               	retlw	190
  2148  1027  34E0               	retlw	224
  2149  1028  34FE               	retlw	254
  2150  1029  34F6               	retlw	246
  2151  102A                     __end_of_displayNum:	
  2152                           
  2153                           	psect	nvBANK0
  2154  006D                     __pnvBANK0:	
  2155  006D                     _IOCBF4_InterruptHandler:	
  2156  006D                     	ds	2
  2157  000D                     _PORTBbits	set	13
  2158  0015                     _TMR0	set	21
  2159  0011                     _PIR1bits	set	17
  2160  0012                     _PIR2bits	set	18
  2161  000B                     _INTCONbits	set	11
  2162  009D                     _ADCON0bits	set	157
  2163  009C                     _ADRESH	set	156
  2164  009B                     _ADRESL	set	155
  2165  009E                     _ADCON1	set	158
  2166  009D                     _ADCON0	set	157
  2167  0095                     _OPTION_REG	set	149
  2168  0095                     _OPTION_REGbits	set	149
  2169  008F                     _TRISD	set	143
  2170  008E                     _TRISC	set	142
  2171  008D                     _TRISB	set	141
  2172  008C                     _TRISA	set	140
  2173  0090                     _TRISE	set	144
  2174  0097                     _WDTCON	set	151
  2175  0098                     _OSCTUNE	set	152
  2176  0099                     _OSCCON	set	153
  2177  0091                     _PIE1bits	set	145
  2178  0092                     _PIE2bits	set	146
  2179  04D6                     _PLLR	set	1238
  2180  010C                     _LATAbits	set	268
  2181  010E                     _LATCbits	set	270
  2182  0110                     _LATEbits	set	272
  2183  0117                     _FVRCONbits	set	279
  2184  0117                     _FVRCON	set	279
  2185  011D                     _APFCON	set	285
  2186  010E                     _LATC	set	270
  2187  010D                     _LATB	set	269
  2188  010C                     _LATA	set	268
  2189  010F                     _LATD	set	271
  2190  0110                     _LATE	set	272
  2191  0116                     _BORCON	set	278
  2192  018C                     _ANSELA	set	396
  2193  0190                     _ANSELE	set	400
  2194  018D                     _ANSELB	set	397
  2195  018F                     _ANSELD	set	399
  2196  0196                     _EECON2	set	406
  2197  0193                     _EEDATL	set	403
  2198  0194                     _EEDATH	set	404
  2199  0195                     _EECON1bits	set	405
  2200  0192                     _EEADRH	set	402
  2201  0191                     _EEADRL	set	401
  2202  0214                     _SSPSTATbits	set	532
  2203  0213                     _SSPMSK	set	531
  2204  0211                     _SSPBUF	set	529
  2205  0216                     _SSPCON2bits	set	534
  2206  0212                     _SSPADD	set	530
  2207  0216                     _SSPCON2	set	534
  2208  0215                     _SSPCON1	set	533
  2209  0214                     _SSPSTAT	set	532
  2210  0215                     _SSPCON1bits	set	533
  2211  020D                     _WPUB	set	525
  2212  0210                     _WPUE	set	528
  2213  0394                     _IOCBPbits	set	916
  2214  0395                     _IOCBNbits	set	917
  2215  0396                     _IOCBFbits	set	918
  2216                           
  2217                           ; #config settings
  2218  0000                     
  2219                           	psect	cinit
  2220  0046                     start_initialization:	
  2221  0046                     __initialization:	
  2222                           
  2223                           ; Clear objects allocated to COMMON
  2224  0046  01F8               	clrf	__pbssCOMMON& (0+127)
  2225  0047  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2226  0048  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2227  0049  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2228  004A  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2229  004B  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2230                           
  2231                           ; Clear objects allocated to BANK0
  2232  004C  3020               	movlw	low __pbssBANK0
  2233  004D  0084               	movwf	4
  2234  004E  3000               	movlw	high __pbssBANK0
  2235  004F  0085               	movwf	5
  2236  0050  3033               	movlw	51
  2237  0051  318A  22F8  3180   	fcall	clear_ram0
  2238                           
  2239                           ; Clear objects allocated to BANK1
  2240  0054  30A0               	movlw	low __pbssBANK1
  2241  0055  0084               	movwf	4
  2242  0056  3000               	movlw	high __pbssBANK1
  2243  0057  0085               	movwf	5
  2244  0058  301D               	movlw	29
  2245  0059  318A  22F8  3180   	fcall	clear_ram0
  2246  005C                     end_of_initialization:	
  2247                           ;End of C runtime variable initialization code
  2248                           
  2249  005C                     __end_of__initialization:	
  2250  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2251  005D  0020               	movlb	0
  2252  005E  3180  2860         	ljmp	_main	;jump to C main() function
  2253                           
  2254                           	psect	bssCOMMON
  2255  0078                     __pbssCOMMON:	
  2256  0078                     _TMR0_InterruptHandler:	
  2257  0078                     	ds	2
  2258  007A                     _i2c_driver_busCollisionISR:	
  2259  007A                     	ds	2
  2260  007C                     displayRefreshISR@i:	
  2261  007C                     	ds	1
  2262  007D                     _timer0ReloadVal:	
  2263  007D                     	ds	1
  2264                           
  2265                           	psect	bssBANK0
  2266  0020                     __pbssBANK0:	
  2267  0020                     FIR_filter@buffer:	
  2268  0020                     	ds	16
  2269  0030                     FIR_filter@sum:	
  2270  0030                     	ds	4
  2271  0034                     _button_press_count:	
  2272  0034                     	ds	4
  2273  0038                     _flag_button_press_count:	
  2274  0038                     	ds	4
  2275  003C                     _displayBuff:	
  2276  003C                     	ds	4
  2277  0040                     FIR_filter@oldest:	
  2278  0040                     	ds	2
  2279  0042                     _bcd_temp:	
  2280  0042                     	ds	2
  2281  0044                     _i2c_driver_i2cISR:	
  2282  0044                     	ds	2
  2283  0046                     _mode_timeout_count:	
  2284  0046                     	ds	1
  2285  0047                     _mode:	
  2286  0047                     	ds	1
  2287  0048                     _flag_dot_blink:	
  2288  0048                     	ds	1
  2289  0049                     _flag_time_display_update:	
  2290  0049                     	ds	1
  2291  004A                     _rtcData:	
  2292  004A                     	ds	9
  2293                           
  2294                           	psect	bssBANK1
  2295  00A0                     __pbssBANK1:	
  2296  00A0                     _i2c_status:	
  2297  00A0                     	ds	29
  2298                           
  2299                           	psect	clrtext
  2300  0AF8                     clear_ram0:	
  2301                           ;	Called with FSR0 containing the base address, and
  2302                           ;	WREG with the size to clear
  2303                           
  2304  0AF8  0064               	clrwdt	;clear the watchdog before getting into this loop
  2305  0AF9                     clrloop0:	
  2306  0AF9  0180               	clrf	0	;clear RAM location pointed to by FSR
  2307  0AFA  3101               	addfsr 0,1
  2308  0AFB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2309  0AFC  2AF9               	goto	clrloop0	;have we reached the end yet?
  2310  0AFD  3400               	retlw	0	;all done for this memory range, return
  2311                           
  2312                           	psect	cstackCOMMON
  2313  0070                     __pcstackCOMMON:	
  2314  0070                     ?_i2c_driver_open:	
  2315  0070                     ?_mssp_IRQisEnabled:	
  2316                           ; 1 bit 
  2317                           
  2318  0070                     ?_i2c_driver_isNACK:	
  2319                           ; 1 bit 
  2320                           
  2321  0070                     ?i1_i2c_driver_isNACK:	
  2322                           ; 1 bit 
  2323                           
  2324  0070                     ?_mssp_clearIRQ:	
  2325                           ; 1 bit 
  2326                           
  2327  0070                     ?_i2c_busCollisionISR:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ??_i2c_busCollisionISR:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_i2c_ISR:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_mssp_disableIRQ:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_i2c_driver_start:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_i2c_poller:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_mssp_waitForEvent:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_i2c_driver_resetBus:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_i2c_driver_restart:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_i2c_driver_stop:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?_i2c_driver_TXData:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_i2c_driver_startRX:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_i2c_driver_sendACK:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ?_i2c_driver_sendNACK:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ?_i2c_driver_getRXData:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ?_mssp_setIRQ:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_i2c_driver_clearBusCollision:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ??_i2c_driver_clearBusCollision:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_TMR0_ISR:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_PIN_MANAGER_IOC:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ??_PIN_MANAGER_IOC:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ?_PIN_MANAGER_Initialize:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_OSCILLATOR_Initialize:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ?_WDT_Initialize:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_FVR_Initialize:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ?_TMR0_Initialize:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_ADC_Initialize:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ?_IOCBF4_DefaultInterruptHandler:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ??_IOCBF4_DefaultInterruptHandler:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ?_IOCBF4_ISR:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ??_IOCBF4_ISR:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ?_TMR0_DefaultInterruptHandler:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ??_TMR0_DefaultInterruptHandler:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ?_TMR0_CallBack:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?_secondISR:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ??_secondISR:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_displayRefreshISR:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ??_displayRefreshISR:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ?_i2c_open:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_i2c_close:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_i2c_masterOperation:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_i2c_masterWrite:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_do_I2C_RESET:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_do_I2C_IDLE:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_do_I2C_SEND_RESTART_READ:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_do_I2C_SEND_RESTART:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_do_I2C_SEND_STOP:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_do_I2C_SEND_ADR_READ:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ?_do_I2C_RCEN:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_do_I2C_DO_ACK:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ?_do_I2C_DO_NACK_STOP:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_do_I2C_DO_NACK_RESTART:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_do_I2C_TX:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_do_I2C_RX:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_do_I2C_TX_EMPTY:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?_INTERRUPT_InterruptManager:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     ?_SYSTEM_Initialize:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     ?_initRTC:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0070                     ?_bcdHourIncr:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     ?_bcdHourDecr:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0070                     ?_bcdMinuteIncr:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0070                     ?_bcdMinuteDecr:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0070                     ?_main:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525  0070                     ?i1_i2c_setBuffer:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528  0070                     ?i1_do_I2C_RESET:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0070                     ??i1_do_I2C_RESET:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0070                     ?i1_do_I2C_IDLE:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0070                     ??i1_do_I2C_IDLE:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0070                     ?i1_do_I2C_SEND_RESTART:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0070                     ??i1_do_I2C_SEND_RESTART:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  0070                     ?i1_do_I2C_SEND_STOP:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561  0070                     ??i1_do_I2C_SEND_STOP:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567  0070                     ??i1_do_I2C_SEND_ADR_READ:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573  0070                     ??i1_do_I2C_SEND_ADR_WRITE:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576  0070                     ?i1_do_I2C_RCEN:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579  0070                     ??i1_do_I2C_RCEN:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582  0070                     ?i1_do_I2C_DO_ACK:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585  0070                     ??i1_do_I2C_DO_ACK:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606  0070                     ?i1_do_I2C_TX:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0070                     ??i1_do_I2C_TX:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0070                     ?i1_do_I2C_RX:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0070                     ??i1_do_I2C_RX:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0070                     ?i1_do_I2C_TX_EMPTY:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621  0070                     ??i1_do_I2C_TX_EMPTY:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624  0070                     ?i1_i2c_ISR:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627  0070                     ?i1_setCallBack:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630  0070                     ?i1_mssp_clearIRQ:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633  0070                     ??i1_mssp_clearIRQ:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636  0070                     ?i1_mssp_setIRQ:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639  0070                     ??i1_mssp_setIRQ:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642  0070                     ?i1_i2c_driver_resetBus:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645  0070                     ??i1_i2c_driver_resetBus:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648  0070                     ?i1_i2c_driver_restart:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651  0070                     ??i1_i2c_driver_restart:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654  0070                     ?i1_i2c_driver_stop:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657  0070                     ??i1_i2c_driver_stop:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660  0070                     ??i1_i2c_driver_isNACK:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663  0070                     ?i1_i2c_driver_startRX:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666  0070                     ??i1_i2c_driver_startRX:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669  0070                     ?i1_i2c_driver_getRXData:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672  0070                     ??i1_i2c_driver_getRXData:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675  0070                     ?i1_i2c_driver_TXData:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678  0070                     ??i1_i2c_driver_TXData:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681  0070                     ?i1_i2c_driver_sendACK:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684  0070                     ??i1_i2c_driver_sendACK:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687  0070                     ?i1_i2c_driver_sendNACK:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690  0070                     ??i1_i2c_driver_sendNACK:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693  0070                     i1i2c_driver_TXData@d:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696  0070                     i1i2c_setBuffer@bufferSize:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699  0070                     i1setCallBack@cb:	
  2700                           ; 2 bytes @ 0x0
  2701                           
  2702                           
  2703                           ; 2 bytes @ 0x0
  2704  0070                     	ds	2
  2705  0072                     ??_TMR0_ISR:	
  2706  0072                     ??_TMR0_CallBack:	
  2707                           ; 1 bytes @ 0x2
  2708                           
  2709  0072                     ??i1_i2c_setBuffer:	
  2710                           ; 1 bytes @ 0x2
  2711                           
  2712  0072                     i1setCallBack@p:	
  2713                           ; 1 bytes @ 0x2
  2714                           
  2715                           
  2716                           ; 1 bytes @ 0x2
  2717  0072                     	ds	1
  2718  0073                     ??i1_i2c_ISR:	
  2719  0073                     ??i1_setCallBack:	
  2720                           ; 1 bytes @ 0x3
  2721                           
  2722  0073                     i1i2c_setBuffer@buffer:	
  2723                           ; 1 bytes @ 0x3
  2724                           
  2725                           
  2726                           ; 1 bytes @ 0x3
  2727  0073                     	ds	1
  2728  0074                     i1setCallBack@idx:	
  2729                           
  2730                           ; 1 bytes @ 0x4
  2731  0074                     	ds	1
  2732  0075                     ?i1_i2c_setDataCompleteCallback:	
  2733  0075                     i1i2c_setDataCompleteCallback@cb:	
  2734                           ; 1 bytes @ 0x5
  2735                           
  2736                           
  2737                           ; 2 bytes @ 0x5
  2738  0075                     	ds	1
  2739  0076                     ??_INTERRUPT_InterruptManager:	
  2740                           
  2741                           ; 1 bytes @ 0x6
  2742  0076                     	ds	1
  2743  0077                     i1i2c_setDataCompleteCallback@p:	
  2744                           
  2745                           ; 1 bytes @ 0x7
  2746  0077                     	ds	1
  2747  0078                     ??i1_returnStop:	
  2748  0078                     ??i1_returnReset:	
  2749                           ; 1 bytes @ 0x8
  2750                           
  2751  0078                     ??i1_wr1RegCompleteHandler:	
  2752                           ; 1 bytes @ 0x8
  2753                           
  2754  0078                     ??i1_rd1RegCompleteHandler:	
  2755                           ; 1 bytes @ 0x8
  2756                           
  2757  0078                     ??i1_rd2RegCompleteHandler:	
  2758                           ; 1 bytes @ 0x8
  2759                           
  2760  0078                     ??i1_wr2RegCompleteHandler:	
  2761                           ; 1 bytes @ 0x8
  2762                           
  2763  0078                     ??i1_rdBlkRegCompleteHandler:	
  2764                           ; 1 bytes @ 0x8
  2765                           
  2766  0078                     ??i1_i2c_restartWrite:	
  2767                           ; 1 bytes @ 0x8
  2768                           
  2769                           
  2770                           	psect	cstackBANK0
  2771  0053                     __pcstackBANK0:	
  2772                           ; 1 bytes @ 0x8
  2773                           
  2774  0053                     ?_setCallBack:	
  2775  0053                     ??_i2c_driver_open:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778  0053                     ??_mssp_clearIRQ:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0053                     ?_i2c_driver_setBusCollisionISR:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784  0053                     ?_i2c_driver_setI2cISR:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0053                     ??_mssp_disableIRQ:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0053                     ??_i2c_driver_start:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0053                     ??_mssp_IRQisEnabled:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0053                     ??_mssp_waitForEvent:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0053                     ??_i2c_driver_resetBus:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0053                     ??_i2c_driver_restart:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0053                     ??_i2c_driver_stop:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0053                     ??_i2c_driver_TXData:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0053                     ??_i2c_driver_startRX:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0053                     ??_i2c_driver_sendACK:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0053                     ??_i2c_driver_sendNACK:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0053                     ??_i2c_driver_isNACK:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0053                     ??_i2c_driver_getRXData:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0053                     ??_mssp_setIRQ:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0053                     ??_OSCILLATOR_Initialize:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0053                     ??_WDT_Initialize:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0053                     ??_FVR_Initialize:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0053                     ??_ADC_Initialize:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0053                     ?_IOCBF4_SetInterruptHandler:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0053                     ?_TMR0_SetInterruptHandler:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0053                     ??_i2c_close:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0053                     ?_i2c_setBuffer:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0053                     ??_do_I2C_RESET:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0053                     ??_do_I2C_IDLE:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0053                     ??_do_I2C_SEND_RESTART_READ:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0053                     ??_do_I2C_SEND_RESTART_WRITE:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0053                     ??_do_I2C_SEND_RESTART:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0053                     ??_do_I2C_SEND_STOP:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0053                     ??_do_I2C_SEND_ADR_READ:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0053                     ??_do_I2C_RCEN:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0053                     ??_do_I2C_DO_ACK:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0053                     ??_do_I2C_DO_NACK_STOP:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0053                     ??_do_I2C_DO_NACK_RESTART:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0053                     ??_do_I2C_DO_ADDRESS_NACK:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0053                     ??_do_I2C_RX:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0053                     ??_do_I2C_TX_EMPTY:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0053                     ??_bcdHourIncr:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0053                     ??_bcdHourDecr:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0053                     ??_bcdMinuteIncr:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0053                     ??_bcdMinuteDecr:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0053                     ??i1_i2c_setDataCompleteCallback:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0053                     ?_ADC_GetConversion:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0053                     ?___lwdiv:	
  2914                           ; 2 bytes @ 0x0
  2915                           
  2916  0053                     ?___lwmod:	
  2917                           ; 2 bytes @ 0x0
  2918                           
  2919  0053                     mssp_waitForEvent@timeout:	
  2920                           ; 2 bytes @ 0x0
  2921                           
  2922  0053                     i2c_driver_TXData@d:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0053                     bcdHourIncr@hr:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0053                     bcdHourDecr@hr:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0053                     bcdMinuteIncr@mn:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0053                     bcdMinuteDecr@mn:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0053                     i2c_setBuffer@bufferSize:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0053                     setCallBack@cb:	
  2941                           ; 2 bytes @ 0x0
  2942                           
  2943  0053                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2944                           ; 2 bytes @ 0x0
  2945                           
  2946  0053                     TMR0_SetInterruptHandler@InterruptHandler:	
  2947                           ; 2 bytes @ 0x0
  2948                           
  2949  0053                     i2c_driver_setBusCollisionISR@handler:	
  2950                           ; 2 bytes @ 0x0
  2951                           
  2952  0053                     i2c_driver_setI2cISR@handler:	
  2953                           ; 2 bytes @ 0x0
  2954                           
  2955  0053                     ___lwdiv@divisor:	
  2956                           ; 2 bytes @ 0x0
  2957                           
  2958  0053                     ___lwmod@divisor:	
  2959                           ; 2 bytes @ 0x0
  2960                           
  2961                           
  2962                           ; 2 bytes @ 0x0
  2963  0053                     	ds	1
  2964  0054                     ??_do_I2C_SEND_ADR_WRITE:	
  2965  0054                     ??_do_I2C_TX:	
  2966                           ; 1 bytes @ 0x1
  2967                           
  2968  0054                     ?i1_returnStop:	
  2969                           ; 1 bytes @ 0x1
  2970                           
  2971  0054                     ?i1_returnReset:	
  2972                           ; 1 bytes @ 0x1
  2973                           
  2974  0054                     ?i1_wr1RegCompleteHandler:	
  2975                           ; 1 bytes @ 0x1
  2976                           
  2977  0054                     ?i1_rd1RegCompleteHandler:	
  2978                           ; 1 bytes @ 0x1
  2979                           
  2980  0054                     ?i1_rd2RegCompleteHandler:	
  2981                           ; 1 bytes @ 0x1
  2982                           
  2983  0054                     ?i1_wr2RegCompleteHandler:	
  2984                           ; 1 bytes @ 0x1
  2985                           
  2986  0054                     ?i1_rdBlkRegCompleteHandler:	
  2987                           ; 1 bytes @ 0x1
  2988                           
  2989  0054                     ?i1_i2c_restartWrite:	
  2990                           ; 1 bytes @ 0x1
  2991                           
  2992  0054                     i2c_close@ret:	
  2993                           ; 1 bytes @ 0x1
  2994                           
  2995  0054                     i1returnStop@p:	
  2996                           ; 1 bytes @ 0x1
  2997                           
  2998  0054                     i1returnReset@p:	
  2999                           ; 1 bytes @ 0x1
  3000                           
  3001  0054                     i1wr1RegCompleteHandler@p:	
  3002                           ; 1 bytes @ 0x1
  3003                           
  3004  0054                     i1rd1RegCompleteHandler@p:	
  3005                           ; 1 bytes @ 0x1
  3006                           
  3007  0054                     i1rd2RegCompleteHandler@p:	
  3008                           ; 1 bytes @ 0x1
  3009                           
  3010  0054                     i1wr2RegCompleteHandler@p:	
  3011                           ; 1 bytes @ 0x1
  3012                           
  3013  0054                     i1rdBlkRegCompleteHandler@p:	
  3014                           ; 1 bytes @ 0x1
  3015                           
  3016  0054                     i1i2c_restartWrite@p:	
  3017                           ; 1 bytes @ 0x1
  3018                           
  3019                           
  3020                           ; 1 bytes @ 0x1
  3021  0054                     	ds	1
  3022  0055                     ??_i2c_driver_setBusCollisionISR:	
  3023  0055                     ??_i2c_driver_setI2cISR:	
  3024                           ; 1 bytes @ 0x2
  3025                           
  3026  0055                     ??_PIN_MANAGER_Initialize:	
  3027                           ; 1 bytes @ 0x2
  3028                           
  3029  0055                     ??_TMR0_Initialize:	
  3030                           ; 1 bytes @ 0x2
  3031                           
  3032  0055                     ??_IOCBF4_SetInterruptHandler:	
  3033                           ; 1 bytes @ 0x2
  3034                           
  3035  0055                     ??_TMR0_SetInterruptHandler:	
  3036                           ; 1 bytes @ 0x2
  3037                           
  3038  0055                     ??_i2c_open:	
  3039                           ; 1 bytes @ 0x2
  3040                           
  3041  0055                     ??_i2c_setBuffer:	
  3042                           ; 1 bytes @ 0x2
  3043                           
  3044  0055                     ??_ADC_GetConversion:	
  3045                           ; 1 bytes @ 0x2
  3046                           
  3047  0055                     setCallBack@p:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0055                     ___lwdiv@dividend:	
  3051                           ; 1 bytes @ 0x2
  3052                           
  3053  0055                     ___lwmod@dividend:	
  3054                           ; 2 bytes @ 0x2
  3055                           
  3056                           
  3057                           ; 2 bytes @ 0x2
  3058  0055                     	ds	1
  3059  0056                     ??_setCallBack:	
  3060  0056                     ??_SYSTEM_Initialize:	
  3061                           ; 1 bytes @ 0x3
  3062                           
  3063  0056                     i2c_open@address:	
  3064                           ; 1 bytes @ 0x3
  3065                           
  3066  0056                     i2c_setBuffer@buffer:	
  3067                           ; 1 bytes @ 0x3
  3068                           
  3069  0056                     ADC_GetConversion@channel:	
  3070                           ; 1 bytes @ 0x3
  3071                           
  3072                           
  3073                           ; 1 bytes @ 0x3
  3074  0056                     	ds	1
  3075  0057                     ??_i2c_ISR:	
  3076  0057                     ??___lwdiv:	
  3077                           ; 1 bytes @ 0x4
  3078                           
  3079  0057                     ??___lwmod:	
  3080                           ; 1 bytes @ 0x4
  3081                           
  3082  0057                     ?_FIR_filter:	
  3083                           ; 1 bytes @ 0x4
  3084                           
  3085  0057                     i2c_open@ret:	
  3086                           ; 2 bytes @ 0x4
  3087                           
  3088  0057                     setCallBack@idx:	
  3089                           ; 1 bytes @ 0x4
  3090                           
  3091  0057                     FIR_filter@sample:	
  3092                           ; 1 bytes @ 0x4
  3093                           
  3094                           
  3095                           ; 2 bytes @ 0x4
  3096  0057                     	ds	1
  3097  0058                     ?_i2c_setDataCompleteCallback:	
  3098  0058                     ?_i2c_setAddressNACKCallback:	
  3099                           ; 1 bytes @ 0x5
  3100                           
  3101  0058                     ___lwdiv@counter:	
  3102                           ; 1 bytes @ 0x5
  3103                           
  3104  0058                     ___lwmod@counter:	
  3105                           ; 1 bytes @ 0x5
  3106                           
  3107  0058                     i2c_setDataCompleteCallback@cb:	
  3108                           ; 1 bytes @ 0x5
  3109                           
  3110  0058                     i2c_setAddressNACKCallback@cb:	
  3111                           ; 2 bytes @ 0x5
  3112                           
  3113                           
  3114                           ; 2 bytes @ 0x5
  3115  0058                     	ds	1
  3116  0059                     ??_FIR_filter:	
  3117  0059                     ___lwdiv@quotient:	
  3118                           ; 1 bytes @ 0x6
  3119                           
  3120                           
  3121                           ; 2 bytes @ 0x6
  3122  0059                     	ds	1
  3123  005A                     ??_i2c_poller:	
  3124  005A                     ??_i2c_masterOperation:	
  3125                           ; 1 bytes @ 0x7
  3126                           
  3127  005A                     i2c_setDataCompleteCallback@p:	
  3128                           ; 1 bytes @ 0x7
  3129                           
  3130  005A                     i2c_setAddressNACKCallback@p:	
  3131                           ; 1 bytes @ 0x7
  3132                           
  3133                           
  3134                           ; 1 bytes @ 0x7
  3135  005A                     	ds	1
  3136  005B                     ??_i2c_setDataCompleteCallback:	
  3137  005B                     ??_i2c_setAddressNACKCallback:	
  3138                           ; 1 bytes @ 0x8
  3139                           
  3140  005B                     i2c_masterOperation@read:	
  3141                           ; 1 bytes @ 0x8
  3142                           
  3143                           
  3144                           ; 1 bytes @ 0x8
  3145  005B                     	ds	1
  3146  005C                     ?_returnStop:	
  3147  005C                     ?_returnReset:	
  3148                           ; 1 bytes @ 0x9
  3149                           
  3150  005C                     ?_i2c_restartWrite:	
  3151                           ; 1 bytes @ 0x9
  3152                           
  3153  005C                     ?_wr1RegCompleteHandler:	
  3154                           ; 1 bytes @ 0x9
  3155                           
  3156  005C                     ?_rd1RegCompleteHandler:	
  3157                           ; 1 bytes @ 0x9
  3158                           
  3159  005C                     ?_rd2RegCompleteHandler:	
  3160                           ; 1 bytes @ 0x9
  3161                           
  3162  005C                     ?_wr2RegCompleteHandler:	
  3163                           ; 1 bytes @ 0x9
  3164                           
  3165  005C                     ?_rdBlkRegCompleteHandler:	
  3166                           ; 1 bytes @ 0x9
  3167                           
  3168  005C                     i2c_masterOperation@ret:	
  3169                           ; 1 bytes @ 0x9
  3170                           
  3171  005C                     returnStop@p:	
  3172                           ; 1 bytes @ 0x9
  3173                           
  3174  005C                     returnReset@p:	
  3175                           ; 1 bytes @ 0x9
  3176                           
  3177  005C                     wr1RegCompleteHandler@p:	
  3178                           ; 1 bytes @ 0x9
  3179                           
  3180  005C                     rd1RegCompleteHandler@p:	
  3181                           ; 1 bytes @ 0x9
  3182                           
  3183  005C                     rd2RegCompleteHandler@p:	
  3184                           ; 1 bytes @ 0x9
  3185                           
  3186  005C                     wr2RegCompleteHandler@p:	
  3187                           ; 1 bytes @ 0x9
  3188                           
  3189  005C                     rdBlkRegCompleteHandler@p:	
  3190                           ; 1 bytes @ 0x9
  3191                           
  3192  005C                     i2c_restartWrite@p:	
  3193                           ; 1 bytes @ 0x9
  3194                           
  3195                           
  3196                           ; 1 bytes @ 0x9
  3197  005C                     	ds	1
  3198  005D                     ??_returnStop:	
  3199  005D                     ??_returnReset:	
  3200                           ; 1 bytes @ 0xA
  3201                           
  3202  005D                     ??_i2c_restartWrite:	
  3203                           ; 1 bytes @ 0xA
  3204                           
  3205  005D                     ??_i2c_masterWrite:	
  3206                           ; 1 bytes @ 0xA
  3207                           
  3208  005D                     ??_wr1RegCompleteHandler:	
  3209                           ; 1 bytes @ 0xA
  3210                           
  3211  005D                     ?_i2c_writeNBytes:	
  3212                           ; 1 bytes @ 0xA
  3213                           
  3214  005D                     ??_rd1RegCompleteHandler:	
  3215                           ; 1 bytes @ 0xA
  3216                           
  3217  005D                     ??_rd2RegCompleteHandler:	
  3218                           ; 1 bytes @ 0xA
  3219                           
  3220  005D                     ??_wr2RegCompleteHandler:	
  3221                           ; 1 bytes @ 0xA
  3222                           
  3223  005D                     ??_rdBlkRegCompleteHandler:	
  3224                           ; 1 bytes @ 0xA
  3225                           
  3226  005D                     ?_i2c_readDataBlock:	
  3227                           ; 1 bytes @ 0xA
  3228                           
  3229  005D                     i2c_writeNBytes@data:	
  3230                           ; 1 bytes @ 0xA
  3231                           
  3232  005D                     i2c_readDataBlock@reg:	
  3233                           ; 1 bytes @ 0xA
  3234                           
  3235                           
  3236                           ; 1 bytes @ 0xA
  3237  005D                     	ds	1
  3238  005E                     i2c_readDataBlock@data:	
  3239  005E                     i2c_writeNBytes@len:	
  3240                           ; 1 bytes @ 0xB
  3241                           
  3242                           
  3243                           ; 2 bytes @ 0xB
  3244  005E                     	ds	1
  3245  005F                     ?_intToBCD:	
  3246  005F                     i2c_readDataBlock@len:	
  3247                           ; 2 bytes @ 0xC
  3248                           
  3249  005F                     intToBCD@binaryInput:	
  3250                           ; 2 bytes @ 0xC
  3251                           
  3252                           
  3253                           ; 2 bytes @ 0xC
  3254  005F                     	ds	1
  3255  0060                     ??_i2c_writeNBytes:	
  3256  0060                     i2c_writeNBytes@address:	
  3257                           ; 1 bytes @ 0xD
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0xD
  3261  0060                     	ds	1
  3262  0061                     ??_i2c_readDataBlock:	
  3263  0061                     ?_updateRTC:	
  3264                           ; 1 bytes @ 0xE
  3265                           
  3266  0061                     ??_intToBCD:	
  3267                           ; 1 bytes @ 0xE
  3268                           
  3269  0061                     updateRTC@bcdMinute:	
  3270                           ; 1 bytes @ 0xE
  3271                           
  3272                           
  3273                           ; 1 bytes @ 0xE
  3274  0061                     	ds	1
  3275  0062                     ??_updateRTC:	
  3276  0062                     i2c_readDataBlock@address:	
  3277                           ; 1 bytes @ 0xF
  3278                           
  3279                           
  3280                           ; 1 bytes @ 0xF
  3281  0062                     	ds	1
  3282  0063                     updateRTC@bcdHour:	
  3283  0063                     i2c_readDataBlock@d:	
  3284                           ; 1 bytes @ 0x10
  3285                           
  3286                           
  3287                           ; 3 bytes @ 0x10
  3288  0063                     	ds	1
  3289  0064                     intToBCD@bcdResult:	
  3290                           
  3291                           ; 2 bytes @ 0x11
  3292  0064                     	ds	2
  3293  0066                     ??_initRTC:	
  3294  0066                     intToBCD@shift:	
  3295                           ; 1 bytes @ 0x13
  3296                           
  3297                           
  3298                           ; 2 bytes @ 0x13
  3299  0066                     	ds	2
  3300  0068                     ??_main:	
  3301                           
  3302                           ; 1 bytes @ 0x15
  3303  0068                     	ds	5
  3304                           
  3305                           	psect	maintext
  3306  0060                     __pmaintext:	
  3307 ;;
  3308 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3309 ;;
  3310 ;; *************** function _main *****************
  3311 ;; Defined at:
  3312 ;;		line 233 in file "main.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : B1F/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;Total ram usage:        5 bytes
  3331 ;; Hardware stack levels required when called:   16
  3332 ;; This function calls:
  3333 ;;		_ADC_GetConversion
  3334 ;;		_FIR_filter
  3335 ;;		_IOCBF4_SetInterruptHandler
  3336 ;;		_SYSTEM_Initialize
  3337 ;;		_TMR0_SetInterruptHandler
  3338 ;;		_bcdHourDecr
  3339 ;;		_bcdHourIncr
  3340 ;;		_bcdMinuteDecr
  3341 ;;		_bcdMinuteIncr
  3342 ;;		_i2c_readDataBlock
  3343 ;;		_initRTC
  3344 ;;		_intToBCD
  3345 ;;		_updateRTC
  3346 ;; This function is called by:
  3347 ;;		Startup code after reset
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _main
  3353  0060                     _main:	
  3354  0060                     l6280:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3357                           
  3358                           
  3359                           ;main.c: 236:     SYSTEM_Initialize();
  3360  0060  318C  249E  3180   	fcall	_SYSTEM_Initialize
  3361  0063                     l6282:	
  3362  0063  0022               	movlb	2	; select bank2
  3363  0064  1090               	bcf	16,1	;volatile
  3364  0065                     l6284:	
  3365  0065  108E               	bcf	14,1	;volatile
  3366  0066                     l6286:	
  3367  0066  120C               	bcf	12,4	;volatile
  3368  0067                     l6288:	
  3369  0067  118C               	bcf	12,3	;volatile
  3370  0068                     l6290:	
  3371                           
  3372                           ;main.c: 244:     mode = MODE_NORMAL;
  3373  0068  0020               	movlb	0	; select bank0
  3374  0069  01C7               	clrf	_mode
  3375  006A                     l6292:	
  3376                           
  3377                           ;main.c: 246:     IOCBF4_SetInterruptHandler(&secondISR);
  3378  006A  3005               	movlw	low _secondISR
  3379  006B  00D3               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3380  006C  300F               	movlw	high _secondISR
  3381  006D  00D4               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3382  006E  318A  22C8  3180   	fcall	_IOCBF4_SetInterruptHandler
  3383  0071                     l6294:	
  3384                           
  3385                           ;main.c: 247:     TMR0_SetInterruptHandler(&displayRefreshISR);
  3386  0071  30DF               	movlw	low _displayRefreshISR
  3387  0072  0020               	movlb	0	; select bank0
  3388  0073  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3389  0074  3003               	movlw	high _displayRefreshISR
  3390  0075  00D4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3391  0076  318A  22CE  3180   	fcall	_TMR0_SetInterruptHandler
  3392  0079                     l6296:	
  3393                           
  3394                           ;main.c: 252:     (INTCONbits.GIE = 1);
  3395  0079  178B               	bsf	11,7	;volatile
  3396  007A                     l6298:	
  3397                           
  3398                           ;main.c: 255:     (INTCONbits.PEIE = 1);
  3399  007A  170B               	bsf	11,6	;volatile
  3400  007B                     l6300:	
  3401                           
  3402                           ;main.c: 263:     initRTC();
  3403  007B  3186  267D  3180   	fcall	_initRTC
  3404  007E                     l889:	
  3405                           ;main.c: 265:     while (1)
  3406                           
  3407  007E  0064               	clrwdt	;# 
  3408  007F                     l6302:	
  3409                           
  3410                           ;main.c: 271:         if(PORTBbits.RB0 == 0){
  3411  007F  0020               	movlb	0	; select bank0
  3412  0080  180D               	btfsc	13,0	;volatile
  3413  0081  2883               	goto	u4241
  3414  0082  2884               	goto	u4240
  3415  0083                     u4241:	
  3416  0083  2887               	goto	l890
  3417  0084                     u4240:	
  3418  0084                     l6304:	
  3419                           
  3420                           ;main.c: 272:             flag_button_press_count[0] = 1;
  3421  0084  01B8               	clrf	_flag_button_press_count
  3422  0085  0AB8               	incf	_flag_button_press_count,f
  3423                           
  3424                           ;main.c: 273:         } else if(PORTBbits.RB1 == 0){
  3425  0086  2997               	goto	l6424
  3426  0087                     l890:	
  3427  0087  188D               	btfsc	13,1	;volatile
  3428  0088  288A               	goto	u4251
  3429  0089  288B               	goto	u4250
  3430  008A                     u4251:	
  3431  008A  288E               	goto	l892
  3432  008B                     u4250:	
  3433  008B                     l6306:	
  3434                           
  3435                           ;main.c: 274:             flag_button_press_count[1] = 1;
  3436  008B  01B9               	clrf	_flag_button_press_count+1
  3437  008C  0AB9               	incf	_flag_button_press_count+1,f
  3438                           
  3439                           ;main.c: 275:         } else if(PORTBbits.RB2 == 0){
  3440  008D  2997               	goto	l6424
  3441  008E                     l892:	
  3442  008E  190D               	btfsc	13,2	;volatile
  3443  008F  2891               	goto	u4261
  3444  0090  2892               	goto	u4260
  3445  0091                     u4261:	
  3446  0091  2895               	goto	l894
  3447  0092                     u4260:	
  3448  0092                     l6308:	
  3449                           
  3450                           ;main.c: 276:             flag_button_press_count[2] = 1;
  3451  0092  01BA               	clrf	_flag_button_press_count+2
  3452  0093  0ABA               	incf	_flag_button_press_count+2,f
  3453                           
  3454                           ;main.c: 277:         } else if(PORTBbits.RB3 == 0){
  3455  0094  2997               	goto	l6424
  3456  0095                     l894:	
  3457  0095  198D               	btfsc	13,3	;volatile
  3458  0096  2898               	goto	u4271
  3459  0097  2899               	goto	u4270
  3460  0098                     u4271:	
  3461  0098  289C               	goto	l6312
  3462  0099                     u4270:	
  3463  0099                     l6310:	
  3464                           
  3465                           ;main.c: 278:             flag_button_press_count[3] = 1;
  3466  0099  01BB               	clrf	_flag_button_press_count+3
  3467  009A  0ABB               	incf	_flag_button_press_count+3,f
  3468                           
  3469                           ;main.c: 279:         } else {
  3470  009B  2997               	goto	l6424
  3471  009C                     l6312:	
  3472                           
  3473                           ;main.c: 280:             if(flag_button_press_count[0] == 1){
  3474  009C  0338               	decf	_flag_button_press_count,w
  3475  009D  1D03               	btfss	3,2
  3476  009E  28A0               	goto	u4281
  3477  009F  28A1               	goto	u4280
  3478  00A0                     u4281:	
  3479  00A0  28FC               	goto	l6350
  3480  00A1                     u4280:	
  3481  00A1                     l6314:	
  3482                           
  3483                           ;main.c: 281:                 if(button_press_count[0] > 5 && button_press_count[0] < 10
      +                          0){
  3484  00A1  3006               	movlw	6
  3485  00A2  0234               	subwf	_button_press_count,w
  3486  00A3  1C03               	skipc
  3487  00A4  28A6               	goto	u4291
  3488  00A5  28A7               	goto	u4290
  3489  00A6                     u4291:	
  3490  00A6  28FA               	goto	l899
  3491  00A7                     u4290:	
  3492  00A7                     l6316:	
  3493  00A7  3064               	movlw	100
  3494  00A8  0234               	subwf	_button_press_count,w
  3495  00A9  1803               	skipnc
  3496  00AA  28AC               	goto	u4301
  3497  00AB  28AD               	goto	u4300
  3498  00AC                     u4301:	
  3499  00AC  28FA               	goto	l899
  3500  00AD                     u4300:	
  3501  00AD                     l6318:	
  3502                           
  3503                           ;main.c: 282:                     if(mode == MODE_NORMAL){
  3504  00AD  0847               	movf	_mode,w
  3505  00AE  1D03               	btfss	3,2
  3506  00AF  28B1               	goto	u4311
  3507  00B0  28B2               	goto	u4310
  3508  00B1                     u4311:	
  3509  00B1  28BD               	goto	l6324
  3510  00B2                     u4310:	
  3511  00B2                     l6320:	
  3512                           
  3513                           ;main.c: 283:                         mode = MODE_SET_HOUR;
  3514  00B2  3002               	movlw	2
  3515  00B3  00E8               	movwf	??_main
  3516  00B4  0868               	movf	??_main,w
  3517  00B5  00C7               	movwf	_mode
  3518                           
  3519                           ;main.c: 284:                         mode_timeout_count = 8;
  3520  00B6  3008               	movlw	8
  3521  00B7  00E8               	movwf	??_main
  3522  00B8  0868               	movf	??_main,w
  3523  00B9  00C6               	movwf	_mode_timeout_count
  3524  00BA                     l6322:	
  3525                           
  3526                           ;main.c: 285:                         flag_time_display_update = 1;
  3527  00BA  01C9               	clrf	_flag_time_display_update
  3528  00BB  0AC9               	incf	_flag_time_display_update,f
  3529                           
  3530                           ;main.c: 286:                     } else if(mode == MODE_SET_HOUR){
  3531  00BC  28FA               	goto	l899
  3532  00BD                     l6324:	
  3533  00BD  3002               	movlw	2
  3534  00BE  0647               	xorwf	_mode,w
  3535  00BF  1D03               	btfss	3,2
  3536  00C0  28C2               	goto	u4321
  3537  00C1  28C3               	goto	u4320
  3538  00C2                     u4321:	
  3539  00C2  28CC               	goto	l6330
  3540  00C3                     u4320:	
  3541  00C3                     l6326:	
  3542                           
  3543                           ;main.c: 287:                         mode = MODE_SET_MINUTE;
  3544  00C3  3003               	movlw	3
  3545  00C4  00E8               	movwf	??_main
  3546  00C5  0868               	movf	??_main,w
  3547  00C6  00C7               	movwf	_mode
  3548                           
  3549                           ;main.c: 288:                         mode_timeout_count = 8;
  3550  00C7  3008               	movlw	8
  3551  00C8  00E8               	movwf	??_main
  3552  00C9  0868               	movf	??_main,w
  3553  00CA  00C6               	movwf	_mode_timeout_count
  3554  00CB  28BA               	goto	l6322
  3555  00CC                     l6330:	
  3556  00CC  3003               	movlw	3
  3557  00CD  0647               	xorwf	_mode,w
  3558  00CE  1D03               	btfss	3,2
  3559  00CF  28D1               	goto	u4331
  3560  00D0  28D2               	goto	u4330
  3561  00D1                     u4331:	
  3562  00D1  28DB               	goto	l6336
  3563  00D2                     u4330:	
  3564  00D2                     l6332:	
  3565                           
  3566                           ;main.c: 291:                         mode = MODE_SET_MONTH;
  3567  00D2  3004               	movlw	4
  3568  00D3  00E8               	movwf	??_main
  3569  00D4  0868               	movf	??_main,w
  3570  00D5  00C7               	movwf	_mode
  3571                           
  3572                           ;main.c: 292:                         mode_timeout_count = 8;
  3573  00D6  3008               	movlw	8
  3574  00D7  00E8               	movwf	??_main
  3575  00D8  0868               	movf	??_main,w
  3576  00D9  00C6               	movwf	_mode_timeout_count
  3577  00DA  28BA               	goto	l6322
  3578  00DB                     l6336:	
  3579  00DB  3004               	movlw	4
  3580  00DC  0647               	xorwf	_mode,w
  3581  00DD  1D03               	btfss	3,2
  3582  00DE  28E0               	goto	u4341
  3583  00DF  28E1               	goto	u4340
  3584  00E0                     u4341:	
  3585  00E0  28EA               	goto	l6342
  3586  00E1                     u4340:	
  3587  00E1                     l6338:	
  3588                           
  3589                           ;main.c: 295:                         mode = MODE_SET_DATE;
  3590  00E1  3005               	movlw	5
  3591  00E2  00E8               	movwf	??_main
  3592  00E3  0868               	movf	??_main,w
  3593  00E4  00C7               	movwf	_mode
  3594                           
  3595                           ;main.c: 296:                         mode_timeout_count = 8;
  3596  00E5  3008               	movlw	8
  3597  00E6  00E8               	movwf	??_main
  3598  00E7  0868               	movf	??_main,w
  3599  00E8  00C6               	movwf	_mode_timeout_count
  3600  00E9  28BA               	goto	l6322
  3601  00EA                     l6342:	
  3602  00EA  3005               	movlw	5
  3603  00EB  0647               	xorwf	_mode,w
  3604  00EC  1D03               	btfss	3,2
  3605  00ED  28EF               	goto	u4351
  3606  00EE  28F0               	goto	u4350
  3607  00EF                     u4351:	
  3608  00EF  28F9               	goto	l6348
  3609  00F0                     u4350:	
  3610  00F0                     l6344:	
  3611                           
  3612                           ;main.c: 299:                         mode = MODE_SET_TEMP_MODE;
  3613  00F0  300A               	movlw	10
  3614  00F1  00E8               	movwf	??_main
  3615  00F2  0868               	movf	??_main,w
  3616  00F3  00C7               	movwf	_mode
  3617                           
  3618                           ;main.c: 300:                         mode_timeout_count = 8;
  3619  00F4  3008               	movlw	8
  3620  00F5  00E8               	movwf	??_main
  3621  00F6  0868               	movf	??_main,w
  3622  00F7  00C6               	movwf	_mode_timeout_count
  3623  00F8  28BA               	goto	l6322
  3624  00F9                     l6348:	
  3625                           
  3626                           ;main.c: 303:                         mode = MODE_NORMAL;
  3627  00F9  01C7               	clrf	_mode
  3628  00FA                     l899:	
  3629                           ;main.c: 306:                 }
  3630                           
  3631                           
  3632                           ;main.c: 307:                 button_press_count[0] = 0;
  3633  00FA  01B4               	clrf	_button_press_count
  3634                           
  3635                           ;main.c: 308:                 flag_button_press_count[0] = 0;
  3636  00FB  01B8               	clrf	_flag_button_press_count
  3637  00FC                     l6350:	
  3638                           
  3639                           ;main.c: 311:             if(flag_button_press_count[1] == 1){
  3640  00FC  0339               	decf	_flag_button_press_count+1,w
  3641  00FD  1D03               	btfss	3,2
  3642  00FE  2900               	goto	u4361
  3643  00FF  2901               	goto	u4360
  3644  0100                     u4361:	
  3645  0100  2933               	goto	l6376
  3646  0101                     u4360:	
  3647  0101                     l6352:	
  3648                           
  3649                           ;main.c: 312:                 if(button_press_count[1] > 5 && button_press_count[1] < 10
      +                          0){
  3650  0101  3006               	movlw	6
  3651  0102  0235               	subwf	_button_press_count+1,w
  3652  0103  1C03               	skipc
  3653  0104  2906               	goto	u4371
  3654  0105  2907               	goto	u4370
  3655  0106                     u4371:	
  3656  0106  2931               	goto	l6372
  3657  0107                     u4370:	
  3658  0107                     l6354:	
  3659  0107  3064               	movlw	100
  3660  0108  0235               	subwf	_button_press_count+1,w
  3661  0109  1803               	skipnc
  3662  010A  290C               	goto	u4381
  3663  010B  290D               	goto	u4380
  3664  010C                     u4381:	
  3665  010C  2931               	goto	l6372
  3666  010D                     u4380:	
  3667  010D                     l6356:	
  3668                           
  3669                           ;main.c: 314:                     if(mode == MODE_SET_HOUR){
  3670  010D  3002               	movlw	2
  3671  010E  0647               	xorwf	_mode,w
  3672  010F  1D03               	btfss	3,2
  3673  0110  2912               	goto	u4391
  3674  0111  2913               	goto	u4390
  3675  0112                     u4391:	
  3676  0112  2922               	goto	l6364
  3677  0113                     u4390:	
  3678  0113                     l6358:	
  3679                           
  3680                           ;main.c: 315:                         rtcData[2] = bcdHourIncr(rtcData[2]);
  3681  0113  084C               	movf	_rtcData+2,w
  3682  0114  318D  258A  3180   	fcall	_bcdHourIncr
  3683  0117  0020               	movlb	0	; select bank0
  3684  0118  00E8               	movwf	??_main
  3685  0119  0868               	movf	??_main,w
  3686  011A  00CC               	movwf	_rtcData+2
  3687  011B                     l6360:	
  3688                           
  3689                           ;main.c: 316:                         mode_timeout_count = 8;
  3690  011B  3008               	movlw	8
  3691  011C  00E8               	movwf	??_main
  3692  011D  0868               	movf	??_main,w
  3693  011E  00C6               	movwf	_mode_timeout_count
  3694  011F                     l6362:	
  3695                           
  3696                           ;main.c: 317:                         flag_time_display_update = 1;
  3697  011F  01C9               	clrf	_flag_time_display_update
  3698  0120  0AC9               	incf	_flag_time_display_update,f
  3699                           
  3700                           ;main.c: 318:                     } else if(mode == MODE_SET_MINUTE){
  3701  0121  2931               	goto	l6372
  3702  0122                     l6364:	
  3703  0122  3003               	movlw	3
  3704  0123  0647               	xorwf	_mode,w
  3705  0124  1D03               	btfss	3,2
  3706  0125  2927               	goto	u4401
  3707  0126  2928               	goto	u4400
  3708  0127                     u4401:	
  3709  0127  2931               	goto	l6372
  3710  0128                     u4400:	
  3711  0128                     l6366:	
  3712                           
  3713                           ;main.c: 319:                         rtcData[1] = bcdMinuteIncr(rtcData[1]);
  3714  0128  084B               	movf	_rtcData+1,w
  3715  0129  3187  27A4  3180   	fcall	_bcdMinuteIncr
  3716  012C  0020               	movlb	0	; select bank0
  3717  012D  00E8               	movwf	??_main
  3718  012E  0868               	movf	??_main,w
  3719  012F  00CB               	movwf	_rtcData+1
  3720  0130  291B               	goto	l6360
  3721  0131                     l6372:	
  3722                           
  3723                           ;main.c: 325:                 button_press_count[1] = 0;
  3724  0131  01B5               	clrf	_button_press_count+1
  3725  0132                     l6374:	
  3726                           
  3727                           ;main.c: 326:                 flag_button_press_count[1] = 0;
  3728  0132  01B9               	clrf	_flag_button_press_count+1
  3729  0133                     l6376:	
  3730                           
  3731                           ;main.c: 329:             if(flag_button_press_count[2] == 1){
  3732  0133  033A               	decf	_flag_button_press_count+2,w
  3733  0134  1D03               	btfss	3,2
  3734  0135  2937               	goto	u4411
  3735  0136  2938               	goto	u4410
  3736  0137                     u4411:	
  3737  0137  296A               	goto	l6402
  3738  0138                     u4410:	
  3739  0138                     l6378:	
  3740                           
  3741                           ;main.c: 330:                 if(button_press_count[2] > 5 && button_press_count[2] < 10
      +                          0){
  3742  0138  3006               	movlw	6
  3743  0139  0236               	subwf	_button_press_count+2,w
  3744  013A  1C03               	skipc
  3745  013B  293D               	goto	u4421
  3746  013C  293E               	goto	u4420
  3747  013D                     u4421:	
  3748  013D  2968               	goto	l6398
  3749  013E                     u4420:	
  3750  013E                     l6380:	
  3751  013E  3064               	movlw	100
  3752  013F  0236               	subwf	_button_press_count+2,w
  3753  0140  1803               	skipnc
  3754  0141  2943               	goto	u4431
  3755  0142  2944               	goto	u4430
  3756  0143                     u4431:	
  3757  0143  2968               	goto	l6398
  3758  0144                     u4430:	
  3759  0144                     l6382:	
  3760                           
  3761                           ;main.c: 332:                     if(mode == MODE_SET_HOUR){
  3762  0144  3002               	movlw	2
  3763  0145  0647               	xorwf	_mode,w
  3764  0146  1D03               	btfss	3,2
  3765  0147  2949               	goto	u4441
  3766  0148  294A               	goto	u4440
  3767  0149                     u4441:	
  3768  0149  2959               	goto	l6390
  3769  014A                     u4440:	
  3770  014A                     l6384:	
  3771                           
  3772                           ;main.c: 333:                         rtcData[2] = bcdHourDecr(rtcData[2]);
  3773  014A  084C               	movf	_rtcData+2,w
  3774  014B  318D  256E  3180   	fcall	_bcdHourDecr
  3775  014E  0020               	movlb	0	; select bank0
  3776  014F  00E8               	movwf	??_main
  3777  0150  0868               	movf	??_main,w
  3778  0151  00CC               	movwf	_rtcData+2
  3779  0152                     l6386:	
  3780                           
  3781                           ;main.c: 334:                         mode_timeout_count = 8;
  3782  0152  3008               	movlw	8
  3783  0153  00E8               	movwf	??_main
  3784  0154  0868               	movf	??_main,w
  3785  0155  00C6               	movwf	_mode_timeout_count
  3786  0156                     l6388:	
  3787                           
  3788                           ;main.c: 335:                         flag_time_display_update = 1;
  3789  0156  01C9               	clrf	_flag_time_display_update
  3790  0157  0AC9               	incf	_flag_time_display_update,f
  3791                           
  3792                           ;main.c: 336:                     } else if(mode == MODE_SET_MINUTE){
  3793  0158  2968               	goto	l6398
  3794  0159                     l6390:	
  3795  0159  3003               	movlw	3
  3796  015A  0647               	xorwf	_mode,w
  3797  015B  1D03               	btfss	3,2
  3798  015C  295E               	goto	u4451
  3799  015D  295F               	goto	u4450
  3800  015E                     u4451:	
  3801  015E  2968               	goto	l6398
  3802  015F                     u4450:	
  3803  015F                     l6392:	
  3804                           
  3805                           ;main.c: 337:                         rtcData[1] = bcdMinuteDecr(rtcData[1]);
  3806  015F  084B               	movf	_rtcData+1,w
  3807  0160  318F  2798  3180   	fcall	_bcdMinuteDecr
  3808  0163  0020               	movlb	0	; select bank0
  3809  0164  00E8               	movwf	??_main
  3810  0165  0868               	movf	??_main,w
  3811  0166  00CB               	movwf	_rtcData+1
  3812  0167  2952               	goto	l6386
  3813  0168                     l6398:	
  3814                           
  3815                           ;main.c: 342:                 button_press_count[2] = 0;
  3816  0168  01B6               	clrf	_button_press_count+2
  3817  0169                     l6400:	
  3818                           
  3819                           ;main.c: 343:                 flag_button_press_count[2] = 0;
  3820  0169  01BA               	clrf	_flag_button_press_count+2
  3821  016A                     l6402:	
  3822                           
  3823                           ;main.c: 346:             if(flag_button_press_count[3] == 1){
  3824  016A  033B               	decf	_flag_button_press_count+3,w
  3825  016B  1D03               	btfss	3,2
  3826  016C  296E               	goto	u4461
  3827  016D  296F               	goto	u4460
  3828  016E                     u4461:	
  3829  016E  2997               	goto	l893
  3830  016F                     u4460:	
  3831  016F                     l6404:	
  3832                           
  3833                           ;main.c: 347:                 if(button_press_count[3] > 5 && button_press_count[3] < 10
      +                          0){
  3834  016F  3006               	movlw	6
  3835  0170  0237               	subwf	_button_press_count+3,w
  3836  0171  1C03               	skipc
  3837  0172  2974               	goto	u4471
  3838  0173  2975               	goto	u4470
  3839  0174                     u4471:	
  3840  0174  2994               	goto	l921
  3841  0175                     u4470:	
  3842  0175                     l6406:	
  3843  0175  3064               	movlw	100
  3844  0176  0237               	subwf	_button_press_count+3,w
  3845  0177  1803               	skipnc
  3846  0178  297A               	goto	u4481
  3847  0179  297B               	goto	u4480
  3848  017A                     u4481:	
  3849  017A  2994               	goto	l921
  3850  017B                     u4480:	
  3851  017B                     l6408:	
  3852                           
  3853                           ;main.c: 349:                     if((mode == MODE_SET_HOUR) || (mode == MODE_SET_MINUTE
      +                          )){
  3854  017B  3002               	movlw	2
  3855  017C  0647               	xorwf	_mode,w
  3856  017D  1903               	btfsc	3,2
  3857  017E  2980               	goto	u4491
  3858  017F  2981               	goto	u4490
  3859  0180                     u4491:	
  3860  0180  2987               	goto	l6412
  3861  0181                     u4490:	
  3862  0181                     l6410:	
  3863  0181  3003               	movlw	3
  3864  0182  0647               	xorwf	_mode,w
  3865  0183  1D03               	btfss	3,2
  3866  0184  2986               	goto	u4501
  3867  0185  2987               	goto	u4500
  3868  0186                     u4501:	
  3869  0186  2990               	goto	l6414
  3870  0187                     u4500:	
  3871  0187                     l6412:	
  3872                           
  3873                           ;main.c: 350:                         updateRTC(rtcData[2],rtcData[1]);
  3874  0187  084B               	movf	_rtcData+1,w
  3875  0188  00E8               	movwf	??_main
  3876  0189  0868               	movf	??_main,w
  3877  018A  00E1               	movwf	updateRTC@bcdMinute
  3878  018B  084C               	movf	_rtcData+2,w
  3879  018C  318D  2553  3180   	fcall	_updateRTC
  3880                           
  3881                           ;main.c: 351:                     } else if((mode == MODE_SET_MONTH) || (mode == MODE_SE
      +                          T_DATE)){
  3882  018F  2990               	goto	l6420
  3883  0190                     l6414:	
  3884  0190                     l6420:	
  3885                           
  3886                           ;main.c: 357:                     mode = MODE_NORMAL;
  3887  0190  0020               	movlb	0	; select bank0
  3888  0191  01C7               	clrf	_mode
  3889  0192                     l6422:	
  3890                           
  3891                           ;main.c: 358:                     flag_time_display_update = 1;
  3892  0192  01C9               	clrf	_flag_time_display_update
  3893  0193  0AC9               	incf	_flag_time_display_update,f
  3894  0194                     l921:	
  3895                           ;main.c: 359:                 }
  3896                           
  3897                           
  3898                           ;main.c: 360:                 button_press_count[3] = 0;
  3899  0194  01B7               	clrf	_button_press_count+3
  3900                           
  3901                           ;main.c: 361:                 flag_button_press_count[3] = 0;
  3902  0195  01BB               	clrf	_flag_button_press_count+3
  3903  0196  2997               	goto	l6424
  3904  0197                     l893:	
  3905  0197                     l6424:	
  3906                           
  3907                           ;main.c: 365:         if(mode == MODE_NORMAL){
  3908  0197  0847               	movf	_mode,w
  3909  0198  1D03               	btfss	3,2
  3910  0199  299B               	goto	u4511
  3911  019A  299C               	goto	u4510
  3912  019B                     u4511:	
  3913  019B  29FC               	goto	l6446
  3914  019C                     u4510:	
  3915  019C                     l6426:	
  3916                           
  3917                           ;main.c: 366:             if(flag_time_display_update == 1){
  3918  019C  0349               	decf	_flag_time_display_update,w
  3919  019D  1D03               	btfss	3,2
  3920  019E  29A0               	goto	u4521
  3921  019F  29A1               	goto	u4520
  3922  01A0                     u4521:	
  3923  01A0  287E               	goto	l889
  3924  01A1                     u4520:	
  3925  01A1                     l6428:	
  3926                           
  3927                           ;main.c: 367:                 i2c_readDataBlock(0x68,0x00,rtcData,sizeof(rtcData));
  3928  01A1  01DD               	clrf	i2c_readDataBlock@reg
  3929  01A2  304A               	movlw	(low (_rtcData| 0))& (0+255)
  3930  01A3  00E8               	movwf	??_main
  3931  01A4  0868               	movf	??_main,w
  3932  01A5  00DE               	movwf	i2c_readDataBlock@data
  3933  01A6  3009               	movlw	9
  3934  01A7  00DF               	movwf	i2c_readDataBlock@len
  3935  01A8  3000               	movlw	0
  3936  01A9  00E0               	movwf	i2c_readDataBlock@len+1
  3937  01AA  3068               	movlw	104
  3938  01AB  3186  26BB  3180   	fcall	_i2c_readDataBlock
  3939  01AE                     l6430:	
  3940                           
  3941                           ;main.c: 369:                 displayBuff[0] = displayNum[((rtcData[2] >> 4) & 0x03)];
  3942  01AE  0020               	movlb	0	; select bank0
  3943  01AF  084C               	movf	_rtcData+2,w
  3944  01B0  00E8               	movwf	??_main
  3945  01B1  3004               	movlw	4
  3946  01B2                     u4535:	
  3947  01B2  36E8               	lsrf	??_main,f
  3948  01B3  0B89               	decfsz	9,f
  3949  01B4  29B2               	goto	u4535
  3950  01B5  0868               	movf	??_main,w
  3951  01B6  3903               	andlw	3
  3952  01B7  3E20               	addlw	low (_displayNum| (0+32768))
  3953  01B8  0084               	movwf	4
  3954  01B9  3090               	movlw	high (_displayNum| (0+32768))
  3955  01BA  1803               	skipnc
  3956  01BB  3E01               	addlw	1
  3957  01BC  0085               	movwf	5
  3958  01BD  0800               	movf	0,w	;code access
  3959  01BE  00E9               	movwf	??_main+1
  3960  01BF  0869               	movf	??_main+1,w
  3961  01C0  00BC               	movwf	_displayBuff
  3962  01C1                     l6432:	
  3963                           
  3964                           ;main.c: 370:                 displayBuff[1] = displayNum[(rtcData[2]& 0x0F)];
  3965  01C1  084C               	movf	_rtcData+2,w
  3966  01C2  390F               	andlw	15
  3967  01C3  3E20               	addlw	low (_displayNum| (0+32768))
  3968  01C4  0084               	movwf	4
  3969  01C5  3090               	movlw	high (_displayNum| (0+32768))
  3970  01C6  1803               	skipnc
  3971  01C7  3E01               	addlw	1
  3972  01C8  0085               	movwf	5
  3973  01C9  0800               	movf	0,w	;code access
  3974  01CA  00E8               	movwf	??_main
  3975  01CB  0868               	movf	??_main,w
  3976  01CC  00BD               	movwf	_displayBuff+1
  3977  01CD                     l6434:	
  3978                           
  3979                           ;main.c: 371:                 displayBuff[2] = displayNum[((rtcData[1] >> 4) & 0x0F)];
  3980  01CD  084B               	movf	_rtcData+1,w
  3981  01CE  00E8               	movwf	??_main
  3982  01CF  3004               	movlw	4
  3983  01D0                     u4545:	
  3984  01D0  36E8               	lsrf	??_main,f
  3985  01D1  0B89               	decfsz	9,f
  3986  01D2  29D0               	goto	u4545
  3987  01D3  0868               	movf	??_main,w
  3988  01D4  390F               	andlw	15
  3989  01D5  3E20               	addlw	low (_displayNum| (0+32768))
  3990  01D6  0084               	movwf	4
  3991  01D7  3090               	movlw	high (_displayNum| (0+32768))
  3992  01D8  1803               	skipnc
  3993  01D9  3E01               	addlw	1
  3994  01DA  0085               	movwf	5
  3995  01DB  0800               	movf	0,w	;code access
  3996  01DC  00E9               	movwf	??_main+1
  3997  01DD  0869               	movf	??_main+1,w
  3998  01DE  00BE               	movwf	_displayBuff+2
  3999  01DF                     l6436:	
  4000                           
  4001                           ;main.c: 372:                 displayBuff[3] = displayNum[(rtcData[1]& 0x0F)];
  4002  01DF  084B               	movf	_rtcData+1,w
  4003  01E0  390F               	andlw	15
  4004  01E1  3E20               	addlw	low (_displayNum| (0+32768))
  4005  01E2  0084               	movwf	4
  4006  01E3  3090               	movlw	high (_displayNum| (0+32768))
  4007  01E4  1803               	skipnc
  4008  01E5  3E01               	addlw	1
  4009  01E6  0085               	movwf	5
  4010  01E7  0800               	movf	0,w	;code access
  4011  01E8  00E8               	movwf	??_main
  4012  01E9  0868               	movf	??_main,w
  4013  01EA  00BF               	movwf	_displayBuff+3
  4014  01EB                     l6438:	
  4015                           
  4016                           ;main.c: 374:                 flag_time_display_update = 0;
  4017  01EB  01C9               	clrf	_flag_time_display_update
  4018  01EC                     l6440:	
  4019                           
  4020                           ;main.c: 376:                 if((rtcData[0]& 0x0F) == 0x07){
  4021  01EC  300F               	movlw	15
  4022  01ED  054A               	andwf	_rtcData,w
  4023  01EE  00E8               	movwf	??_main
  4024  01EF  3007               	movlw	7
  4025  01F0  0668               	xorwf	??_main,w
  4026  01F1  1D03               	btfss	3,2
  4027  01F2  29F4               	goto	u4551
  4028  01F3  29F5               	goto	u4550
  4029  01F4                     u4551:	
  4030  01F4  2BDC               	goto	l934
  4031  01F5                     u4550:	
  4032  01F5                     l6442:	
  4033                           
  4034                           ;main.c: 377:                     mode = MODE_TEMPERATURE;
  4035  01F5  01C7               	clrf	_mode
  4036  01F6  0AC7               	incf	_mode,f
  4037  01F7                     l6444:	
  4038                           
  4039                           ;main.c: 378:                     mode_timeout_count = 3;
  4040  01F7  3003               	movlw	3
  4041  01F8  00E8               	movwf	??_main
  4042  01F9  0868               	movf	??_main,w
  4043  01FA  00C6               	movwf	_mode_timeout_count
  4044  01FB  287E               	goto	l889
  4045  01FC                     l6446:	
  4046  01FC  0347               	decf	_mode,w
  4047  01FD  1D03               	btfss	3,2
  4048  01FE  2A00               	goto	u4561
  4049  01FF  2A01               	goto	u4560
  4050  0200                     u4561:	
  4051  0200  2A68               	goto	l6462
  4052  0201                     u4560:	
  4053  0201                     l6448:	
  4054                           
  4055                           ;main.c: 382:             if(flag_time_display_update == 1){
  4056  0201  0349               	decf	_flag_time_display_update,w
  4057  0202  1D03               	btfss	3,2
  4058  0203  2A05               	goto	u4571
  4059  0204  2A06               	goto	u4570
  4060  0205                     u4571:	
  4061  0205  287E               	goto	l889
  4062  0206                     u4570:	
  4063  0206                     l937:	
  4064                           ;main.c: 384:                 do { LATAbits.LATA7 = 0; } while(0);
  4065                           
  4066  0206  0022               	movlb	2	; select bank2
  4067  0207  138C               	bcf	12,7	;volatile
  4068  0208                     l6450:	
  4069                           
  4070                           ;main.c: 386:                 bcd_temp = intToBCD(FIR_filter(ADC_GetConversion(channel_A
      +                          N13)));
  4071  0208  300D               	movlw	13
  4072  0209  318D  25E3  3180   	fcall	_ADC_GetConversion
  4073  020C  0020               	movlb	0	; select bank0
  4074  020D  0854               	movf	?_ADC_GetConversion+1,w
  4075  020E  00D8               	movwf	FIR_filter@sample+1
  4076  020F  0853               	movf	?_ADC_GetConversion,w
  4077  0210  00D7               	movwf	FIR_filter@sample
  4078  0211  3185  25ED  3180   	fcall	_FIR_filter
  4079  0214  0020               	movlb	0	; select bank0
  4080  0215  0858               	movf	?_FIR_filter+1,w
  4081  0216  00E0               	movwf	intToBCD@binaryInput+1
  4082  0217  0857               	movf	?_FIR_filter,w
  4083  0218  00DF               	movwf	intToBCD@binaryInput
  4084  0219  3186  2636  3180   	fcall	_intToBCD
  4085  021C  0020               	movlb	0	; select bank0
  4086  021D  0860               	movf	?_intToBCD+1,w
  4087  021E  00C3               	movwf	_bcd_temp+1
  4088  021F  085F               	movf	?_intToBCD,w
  4089  0220  00C2               	movwf	_bcd_temp
  4090  0221                     l6452:	
  4091                           
  4092                           ;main.c: 388:                 displayBuff[0] = displayNum[((bcd_temp >> 8) & 0x0F)];
  4093  0221  0843               	movf	_bcd_temp+1,w
  4094  0222  00E9               	movwf	??_main+1
  4095  0223  0842               	movf	_bcd_temp,w
  4096  0224  00E8               	movwf	??_main
  4097  0225  0869               	movf	??_main+1,w
  4098  0226  00E8               	movwf	??_main
  4099  0227  01E9               	clrf	??_main+1
  4100  0228  300F               	movlw	15
  4101  0229  0568               	andwf	??_main,w
  4102  022A  00EA               	movwf	??_main+2
  4103  022B  3000               	movlw	0
  4104  022C  0569               	andwf	??_main+1,w
  4105  022D  00EB               	movwf	??_main+3
  4106  022E  3020               	movlw	low (_displayNum| (0+32768))
  4107  022F  076A               	addwf	??_main+2,w
  4108  0230  0084               	movwf	4
  4109  0231  3090               	movlw	high (_displayNum| (0+32768))
  4110  0232  3D6B               	addwfc	??_main+3,w
  4111  0233  0085               	movwf	5
  4112  0234  0800               	movf	0,w	;code access
  4113  0235  00EC               	movwf	??_main+4
  4114  0236  086C               	movf	??_main+4,w
  4115  0237  00BC               	movwf	_displayBuff
  4116  0238                     l6454:	
  4117                           
  4118                           ;main.c: 389:                 displayBuff[1] = displayNum[((bcd_temp >> 4) & 0x0F)] | (1
      +                           << 0);
  4119  0238  0843               	movf	_bcd_temp+1,w
  4120  0239  00E9               	movwf	??_main+1
  4121  023A  0842               	movf	_bcd_temp,w
  4122  023B  00E8               	movwf	??_main
  4123  023C  3004               	movlw	4
  4124  023D                     u4585:	
  4125  023D  36E9               	lsrf	??_main+1,f
  4126  023E  0CE8               	rrf	??_main,f
  4127  023F  0B89               	decfsz	9,f
  4128  0240  2A3D               	goto	u4585
  4129  0241  300F               	movlw	15
  4130  0242  0568               	andwf	??_main,w
  4131  0243  00EA               	movwf	??_main+2
  4132  0244  3000               	movlw	0
  4133  0245  0569               	andwf	??_main+1,w
  4134  0246  00EB               	movwf	??_main+3
  4135  0247  3020               	movlw	low (_displayNum| (0+32768))
  4136  0248  076A               	addwf	??_main+2,w
  4137  0249  0084               	movwf	4
  4138  024A  3090               	movlw	high (_displayNum| (0+32768))
  4139  024B  3D6B               	addwfc	??_main+3,w
  4140  024C  0085               	movwf	5
  4141  024D  0800               	movf	0,w	;code access
  4142  024E  3801               	iorlw	1
  4143  024F  00EC               	movwf	??_main+4
  4144  0250  086C               	movf	??_main+4,w
  4145  0251  00BD               	movwf	_displayBuff+1
  4146  0252                     l6456:	
  4147                           
  4148                           ;main.c: 390:                 displayBuff[2] = displayNum[(bcd_temp & 0x0F)];
  4149  0252  300F               	movlw	15
  4150  0253  0542               	andwf	_bcd_temp,w
  4151  0254  00E8               	movwf	??_main
  4152  0255  3000               	movlw	0
  4153  0256  0543               	andwf	_bcd_temp+1,w
  4154  0257  00E9               	movwf	??_main+1
  4155  0258  3020               	movlw	low (_displayNum| (0+32768))
  4156  0259  0768               	addwf	??_main,w
  4157  025A  0084               	movwf	4
  4158  025B  3090               	movlw	high (_displayNum| (0+32768))
  4159  025C  3D69               	addwfc	??_main+1,w
  4160  025D  0085               	movwf	5
  4161  025E  0800               	movf	0,w	;code access
  4162  025F  00EA               	movwf	??_main+2
  4163  0260  086A               	movf	??_main+2,w
  4164  0261  00BE               	movwf	_displayBuff+2
  4165  0262                     l6458:	
  4166                           
  4167                           ;main.c: 391:                 displayBuff[3] = ((1 << 7) | (1 << 4) | (1 << 3) | (1 << 2
      +                          ));
  4168  0262  309C               	movlw	156
  4169  0263  00E8               	movwf	??_main
  4170  0264  0868               	movf	??_main,w
  4171  0265  00BF               	movwf	_displayBuff+3
  4172  0266                     l6460:	
  4173                           
  4174                           ;main.c: 393:                 flag_time_display_update = 0;
  4175  0266  01C9               	clrf	_flag_time_display_update
  4176  0267  287E               	goto	l889
  4177  0268                     l6462:	
  4178  0268  3002               	movlw	2
  4179  0269  0647               	xorwf	_mode,w
  4180  026A  1D03               	btfss	3,2
  4181  026B  2A6D               	goto	u4591
  4182  026C  2A6E               	goto	u4590
  4183  026D                     u4591:	
  4184  026D  2AB9               	goto	l6478
  4185  026E                     u4590:	
  4186  026E                     l6464:	
  4187                           
  4188                           ;main.c: 396:             if(flag_time_display_update == 1){
  4189  026E  0349               	decf	_flag_time_display_update,w
  4190  026F  1D03               	btfss	3,2
  4191  0270  2A72               	goto	u4601
  4192  0271  2A73               	goto	u4600
  4193  0272                     u4601:	
  4194  0272  287E               	goto	l889
  4195  0273                     u4600:	
  4196  0273                     l942:	
  4197                           ;main.c: 397:                 do { LATAbits.LATA7 = 1; } while(0);
  4198                           
  4199  0273  0022               	movlb	2	; select bank2
  4200  0274  178C               	bsf	12,7	;volatile
  4201  0275                     l6466:	
  4202                           
  4203                           ;main.c: 398:                 displayBuff[0] = displayNum[((rtcData[2] >> 4) & 0x03)];
  4204  0275  0020               	movlb	0	; select bank0
  4205  0276  084C               	movf	_rtcData+2,w
  4206  0277  00E8               	movwf	??_main
  4207  0278  3004               	movlw	4
  4208  0279                     u4615:	
  4209  0279  36E8               	lsrf	??_main,f
  4210  027A  0B89               	decfsz	9,f
  4211  027B  2A79               	goto	u4615
  4212  027C  0868               	movf	??_main,w
  4213  027D  3903               	andlw	3
  4214  027E  3E20               	addlw	low (_displayNum| (0+32768))
  4215  027F  0084               	movwf	4
  4216  0280  3090               	movlw	high (_displayNum| (0+32768))
  4217  0281  1803               	skipnc
  4218  0282  3E01               	addlw	1
  4219  0283  0085               	movwf	5
  4220  0284  0800               	movf	0,w	;code access
  4221  0285  00E9               	movwf	??_main+1
  4222  0286  0869               	movf	??_main+1,w
  4223  0287  00BC               	movwf	_displayBuff
  4224  0288                     l6468:	
  4225                           
  4226                           ;main.c: 399:                 displayBuff[1] = displayNum[(rtcData[2]& 0x0F)];
  4227  0288  084C               	movf	_rtcData+2,w
  4228  0289  390F               	andlw	15
  4229  028A  3E20               	addlw	low (_displayNum| (0+32768))
  4230  028B  0084               	movwf	4
  4231  028C  3090               	movlw	high (_displayNum| (0+32768))
  4232  028D  1803               	skipnc
  4233  028E  3E01               	addlw	1
  4234  028F  0085               	movwf	5
  4235  0290  0800               	movf	0,w	;code access
  4236  0291  00E8               	movwf	??_main
  4237  0292  0868               	movf	??_main,w
  4238  0293  00BD               	movwf	_displayBuff+1
  4239  0294                     l6470:	
  4240                           
  4241                           ;main.c: 400:                 displayBuff[2] = displayNum[((rtcData[1] >> 4) & 0x0F)];
  4242  0294  084B               	movf	_rtcData+1,w
  4243  0295  00E8               	movwf	??_main
  4244  0296  3004               	movlw	4
  4245  0297                     u4625:	
  4246  0297  36E8               	lsrf	??_main,f
  4247  0298  0B89               	decfsz	9,f
  4248  0299  2A97               	goto	u4625
  4249  029A  0868               	movf	??_main,w
  4250  029B  390F               	andlw	15
  4251  029C  3E20               	addlw	low (_displayNum| (0+32768))
  4252  029D  0084               	movwf	4
  4253  029E  3090               	movlw	high (_displayNum| (0+32768))
  4254  029F  1803               	skipnc
  4255  02A0  3E01               	addlw	1
  4256  02A1  0085               	movwf	5
  4257  02A2  0800               	movf	0,w	;code access
  4258  02A3  00E9               	movwf	??_main+1
  4259  02A4  0869               	movf	??_main+1,w
  4260  02A5  00BE               	movwf	_displayBuff+2
  4261                           
  4262                           ;main.c: 401:                 displayBuff[3] = displayNum[(rtcData[1]& 0x0F)];
  4263  02A6  084B               	movf	_rtcData+1,w
  4264  02A7  390F               	andlw	15
  4265  02A8  3E20               	addlw	low (_displayNum| (0+32768))
  4266  02A9  0084               	movwf	4
  4267  02AA  3090               	movlw	high (_displayNum| (0+32768))
  4268  02AB  1803               	skipnc
  4269  02AC  3E01               	addlw	1
  4270  02AD  0085               	movwf	5
  4271  02AE  0800               	movf	0,w	;code access
  4272  02AF  00E8               	movwf	??_main
  4273  02B0  0868               	movf	??_main,w
  4274  02B1  00BF               	movwf	_displayBuff+3
  4275  02B2                     l6472:	
  4276                           
  4277                           ;main.c: 402:                 if(flag_dot_blink){
  4278  02B2  0848               	movf	_flag_dot_blink,w
  4279  02B3  1903               	btfsc	3,2
  4280  02B4  2AB6               	goto	u4631
  4281  02B5  2AB7               	goto	u4630
  4282  02B6                     u4631:	
  4283  02B6  2A66               	goto	l6460
  4284  02B7                     u4630:	
  4285  02B7                     l6474:	
  4286                           
  4287                           ;main.c: 403:                     displayBuff[1] |= (1 << 0);
  4288  02B7  143D               	bsf	_displayBuff+1,0
  4289  02B8  2A66               	goto	l6460
  4290  02B9                     l6478:	
  4291  02B9  3003               	movlw	3
  4292  02BA  0647               	xorwf	_mode,w
  4293  02BB  1D03               	btfss	3,2
  4294  02BC  2ABE               	goto	u4641
  4295  02BD  2ABF               	goto	u4640
  4296  02BE                     u4641:	
  4297  02BE  2B0A               	goto	l6494
  4298  02BF                     u4640:	
  4299  02BF                     l6480:	
  4300                           
  4301                           ;main.c: 408:             if(flag_time_display_update == 1){
  4302  02BF  0349               	decf	_flag_time_display_update,w
  4303  02C0  1D03               	btfss	3,2
  4304  02C1  2AC3               	goto	u4651
  4305  02C2  2AC4               	goto	u4650
  4306  02C3                     u4651:	
  4307  02C3  287E               	goto	l889
  4308  02C4                     u4650:	
  4309  02C4                     l948:	
  4310                           ;main.c: 409:                 do { LATAbits.LATA7 = 1; } while(0);
  4311                           
  4312  02C4  0022               	movlb	2	; select bank2
  4313  02C5  178C               	bsf	12,7	;volatile
  4314  02C6                     l6482:	
  4315                           
  4316                           ;main.c: 410:                 displayBuff[0] = displayNum[((rtcData[2] >> 4) & 0x03)];
  4317  02C6  0020               	movlb	0	; select bank0
  4318  02C7  084C               	movf	_rtcData+2,w
  4319  02C8  00E8               	movwf	??_main
  4320  02C9  3004               	movlw	4
  4321  02CA                     u4665:	
  4322  02CA  36E8               	lsrf	??_main,f
  4323  02CB  0B89               	decfsz	9,f
  4324  02CC  2ACA               	goto	u4665
  4325  02CD  0868               	movf	??_main,w
  4326  02CE  3903               	andlw	3
  4327  02CF  3E20               	addlw	low (_displayNum| (0+32768))
  4328  02D0  0084               	movwf	4
  4329  02D1  3090               	movlw	high (_displayNum| (0+32768))
  4330  02D2  1803               	skipnc
  4331  02D3  3E01               	addlw	1
  4332  02D4  0085               	movwf	5
  4333  02D5  0800               	movf	0,w	;code access
  4334  02D6  00E9               	movwf	??_main+1
  4335  02D7  0869               	movf	??_main+1,w
  4336  02D8  00BC               	movwf	_displayBuff
  4337  02D9                     l6484:	
  4338                           
  4339                           ;main.c: 411:                 displayBuff[1] = displayNum[(rtcData[2]& 0x0F)];
  4340  02D9  084C               	movf	_rtcData+2,w
  4341  02DA  390F               	andlw	15
  4342  02DB  3E20               	addlw	low (_displayNum| (0+32768))
  4343  02DC  0084               	movwf	4
  4344  02DD  3090               	movlw	high (_displayNum| (0+32768))
  4345  02DE  1803               	skipnc
  4346  02DF  3E01               	addlw	1
  4347  02E0  0085               	movwf	5
  4348  02E1  0800               	movf	0,w	;code access
  4349  02E2  00E8               	movwf	??_main
  4350  02E3  0868               	movf	??_main,w
  4351  02E4  00BD               	movwf	_displayBuff+1
  4352  02E5                     l6486:	
  4353                           
  4354                           ;main.c: 412:                 displayBuff[2] = displayNum[((rtcData[1] >> 4) & 0x0F)];
  4355  02E5  084B               	movf	_rtcData+1,w
  4356  02E6  00E8               	movwf	??_main
  4357  02E7  3004               	movlw	4
  4358  02E8                     u4675:	
  4359  02E8  36E8               	lsrf	??_main,f
  4360  02E9  0B89               	decfsz	9,f
  4361  02EA  2AE8               	goto	u4675
  4362  02EB  0868               	movf	??_main,w
  4363  02EC  390F               	andlw	15
  4364  02ED  3E20               	addlw	low (_displayNum| (0+32768))
  4365  02EE  0084               	movwf	4
  4366  02EF  3090               	movlw	high (_displayNum| (0+32768))
  4367  02F0  1803               	skipnc
  4368  02F1  3E01               	addlw	1
  4369  02F2  0085               	movwf	5
  4370  02F3  0800               	movf	0,w	;code access
  4371  02F4  00E9               	movwf	??_main+1
  4372  02F5  0869               	movf	??_main+1,w
  4373  02F6  00BE               	movwf	_displayBuff+2
  4374                           
  4375                           ;main.c: 413:                 displayBuff[3] = displayNum[(rtcData[1]& 0x0F)];
  4376  02F7  084B               	movf	_rtcData+1,w
  4377  02F8  390F               	andlw	15
  4378  02F9  3E20               	addlw	low (_displayNum| (0+32768))
  4379  02FA  0084               	movwf	4
  4380  02FB  3090               	movlw	high (_displayNum| (0+32768))
  4381  02FC  1803               	skipnc
  4382  02FD  3E01               	addlw	1
  4383  02FE  0085               	movwf	5
  4384  02FF  0800               	movf	0,w	;code access
  4385  0300  00E8               	movwf	??_main
  4386  0301  0868               	movf	??_main,w
  4387  0302  00BF               	movwf	_displayBuff+3
  4388  0303                     l6488:	
  4389                           
  4390                           ;main.c: 414:                 if(flag_dot_blink){
  4391  0303  0848               	movf	_flag_dot_blink,w
  4392  0304  1903               	btfsc	3,2
  4393  0305  2B07               	goto	u4681
  4394  0306  2B08               	goto	u4680
  4395  0307                     u4681:	
  4396  0307  2A66               	goto	l6460
  4397  0308                     u4680:	
  4398  0308                     l6490:	
  4399                           
  4400                           ;main.c: 415:                     displayBuff[3] |= (1 << 0);
  4401  0308  143F               	bsf	_displayBuff+3,0
  4402  0309  2A66               	goto	l6460
  4403  030A                     l6494:	
  4404  030A  3004               	movlw	4
  4405  030B  0647               	xorwf	_mode,w
  4406  030C  1D03               	btfss	3,2
  4407  030D  2B0F               	goto	u4691
  4408  030E  2B10               	goto	u4690
  4409  030F                     u4691:	
  4410  030F  2B5A               	goto	l6510
  4411  0310                     u4690:	
  4412  0310                     l6496:	
  4413                           
  4414                           ;main.c: 420:             if(flag_time_display_update == 1){
  4415  0310  0349               	decf	_flag_time_display_update,w
  4416  0311  1D03               	btfss	3,2
  4417  0312  2B14               	goto	u4701
  4418  0313  2B15               	goto	u4700
  4419  0314                     u4701:	
  4420  0314  287E               	goto	l889
  4421  0315                     u4700:	
  4422  0315                     l954:	
  4423                           ;main.c: 421:                 do { LATAbits.LATA7 = 1; } while(0);
  4424                           
  4425  0315  0022               	movlb	2	; select bank2
  4426  0316  178C               	bsf	12,7	;volatile
  4427  0317                     l6498:	
  4428                           
  4429                           ;main.c: 422:                 displayBuff[0] = displayNum[((rtcData[4] >> 4) & 0x03)];
  4430  0317  0020               	movlb	0	; select bank0
  4431  0318  084E               	movf	_rtcData+4,w
  4432  0319  00E8               	movwf	??_main
  4433  031A  3004               	movlw	4
  4434  031B                     u4715:	
  4435  031B  36E8               	lsrf	??_main,f
  4436  031C  0B89               	decfsz	9,f
  4437  031D  2B1B               	goto	u4715
  4438  031E  0868               	movf	??_main,w
  4439  031F  3903               	andlw	3
  4440  0320  3E20               	addlw	low (_displayNum| (0+32768))
  4441  0321  0084               	movwf	4
  4442  0322  3090               	movlw	high (_displayNum| (0+32768))
  4443  0323  1803               	skipnc
  4444  0324  3E01               	addlw	1
  4445  0325  0085               	movwf	5
  4446  0326  0800               	movf	0,w	;code access
  4447  0327  00E9               	movwf	??_main+1
  4448  0328  0869               	movf	??_main+1,w
  4449  0329  00BC               	movwf	_displayBuff
  4450  032A                     l6500:	
  4451                           
  4452                           ;main.c: 423:                 displayBuff[1] = displayNum[(rtcData[4]& 0x0F)];
  4453  032A  084E               	movf	_rtcData+4,w
  4454  032B  390F               	andlw	15
  4455  032C  3E20               	addlw	low (_displayNum| (0+32768))
  4456  032D  0084               	movwf	4
  4457  032E  3090               	movlw	high (_displayNum| (0+32768))
  4458  032F  1803               	skipnc
  4459  0330  3E01               	addlw	1
  4460  0331  0085               	movwf	5
  4461  0332  0800               	movf	0,w	;code access
  4462  0333  00E8               	movwf	??_main
  4463  0334  0868               	movf	??_main,w
  4464  0335  00BD               	movwf	_displayBuff+1
  4465  0336                     l6502:	
  4466                           
  4467                           ;main.c: 424:                 displayBuff[2] = displayNum[((rtcData[5] >> 4) & 0x0F)];
  4468  0336  084F               	movf	_rtcData+5,w
  4469  0337  00E8               	movwf	??_main
  4470  0338  3004               	movlw	4
  4471  0339                     u4725:	
  4472  0339  36E8               	lsrf	??_main,f
  4473  033A  0B89               	decfsz	9,f
  4474  033B  2B39               	goto	u4725
  4475  033C  0868               	movf	??_main,w
  4476  033D  390F               	andlw	15
  4477  033E  3E20               	addlw	low (_displayNum| (0+32768))
  4478  033F  0084               	movwf	4
  4479  0340  3090               	movlw	high (_displayNum| (0+32768))
  4480  0341  1803               	skipnc
  4481  0342  3E01               	addlw	1
  4482  0343  0085               	movwf	5
  4483  0344  0800               	movf	0,w	;code access
  4484  0345  00E9               	movwf	??_main+1
  4485  0346  0869               	movf	??_main+1,w
  4486  0347  00BE               	movwf	_displayBuff+2
  4487                           
  4488                           ;main.c: 425:                 displayBuff[3] = displayNum[(rtcData[5]& 0x0F)];
  4489  0348  084F               	movf	_rtcData+5,w
  4490  0349  390F               	andlw	15
  4491  034A  3E20               	addlw	low (_displayNum| (0+32768))
  4492  034B  0084               	movwf	4
  4493  034C  3090               	movlw	high (_displayNum| (0+32768))
  4494  034D  1803               	skipnc
  4495  034E  3E01               	addlw	1
  4496  034F  0085               	movwf	5
  4497  0350  0800               	movf	0,w	;code access
  4498  0351  00E8               	movwf	??_main
  4499  0352  0868               	movf	??_main,w
  4500  0353  00BF               	movwf	_displayBuff+3
  4501  0354                     l6504:	
  4502                           
  4503                           ;main.c: 426:                 if(flag_dot_blink){
  4504  0354  0848               	movf	_flag_dot_blink,w
  4505  0355  1903               	btfsc	3,2
  4506  0356  2B58               	goto	u4731
  4507  0357  2B59               	goto	u4730
  4508  0358                     u4731:	
  4509  0358  2A66               	goto	l6460
  4510  0359                     u4730:	
  4511  0359  2B08               	goto	l6490
  4512  035A                     l6510:	
  4513  035A  3005               	movlw	5
  4514  035B  0647               	xorwf	_mode,w
  4515  035C  1D03               	btfss	3,2
  4516  035D  2B5F               	goto	u4741
  4517  035E  2B60               	goto	u4740
  4518  035F                     u4741:	
  4519  035F  2BAA               	goto	l6526
  4520  0360                     u4740:	
  4521  0360                     l6512:	
  4522                           
  4523                           ;main.c: 432:             if(flag_time_display_update == 1){
  4524  0360  0349               	decf	_flag_time_display_update,w
  4525  0361  1D03               	btfss	3,2
  4526  0362  2B64               	goto	u4751
  4527  0363  2B65               	goto	u4750
  4528  0364                     u4751:	
  4529  0364  287E               	goto	l889
  4530  0365                     u4750:	
  4531  0365                     l960:	
  4532                           ;main.c: 433:                 do { LATAbits.LATA7 = 1; } while(0);
  4533                           
  4534  0365  0022               	movlb	2	; select bank2
  4535  0366  178C               	bsf	12,7	;volatile
  4536  0367                     l6514:	
  4537                           
  4538                           ;main.c: 434:                 displayBuff[0] = displayNum[((rtcData[4] >> 4) & 0x03)];
  4539  0367  0020               	movlb	0	; select bank0
  4540  0368  084E               	movf	_rtcData+4,w
  4541  0369  00E8               	movwf	??_main
  4542  036A  3004               	movlw	4
  4543  036B                     u4765:	
  4544  036B  36E8               	lsrf	??_main,f
  4545  036C  0B89               	decfsz	9,f
  4546  036D  2B6B               	goto	u4765
  4547  036E  0868               	movf	??_main,w
  4548  036F  3903               	andlw	3
  4549  0370  3E20               	addlw	low (_displayNum| (0+32768))
  4550  0371  0084               	movwf	4
  4551  0372  3090               	movlw	high (_displayNum| (0+32768))
  4552  0373  1803               	skipnc
  4553  0374  3E01               	addlw	1
  4554  0375  0085               	movwf	5
  4555  0376  0800               	movf	0,w	;code access
  4556  0377  00E9               	movwf	??_main+1
  4557  0378  0869               	movf	??_main+1,w
  4558  0379  00BC               	movwf	_displayBuff
  4559  037A                     l6516:	
  4560                           
  4561                           ;main.c: 435:                 displayBuff[1] = displayNum[(rtcData[4]& 0x0F)];
  4562  037A  084E               	movf	_rtcData+4,w
  4563  037B  390F               	andlw	15
  4564  037C  3E20               	addlw	low (_displayNum| (0+32768))
  4565  037D  0084               	movwf	4
  4566  037E  3090               	movlw	high (_displayNum| (0+32768))
  4567  037F  1803               	skipnc
  4568  0380  3E01               	addlw	1
  4569  0381  0085               	movwf	5
  4570  0382  0800               	movf	0,w	;code access
  4571  0383  00E8               	movwf	??_main
  4572  0384  0868               	movf	??_main,w
  4573  0385  00BD               	movwf	_displayBuff+1
  4574  0386                     l6518:	
  4575                           
  4576                           ;main.c: 436:                 displayBuff[2] = displayNum[((rtcData[5] >> 4) & 0x0F)];
  4577  0386  084F               	movf	_rtcData+5,w
  4578  0387  00E8               	movwf	??_main
  4579  0388  3004               	movlw	4
  4580  0389                     u4775:	
  4581  0389  36E8               	lsrf	??_main,f
  4582  038A  0B89               	decfsz	9,f
  4583  038B  2B89               	goto	u4775
  4584  038C  0868               	movf	??_main,w
  4585  038D  390F               	andlw	15
  4586  038E  3E20               	addlw	low (_displayNum| (0+32768))
  4587  038F  0084               	movwf	4
  4588  0390  3090               	movlw	high (_displayNum| (0+32768))
  4589  0391  1803               	skipnc
  4590  0392  3E01               	addlw	1
  4591  0393  0085               	movwf	5
  4592  0394  0800               	movf	0,w	;code access
  4593  0395  00E9               	movwf	??_main+1
  4594  0396  0869               	movf	??_main+1,w
  4595  0397  00BE               	movwf	_displayBuff+2
  4596                           
  4597                           ;main.c: 437:                 displayBuff[3] = displayNum[(rtcData[5]& 0x0F)];
  4598  0398  084F               	movf	_rtcData+5,w
  4599  0399  390F               	andlw	15
  4600  039A  3E20               	addlw	low (_displayNum| (0+32768))
  4601  039B  0084               	movwf	4
  4602  039C  3090               	movlw	high (_displayNum| (0+32768))
  4603  039D  1803               	skipnc
  4604  039E  3E01               	addlw	1
  4605  039F  0085               	movwf	5
  4606  03A0  0800               	movf	0,w	;code access
  4607  03A1  00E8               	movwf	??_main
  4608  03A2  0868               	movf	??_main,w
  4609  03A3  00BF               	movwf	_displayBuff+3
  4610  03A4                     l6520:	
  4611                           
  4612                           ;main.c: 438:                 if(flag_dot_blink){
  4613  03A4  0848               	movf	_flag_dot_blink,w
  4614  03A5  1903               	btfsc	3,2
  4615  03A6  2BA8               	goto	u4781
  4616  03A7  2BA9               	goto	u4780
  4617  03A8                     u4781:	
  4618  03A8  2A66               	goto	l6460
  4619  03A9                     u4780:	
  4620  03A9  2AB7               	goto	l6474
  4621  03AA                     l6526:	
  4622  03AA  300A               	movlw	10
  4623  03AB  0647               	xorwf	_mode,w
  4624  03AC  1D03               	btfss	3,2
  4625  03AD  2BAF               	goto	u4791
  4626  03AE  2BB0               	goto	u4790
  4627  03AF                     u4791:	
  4628  03AF  2BDC               	goto	l934
  4629  03B0                     u4790:	
  4630  03B0                     l6528:	
  4631                           
  4632                           ;main.c: 444:             if(flag_time_display_update == 1){
  4633  03B0  0349               	decf	_flag_time_display_update,w
  4634  03B1  1D03               	btfss	3,2
  4635  03B2  2BB4               	goto	u4801
  4636  03B3  2BB5               	goto	u4800
  4637  03B4                     u4801:	
  4638  03B4  287E               	goto	l889
  4639  03B5                     u4800:	
  4640  03B5                     l966:	
  4641                           ;main.c: 445:                 do { LATAbits.LATA7 = 1; } while(0);
  4642                           
  4643  03B5  0022               	movlb	2	; select bank2
  4644  03B6  178C               	bsf	12,7	;volatile
  4645  03B7                     l6530:	
  4646                           
  4647                           ;main.c: 446:                 displayBuff[0] = ((1 << 4) | (1 << 3) | (1 << 2) | (1 << 1
      +                          ));
  4648  03B7  301E               	movlw	30
  4649  03B8  0020               	movlb	0	; select bank0
  4650  03B9  00E8               	movwf	??_main
  4651  03BA  0868               	movf	??_main,w
  4652  03BB  00BC               	movwf	_displayBuff
  4653  03BC                     l6532:	
  4654                           
  4655                           ;main.c: 447:                 displayBuff[1] = 0x00;
  4656  03BC  01BD               	clrf	_displayBuff+1
  4657  03BD                     l6534:	
  4658                           
  4659                           ;main.c: 448:                 displayBuff[2] = displayNum[((rtcData[5] >> 4) & 0x0F)];
  4660  03BD  084F               	movf	_rtcData+5,w
  4661  03BE  00E8               	movwf	??_main
  4662  03BF  3004               	movlw	4
  4663  03C0                     u4815:	
  4664  03C0  36E8               	lsrf	??_main,f
  4665  03C1  0B89               	decfsz	9,f
  4666  03C2  2BC0               	goto	u4815
  4667  03C3  0868               	movf	??_main,w
  4668  03C4  390F               	andlw	15
  4669  03C5  3E20               	addlw	low (_displayNum| (0+32768))
  4670  03C6  0084               	movwf	4
  4671  03C7  3090               	movlw	high (_displayNum| (0+32768))
  4672  03C8  1803               	skipnc
  4673  03C9  3E01               	addlw	1
  4674  03CA  0085               	movwf	5
  4675  03CB  0800               	movf	0,w	;code access
  4676  03CC  00E9               	movwf	??_main+1
  4677  03CD  0869               	movf	??_main+1,w
  4678  03CE  00BE               	movwf	_displayBuff+2
  4679  03CF                     l6536:	
  4680                           
  4681                           ;main.c: 449:                 displayBuff[3] = displayNum[(rtcData[5]& 0x0F)];
  4682  03CF  084F               	movf	_rtcData+5,w
  4683  03D0  390F               	andlw	15
  4684  03D1  3E20               	addlw	low (_displayNum| (0+32768))
  4685  03D2  0084               	movwf	4
  4686  03D3  3090               	movlw	high (_displayNum| (0+32768))
  4687  03D4  1803               	skipnc
  4688  03D5  3E01               	addlw	1
  4689  03D6  0085               	movwf	5
  4690  03D7  0800               	movf	0,w	;code access
  4691  03D8  00E8               	movwf	??_main
  4692  03D9  0868               	movf	??_main,w
  4693  03DA  00BF               	movwf	_displayBuff+3
  4694  03DB  2A66               	goto	l6460
  4695  03DC                     l934:	
  4696  03DC  287E               	goto	l889
  4697  03DD  3180  2844         	ljmp	start
  4698  03DF                     __end_of_main:	
  4699                           
  4700                           	psect	text1
  4701  0D53                     __ptext1:	
  4702 ;; *************** function _updateRTC *****************
  4703 ;; Defined at:
  4704 ;;		line 118 in file "main.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  bcdHour         1    wreg     unsigned char 
  4707 ;;  bcdMinute       1   14[BANK0 ] unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  bcdHour         1   16[BANK0 ] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4719 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;Total ram usage:        3 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:   15
  4726 ;; This function calls:
  4727 ;;		_i2c_writeNBytes
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _updateRTC
  4735  0D53                     _updateRTC:	
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _updateRTC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4739                           ;updateRTC@bcdHour stored from wreg
  4740  0D53  0020               	movlb	0	; select bank0
  4741  0D54  00E3               	movwf	updateRTC@bcdHour
  4742  0D55                     l6014:	
  4743                           
  4744                           ;main.c: 119:     rtcData[0] = 0x00;
  4745  0D55  01CA               	clrf	_rtcData
  4746                           
  4747                           ;main.c: 120:     rtcData[1] = 0x00;
  4748  0D56  01CB               	clrf	_rtcData+1
  4749  0D57                     l6016:	
  4750                           
  4751                           ;main.c: 121:     rtcData[2] = bcdMinute & 0x7F;
  4752  0D57  0861               	movf	updateRTC@bcdMinute,w
  4753  0D58  397F               	andlw	127
  4754  0D59  00E2               	movwf	??_updateRTC
  4755  0D5A  0862               	movf	??_updateRTC,w
  4756  0D5B  00CC               	movwf	_rtcData+2
  4757  0D5C                     l6018:	
  4758                           
  4759                           ;main.c: 122:     rtcData[3] = bcdHour & 0x3F;
  4760  0D5C  0863               	movf	updateRTC@bcdHour,w
  4761  0D5D  393F               	andlw	63
  4762  0D5E  00E2               	movwf	??_updateRTC
  4763  0D5F  0862               	movf	??_updateRTC,w
  4764  0D60  00CD               	movwf	_rtcData+3
  4765  0D61                     l6020:	
  4766                           
  4767                           ;main.c: 123:     i2c_writeNBytes(0x68,rtcData,4);
  4768  0D61  304A               	movlw	(low (_rtcData| 0))& (0+255)
  4769  0D62  00E2               	movwf	??_updateRTC
  4770  0D63  0862               	movf	??_updateRTC,w
  4771  0D64  00DD               	movwf	i2c_writeNBytes@data
  4772  0D65  3004               	movlw	4
  4773  0D66  00DE               	movwf	i2c_writeNBytes@len
  4774  0D67  3000               	movlw	0
  4775  0D68  00DF               	movwf	i2c_writeNBytes@len+1
  4776  0D69  3068               	movlw	104
  4777  0D6A  318E  2681  318D   	fcall	_i2c_writeNBytes
  4778  0D6D                     l806:	
  4779  0D6D  0008               	return
  4780  0D6E                     __end_of_updateRTC:	
  4781                           
  4782                           	psect	text2
  4783  0636                     __ptext2:	
  4784 ;; *************** function _intToBCD *****************
  4785 ;; Defined at:
  4786 ;;		line 191 in file "main.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  binaryInput     2   12[BANK0 ] unsigned short 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  shift           2   19[BANK0 ] unsigned short 
  4791 ;;  bcdResult       2   17[BANK0 ] unsigned short 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2   12[BANK0 ] unsigned short 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, pclath, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4802 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;Total ram usage:        9 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    7
  4808 ;; This function calls:
  4809 ;;		___lwdiv
  4810 ;;		___lwmod
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function _intToBCD
  4818  0636                     _intToBCD:	
  4819  0636                     l6146:	
  4820                           ;incstack = 0
  4821                           ; Regs used in _intToBCD: [wreg+status,2+status,0+pclath+cstack]
  4822                           
  4823                           
  4824                           ;main.c: 192:     uint16_t bcdResult = 0;
  4825  0636  0020               	movlb	0	; select bank0
  4826  0637  01E4               	clrf	intToBCD@bcdResult
  4827  0638  01E5               	clrf	intToBCD@bcdResult+1
  4828                           
  4829                           ;main.c: 193:     uint16_t shift = 0;
  4830  0639  01E6               	clrf	intToBCD@shift
  4831  063A  01E7               	clrf	intToBCD@shift+1
  4832                           
  4833                           ;main.c: 195:     while (binaryInput > 0) {
  4834  063B  2E72               	goto	l6154
  4835  063C                     l6148:	
  4836                           
  4837                           ;main.c: 196:       bcdResult |= (binaryInput % 10) << (shift++ << 2);
  4838  063C  300A               	movlw	10
  4839  063D  00D3               	movwf	___lwmod@divisor
  4840  063E  3000               	movlw	0
  4841  063F  00D4               	movwf	___lwmod@divisor+1
  4842  0640  0860               	movf	intToBCD@binaryInput+1,w
  4843  0641  00D6               	movwf	___lwmod@dividend+1
  4844  0642  085F               	movf	intToBCD@binaryInput,w
  4845  0643  00D5               	movwf	___lwmod@dividend
  4846  0644  3187  276F  3186   	fcall	___lwmod
  4847  0647  0020               	movlb	0	; select bank0
  4848  0648  0853               	movf	?___lwmod,w
  4849  0649  00E1               	movwf	??_intToBCD
  4850  064A  0854               	movf	?___lwmod+1,w
  4851  064B  00E2               	movwf	??_intToBCD+1
  4852  064C  0866               	movf	intToBCD@shift,w
  4853  064D  00E3               	movwf	??_intToBCD+2
  4854  064E  3001               	movlw	1
  4855  064F                     u3985:	
  4856  064F  35E3               	lslf	??_intToBCD+2,f
  4857  0650  3EFF               	addlw	-1
  4858  0651  1D03               	skipz
  4859  0652  2E4F               	goto	u3985
  4860  0653  3563               	lslf	??_intToBCD+2,w
  4861  0654  0A89               	incf	9,f
  4862  0655  2E58               	goto	u3994
  4863  0656                     u3995:	
  4864  0656  35E1               	lslf	??_intToBCD,f
  4865  0657  0DE2               	rlf	??_intToBCD+1,f
  4866  0658                     u3994:	
  4867  0658  0B89               	decfsz	9,f
  4868  0659  2E56               	goto	u3995
  4869  065A  0861               	movf	??_intToBCD,w
  4870  065B  04E4               	iorwf	intToBCD@bcdResult,f
  4871  065C  0862               	movf	??_intToBCD+1,w
  4872  065D  04E5               	iorwf	intToBCD@bcdResult+1,f
  4873  065E                     l6150:	
  4874  065E  3001               	movlw	1
  4875  065F  07E6               	addwf	intToBCD@shift,f
  4876  0660  3000               	movlw	0
  4877  0661  3DE7               	addwfc	intToBCD@shift+1,f
  4878  0662                     l6152:	
  4879                           
  4880                           ;main.c: 197:       binaryInput /= 10;
  4881  0662  300A               	movlw	10
  4882  0663  00D3               	movwf	___lwdiv@divisor
  4883  0664  3000               	movlw	0
  4884  0665  00D4               	movwf	___lwdiv@divisor+1
  4885  0666  0860               	movf	intToBCD@binaryInput+1,w
  4886  0667  00D6               	movwf	___lwdiv@dividend+1
  4887  0668  085F               	movf	intToBCD@binaryInput,w
  4888  0669  00D5               	movwf	___lwdiv@dividend
  4889  066A  3186  26F9  3186   	fcall	___lwdiv
  4890  066D  0020               	movlb	0	; select bank0
  4891  066E  0854               	movf	?___lwdiv+1,w
  4892  066F  00E0               	movwf	intToBCD@binaryInput+1
  4893  0670  0853               	movf	?___lwdiv,w
  4894  0671  00DF               	movwf	intToBCD@binaryInput
  4895  0672                     l6154:	
  4896                           
  4897                           ;main.c: 195:     while (binaryInput > 0) {
  4898  0672  085F               	movf	intToBCD@binaryInput,w
  4899  0673  0460               	iorwf	intToBCD@binaryInput+1,w
  4900  0674  1D03               	btfss	3,2
  4901  0675  2E77               	goto	u4001
  4902  0676  2E78               	goto	u4000
  4903  0677                     u4001:	
  4904  0677  2E3C               	goto	l6148
  4905  0678                     u4000:	
  4906  0678                     l6156:	
  4907                           
  4908                           ;main.c: 200:     return bcdResult;
  4909  0678  0865               	movf	intToBCD@bcdResult+1,w
  4910  0679  00E0               	movwf	?_intToBCD+1
  4911  067A  0864               	movf	intToBCD@bcdResult,w
  4912  067B  00DF               	movwf	?_intToBCD
  4913  067C                     l866:	
  4914  067C  0008               	return
  4915  067D                     __end_of_intToBCD:	
  4916                           
  4917                           	psect	text3
  4918  076F                     __ptext3:	
  4919 ;; *************** function ___lwmod *****************
  4920 ;; Defined at:
  4921 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwmod.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  divisor         2    0[BANK0 ] unsigned int 
  4924 ;;  dividend        2    2[BANK0 ] unsigned int 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  counter         1    5[BANK0 ] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2    0[BANK0 ] unsigned int 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4940 ;;Total ram usage:        6 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    6
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_intToBCD
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function ___lwmod
  4952  076F                     ___lwmod:	
  4953  076F                     l5840:	
  4954                           ;incstack = 0
  4955                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4956                           
  4957  076F  0020               	movlb	0	; select bank0
  4958  0770  0853               	movf	___lwmod@divisor,w
  4959  0771  0454               	iorwf	___lwmod@divisor+1,w
  4960  0772  1903               	btfsc	3,2
  4961  0773  2F75               	goto	u3691
  4962  0774  2F76               	goto	u3690
  4963  0775                     u3691:	
  4964  0775  2F9F               	goto	l5858
  4965  0776                     u3690:	
  4966  0776                     l5842:	
  4967  0776  01D8               	clrf	___lwmod@counter
  4968  0777  0AD8               	incf	___lwmod@counter,f
  4969  0778  2F82               	goto	l5848
  4970  0779                     l5844:	
  4971  0779  3001               	movlw	1
  4972  077A                     u3705:	
  4973  077A  35D3               	lslf	___lwmod@divisor,f
  4974  077B  0DD4               	rlf	___lwmod@divisor+1,f
  4975  077C  0B89               	decfsz	9,f
  4976  077D  2F7A               	goto	u3705
  4977  077E                     l5846:	
  4978  077E  3001               	movlw	1
  4979  077F  00D7               	movwf	??___lwmod
  4980  0780  0857               	movf	??___lwmod,w
  4981  0781  07D8               	addwf	___lwmod@counter,f
  4982  0782                     l5848:	
  4983  0782  1FD4               	btfss	___lwmod@divisor+1,7
  4984  0783  2F85               	goto	u3711
  4985  0784  2F86               	goto	u3710
  4986  0785                     u3711:	
  4987  0785  2F79               	goto	l5844
  4988  0786                     u3710:	
  4989  0786                     l5850:	
  4990  0786  0854               	movf	___lwmod@divisor+1,w
  4991  0787  0256               	subwf	___lwmod@dividend+1,w
  4992  0788  1D03               	skipz
  4993  0789  2F8C               	goto	u3725
  4994  078A  0853               	movf	___lwmod@divisor,w
  4995  078B  0255               	subwf	___lwmod@dividend,w
  4996  078C                     u3725:	
  4997  078C  1C03               	skipc
  4998  078D  2F8F               	goto	u3721
  4999  078E  2F90               	goto	u3720
  5000  078F                     u3721:	
  5001  078F  2F94               	goto	l5854
  5002  0790                     u3720:	
  5003  0790                     l5852:	
  5004  0790  0853               	movf	___lwmod@divisor,w
  5005  0791  02D5               	subwf	___lwmod@dividend,f
  5006  0792  0854               	movf	___lwmod@divisor+1,w
  5007  0793  3BD6               	subwfb	___lwmod@dividend+1,f
  5008  0794                     l5854:	
  5009  0794  3001               	movlw	1
  5010  0795                     u3735:	
  5011  0795  36D4               	lsrf	___lwmod@divisor+1,f
  5012  0796  0CD3               	rrf	___lwmod@divisor,f
  5013  0797  0B89               	decfsz	9,f
  5014  0798  2F95               	goto	u3735
  5015  0799                     l5856:	
  5016  0799  3001               	movlw	1
  5017  079A  02D8               	subwf	___lwmod@counter,f
  5018  079B  1D03               	btfss	3,2
  5019  079C  2F9E               	goto	u3741
  5020  079D  2F9F               	goto	u3740
  5021  079E                     u3741:	
  5022  079E  2F86               	goto	l5850
  5023  079F                     u3740:	
  5024  079F                     l5858:	
  5025  079F  0856               	movf	___lwmod@dividend+1,w
  5026  07A0  00D4               	movwf	?___lwmod+1
  5027  07A1  0855               	movf	___lwmod@dividend,w
  5028  07A2  00D3               	movwf	?___lwmod
  5029  07A3                     l1456:	
  5030  07A3  0008               	return
  5031  07A4                     __end_of___lwmod:	
  5032                           
  5033                           	psect	text4
  5034  06F9                     __ptext4:	
  5035 ;; *************** function ___lwdiv *****************
  5036 ;; Defined at:
  5037 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  divisor         2    0[BANK0 ] unsigned int 
  5040 ;;  dividend        2    2[BANK0 ] unsigned int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  quotient        2    6[BANK0 ] unsigned int 
  5043 ;;  counter         1    5[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2    0[BANK0 ] unsigned int 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;Total ram usage:        8 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    6
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_intToBCD
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function ___lwdiv
  5069  06F9                     ___lwdiv:	
  5070  06F9                     l5814:	
  5071                           ;incstack = 0
  5072                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5073                           
  5074  06F9  0020               	movlb	0	; select bank0
  5075  06FA  01D9               	clrf	___lwdiv@quotient
  5076  06FB  01DA               	clrf	___lwdiv@quotient+1
  5077  06FC                     l5816:	
  5078  06FC  0853               	movf	___lwdiv@divisor,w
  5079  06FD  0454               	iorwf	___lwdiv@divisor+1,w
  5080  06FE  1903               	btfsc	3,2
  5081  06FF  2F01               	goto	u3621
  5082  0700  2F02               	goto	u3620
  5083  0701                     u3621:	
  5084  0701  2F31               	goto	l5836
  5085  0702                     u3620:	
  5086  0702                     l5818:	
  5087  0702  01D8               	clrf	___lwdiv@counter
  5088  0703  0AD8               	incf	___lwdiv@counter,f
  5089  0704  2F0E               	goto	l5824
  5090  0705                     l5820:	
  5091  0705  3001               	movlw	1
  5092  0706                     u3635:	
  5093  0706  35D3               	lslf	___lwdiv@divisor,f
  5094  0707  0DD4               	rlf	___lwdiv@divisor+1,f
  5095  0708  0B89               	decfsz	9,f
  5096  0709  2F06               	goto	u3635
  5097  070A                     l5822:	
  5098  070A  3001               	movlw	1
  5099  070B  00D7               	movwf	??___lwdiv
  5100  070C  0857               	movf	??___lwdiv,w
  5101  070D  07D8               	addwf	___lwdiv@counter,f
  5102  070E                     l5824:	
  5103  070E  1FD4               	btfss	___lwdiv@divisor+1,7
  5104  070F  2F11               	goto	u3641
  5105  0710  2F12               	goto	u3640
  5106  0711                     u3641:	
  5107  0711  2F05               	goto	l5820
  5108  0712                     u3640:	
  5109  0712                     l5826:	
  5110  0712  3001               	movlw	1
  5111  0713                     u3655:	
  5112  0713  35D9               	lslf	___lwdiv@quotient,f
  5113  0714  0DDA               	rlf	___lwdiv@quotient+1,f
  5114  0715  0B89               	decfsz	9,f
  5115  0716  2F13               	goto	u3655
  5116  0717  0854               	movf	___lwdiv@divisor+1,w
  5117  0718  0256               	subwf	___lwdiv@dividend+1,w
  5118  0719  1D03               	skipz
  5119  071A  2F1D               	goto	u3665
  5120  071B  0853               	movf	___lwdiv@divisor,w
  5121  071C  0255               	subwf	___lwdiv@dividend,w
  5122  071D                     u3665:	
  5123  071D  1C03               	skipc
  5124  071E  2F20               	goto	u3661
  5125  071F  2F21               	goto	u3660
  5126  0720                     u3661:	
  5127  0720  2F26               	goto	l5832
  5128  0721                     u3660:	
  5129  0721                     l5828:	
  5130  0721  0853               	movf	___lwdiv@divisor,w
  5131  0722  02D5               	subwf	___lwdiv@dividend,f
  5132  0723  0854               	movf	___lwdiv@divisor+1,w
  5133  0724  3BD6               	subwfb	___lwdiv@dividend+1,f
  5134  0725                     l5830:	
  5135  0725  1459               	bsf	___lwdiv@quotient,0
  5136  0726                     l5832:	
  5137  0726  3001               	movlw	1
  5138  0727                     u3675:	
  5139  0727  36D4               	lsrf	___lwdiv@divisor+1,f
  5140  0728  0CD3               	rrf	___lwdiv@divisor,f
  5141  0729  0B89               	decfsz	9,f
  5142  072A  2F27               	goto	u3675
  5143  072B                     l5834:	
  5144  072B  3001               	movlw	1
  5145  072C  02D8               	subwf	___lwdiv@counter,f
  5146  072D  1D03               	btfss	3,2
  5147  072E  2F30               	goto	u3681
  5148  072F  2F31               	goto	u3680
  5149  0730                     u3681:	
  5150  0730  2F12               	goto	l5826
  5151  0731                     u3680:	
  5152  0731                     l5836:	
  5153  0731  085A               	movf	___lwdiv@quotient+1,w
  5154  0732  00D4               	movwf	?___lwdiv+1
  5155  0733  0859               	movf	___lwdiv@quotient,w
  5156  0734  00D3               	movwf	?___lwdiv
  5157  0735                     l1446:	
  5158  0735  0008               	return
  5159  0736                     __end_of___lwdiv:	
  5160                           
  5161                           	psect	text5
  5162  067D                     __ptext5:	
  5163 ;; *************** function _initRTC *****************
  5164 ;; Defined at:
  5165 ;;		line 96 in file "main.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;Total ram usage:        2 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:   15
  5186 ;; This function calls:
  5187 ;;		_i2c_readDataBlock
  5188 ;;		_i2c_writeNBytes
  5189 ;; This function is called by:
  5190 ;;		_main
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function _initRTC
  5196  067D                     _initRTC:	
  5197  067D                     l5994:	
  5198                           ;incstack = 0
  5199                           ; Regs used in _initRTC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5200                           
  5201                           
  5202                           ;main.c: 97:     _delay((unsigned long)((30)*(32000000/4000.0)));
  5203  067D  3002               	movlw	2
  5204  067E  0020               	movlb	0	; select bank0
  5205  067F  00E7               	movwf	??_initRTC+1
  5206  0680  3038               	movlw	56
  5207  0681  00E6               	movwf	??_initRTC
  5208  0682  30AD               	movlw	173
  5209  0683                     u4827:	
  5210  0683  0B89               	decfsz	9,f
  5211  0684  2E83               	goto	u4827
  5212  0685  0BE6               	decfsz	??_initRTC,f
  5213  0686  2E83               	goto	u4827
  5214  0687  0BE7               	decfsz	??_initRTC+1,f
  5215  0688  2E83               	goto	u4827
  5216  0689                     l5996:	
  5217                           
  5218                           ;main.c: 101:     i2c_readDataBlock(0x68,0x00,rtcData,sizeof(rtcData));
  5219  0689  0020               	movlb	0	; select bank0
  5220  068A  01DD               	clrf	i2c_readDataBlock@reg
  5221  068B  304A               	movlw	(low (_rtcData| 0))& (0+255)
  5222  068C  00E6               	movwf	??_initRTC
  5223  068D  0866               	movf	??_initRTC,w
  5224  068E  00DE               	movwf	i2c_readDataBlock@data
  5225  068F  3009               	movlw	9
  5226  0690  00DF               	movwf	i2c_readDataBlock@len
  5227  0691  3000               	movlw	0
  5228  0692  00E0               	movwf	i2c_readDataBlock@len+1
  5229  0693  3068               	movlw	104
  5230  0694  3186  26BB  3186   	fcall	_i2c_readDataBlock
  5231  0697                     l5998:	
  5232                           
  5233                           ;main.c: 102:     if((rtcData[0] & 0x80) == 0x80){
  5234  0697  0020               	movlb	0	; select bank0
  5235  0698  1FCA               	btfss	_rtcData,7
  5236  0699  2E9B               	goto	u3791
  5237  069A  2E9C               	goto	u3790
  5238  069B                     u3791:	
  5239  069B  2EBA               	goto	l803
  5240  069C                     u3790:	
  5241  069C                     l6000:	
  5242                           
  5243                           ;main.c: 104:         rtcData[0] = 0x00;
  5244  069C  01CA               	clrf	_rtcData
  5245                           
  5246                           ;main.c: 105:         rtcData[1] = 0x00;
  5247  069D  01CB               	clrf	_rtcData+1
  5248                           
  5249                           ;main.c: 106:         rtcData[2] = 0x00;
  5250  069E  01CC               	clrf	_rtcData+2
  5251                           
  5252                           ;main.c: 107:         rtcData[3] = 0x00;
  5253  069F  01CD               	clrf	_rtcData+3
  5254  06A0                     l6002:	
  5255                           
  5256                           ;main.c: 108:         rtcData[4] = 0x01;
  5257  06A0  01CE               	clrf	_rtcData+4
  5258  06A1  0ACE               	incf	_rtcData+4,f
  5259  06A2                     l6004:	
  5260                           
  5261                           ;main.c: 109:         rtcData[5] = 0x01;
  5262  06A2  01CF               	clrf	_rtcData+5
  5263  06A3  0ACF               	incf	_rtcData+5,f
  5264  06A4                     l6006:	
  5265                           
  5266                           ;main.c: 110:         rtcData[6] = 0x01;
  5267  06A4  01D0               	clrf	_rtcData+6
  5268  06A5  0AD0               	incf	_rtcData+6,f
  5269  06A6                     l6008:	
  5270                           
  5271                           ;main.c: 111:         rtcData[7] = 0x20;
  5272  06A6  3020               	movlw	32
  5273  06A7  00E6               	movwf	??_initRTC
  5274  06A8  0866               	movf	??_initRTC,w
  5275  06A9  00D1               	movwf	_rtcData+7
  5276  06AA                     l6010:	
  5277                           
  5278                           ;main.c: 112:         rtcData[8] = 0x10;
  5279  06AA  3010               	movlw	16
  5280  06AB  00E6               	movwf	??_initRTC
  5281  06AC  0866               	movf	??_initRTC,w
  5282  06AD  00D2               	movwf	_rtcData+8
  5283  06AE                     l6012:	
  5284                           
  5285                           ;main.c: 114:         i2c_writeNBytes(0x68,rtcData,sizeof(rtcData));
  5286  06AE  304A               	movlw	(low (_rtcData| 0))& (0+255)
  5287  06AF  00E6               	movwf	??_initRTC
  5288  06B0  0866               	movf	??_initRTC,w
  5289  06B1  00DD               	movwf	i2c_writeNBytes@data
  5290  06B2  3009               	movlw	9
  5291  06B3  00DE               	movwf	i2c_writeNBytes@len
  5292  06B4  3000               	movlw	0
  5293  06B5  00DF               	movwf	i2c_writeNBytes@len+1
  5294  06B6  3068               	movlw	104
  5295  06B7  318E  2681  3186   	fcall	_i2c_writeNBytes
  5296  06BA                     l803:	
  5297  06BA  0008               	return
  5298  06BB                     __end_of_initRTC:	
  5299                           
  5300                           	psect	text6
  5301  0E81                     __ptext6:	
  5302 ;; *************** function _i2c_writeNBytes *****************
  5303 ;; Defined at:
  5304 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  address         1    wreg     unsigned char 
  5307 ;;  data            1   10[BANK0 ] PTR void 
  5308 ;;		 -> rtcData(9), 
  5309 ;;  len             2   11[BANK0 ] unsigned int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  address         1   13[BANK0 ] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5321 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;Total ram usage:        4 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:   14
  5328 ;; This function calls:
  5329 ;;		_i2c_close
  5330 ;;		_i2c_masterWrite
  5331 ;;		_i2c_open
  5332 ;;		_i2c_setAddressNACKCallback
  5333 ;;		_i2c_setBuffer
  5334 ;; This function is called by:
  5335 ;;		_initRTC
  5336 ;;		_updateRTC
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function _i2c_writeNBytes
  5342  0E81                     _i2c_writeNBytes:	
  5343                           
  5344                           ;incstack = 0
  5345                           ; Regs used in _i2c_writeNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5346                           ;i2c_writeNBytes@address stored from wreg
  5347  0E81  0020               	movlb	0	; select bank0
  5348  0E82  00E0               	movwf	i2c_writeNBytes@address
  5349  0E83                     l5726:	
  5350  0E83                     l5728:	
  5351                           ;mcc_generated_files/drivers/i2c_simple_master.c: 48: void i2c_writeNBytes(i2c_address_t
      +                           address, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 49: {
      +                          ;mcc_generated_files/drivers/i2c_simple_master.c: 50:     while(!i2c_open(address));
  5352                           
  5353  0E83  0020               	movlb	0	; select bank0
  5354  0E84  0860               	movf	i2c_writeNBytes@address,w
  5355  0E85  3185  2551  318E   	fcall	_i2c_open
  5356  0E88  3A00               	xorlw	0
  5357  0E89  1903               	skipnz
  5358  0E8A  2E8C               	goto	u3571
  5359  0E8B  2E8D               	goto	u3570
  5360  0E8C                     u3571:	
  5361  0E8C  2E83               	goto	l5728
  5362  0E8D                     u3570:	
  5363  0E8D                     l5730:	
  5364                           
  5365                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51:     i2c_setBuffer(data,len);
  5366  0E8D  0020               	movlb	0	; select bank0
  5367  0E8E  085F               	movf	i2c_writeNBytes@len+1,w
  5368  0E8F  00D4               	movwf	i2c_setBuffer@bufferSize+1
  5369  0E90  085E               	movf	i2c_writeNBytes@len,w
  5370  0E91  00D3               	movwf	i2c_setBuffer@bufferSize
  5371  0E92  085D               	movf	i2c_writeNBytes@data,w
  5372  0E93  318C  24C7  318E   	fcall	_i2c_setBuffer
  5373  0E96                     l5732:	
  5374                           
  5375                           ;mcc_generated_files/drivers/i2c_simple_master.c: 52:     i2c_setAddressNACKCallback(i2c
      +                          _restartWrite,((void*)0));
  5376  0E96  30E0               	movlw	low _i2c_restartWrite
  5377  0E97  0020               	movlb	0	; select bank0
  5378  0E98  00D8               	movwf	i2c_setAddressNACKCallback@cb
  5379  0E99  300A               	movlw	high _i2c_restartWrite
  5380  0E9A  00D9               	movwf	i2c_setAddressNACKCallback@cb+1
  5381  0E9B  01DA               	clrf	i2c_setAddressNACKCallback@p
  5382  0E9C  318C  2418  318E   	fcall	_i2c_setAddressNACKCallback
  5383  0E9F                     l5734:	
  5384                           
  5385                           ;mcc_generated_files/drivers/i2c_simple_master.c: 53:     i2c_masterWrite();
  5386  0E9F  318A  22C3  318E   	fcall	_i2c_masterWrite
  5387  0EA2                     l5736:	
  5388                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     while(I2C_BUSY == i2c_close())
      +                          ;
  5389                           
  5390  0EA2  318D  25A7  318E   	fcall	_i2c_close
  5391  0EA5  3A01               	xorlw	1
  5392  0EA6  1903               	skipnz
  5393  0EA7  2EA9               	goto	u3581
  5394  0EA8  2EAA               	goto	u3580
  5395  0EA9                     u3581:	
  5396  0EA9  2EA2               	goto	l5736
  5397  0EAA                     u3580:	
  5398  0EAA                     l249:	
  5399  0EAA  0008               	return
  5400  0EAB                     __end_of_i2c_writeNBytes:	
  5401                           
  5402                           	psect	text7
  5403  06BB                     __ptext7:	
  5404 ;; *************** function _i2c_readDataBlock *****************
  5405 ;; Defined at:
  5406 ;;		line 141 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  address         1    wreg     unsigned char 
  5409 ;;  reg             1   10[BANK0 ] unsigned char 
  5410 ;;  data            1   11[BANK0 ] PTR void 
  5411 ;;		 -> rtcData(9), 
  5412 ;;  len             2   12[BANK0 ] unsigned int 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  address         1   15[BANK0 ] unsigned char 
  5415 ;;  d               3   16[BANK0 ] struct .
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5428 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;Total ram usage:        9 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:   14
  5432 ;; This function calls:
  5433 ;;		_i2c_close
  5434 ;;		_i2c_masterWrite
  5435 ;;		_i2c_open
  5436 ;;		_i2c_setAddressNACKCallback
  5437 ;;		_i2c_setBuffer
  5438 ;;		_i2c_setDataCompleteCallback
  5439 ;; This function is called by:
  5440 ;;		_initRTC
  5441 ;;		_main
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           
  5446                           ;psect for function _i2c_readDataBlock
  5447  06BB                     _i2c_readDataBlock:	
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _i2c_readDataBlock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5451                           ;i2c_readDataBlock@address stored from wreg
  5452  06BB  0020               	movlb	0	; select bank0
  5453  06BC  00E2               	movwf	i2c_readDataBlock@address
  5454  06BD                     l5738:	
  5455                           
  5456                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141: void i2c_readDataBlock(i2c_addres
      +                          s_t address, uint8_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simple
      +                          _master.c: 142: {;mcc_generated_files/drivers/i2c_simple_master.c: 144:     buf_t d;;mcc
      +                          _generated_files/drivers/i2c_simple_master.c: 145:     d.data = data;
  5457  06BD  085E               	movf	i2c_readDataBlock@data,w
  5458  06BE  00E1               	movwf	??_i2c_readDataBlock
  5459  06BF  0861               	movf	??_i2c_readDataBlock,w
  5460  06C0  00E5               	movwf	low ((i2c_readDataBlock@d| 0+2))
  5461                           
  5462                           ;mcc_generated_files/drivers/i2c_simple_master.c: 146:     d.len = len;
  5463  06C1  0860               	movf	i2c_readDataBlock@len+1,w
  5464  06C2  00E4               	movwf	i2c_readDataBlock@d+1
  5465  06C3  085F               	movf	i2c_readDataBlock@len,w
  5466  06C4  00E3               	movwf	i2c_readDataBlock@d
  5467  06C5                     l5740:	
  5468                           ;mcc_generated_files/drivers/i2c_simple_master.c: 148:     while(!i2c_open(address));
  5469                           
  5470  06C5  0020               	movlb	0	; select bank0
  5471  06C6  0862               	movf	i2c_readDataBlock@address,w
  5472  06C7  3185  2551  3186   	fcall	_i2c_open
  5473  06CA  3A00               	xorlw	0
  5474  06CB  1903               	skipnz
  5475  06CC  2ECE               	goto	u3591
  5476  06CD  2ECF               	goto	u3590
  5477  06CE                     u3591:	
  5478  06CE  2EC5               	goto	l5740
  5479  06CF                     u3590:	
  5480  06CF                     l5742:	
  5481                           
  5482                           ;mcc_generated_files/drivers/i2c_simple_master.c: 149:     i2c_setDataCompleteCallback(r
      +                          dBlkRegCompleteHandler,&d);
  5483  06CF  30C5               	movlw	low _rdBlkRegCompleteHandler
  5484  06D0  0020               	movlb	0	; select bank0
  5485  06D1  00D8               	movwf	i2c_setDataCompleteCallback@cb
  5486  06D2  300D               	movlw	high _rdBlkRegCompleteHandler
  5487  06D3  00D9               	movwf	i2c_setDataCompleteCallback@cb+1
  5488  06D4  3063               	movlw	(low (i2c_readDataBlock@d| 0))& (0+255)
  5489  06D5  00E1               	movwf	??_i2c_readDataBlock
  5490  06D6  0861               	movf	??_i2c_readDataBlock,w
  5491  06D7  00DA               	movwf	i2c_setDataCompleteCallback@p
  5492  06D8  318B  23FC  3186   	fcall	_i2c_setDataCompleteCallback
  5493  06DB                     l5744:	
  5494                           
  5495                           ;mcc_generated_files/drivers/i2c_simple_master.c: 150:     i2c_setBuffer(&reg,1);
  5496  06DB  3001               	movlw	1
  5497  06DC  0020               	movlb	0	; select bank0
  5498  06DD  00D3               	movwf	i2c_setBuffer@bufferSize
  5499  06DE  3000               	movlw	0
  5500  06DF  00D4               	movwf	i2c_setBuffer@bufferSize+1
  5501  06E0  305D               	movlw	(low (i2c_readDataBlock@reg| 0))& (0+255)
  5502  06E1  318C  24C7  3186   	fcall	_i2c_setBuffer
  5503  06E4                     l5746:	
  5504                           
  5505                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     i2c_setAddressNACKCallback(i2
      +                          c_restartWrite,((void*)0));
  5506  06E4  30E0               	movlw	low _i2c_restartWrite
  5507  06E5  0020               	movlb	0	; select bank0
  5508  06E6  00D8               	movwf	i2c_setAddressNACKCallback@cb
  5509  06E7  300A               	movlw	high _i2c_restartWrite
  5510  06E8  00D9               	movwf	i2c_setAddressNACKCallback@cb+1
  5511  06E9  01DA               	clrf	i2c_setAddressNACKCallback@p
  5512  06EA  318C  2418  3186   	fcall	_i2c_setAddressNACKCallback
  5513  06ED                     l5748:	
  5514                           
  5515                           ;mcc_generated_files/drivers/i2c_simple_master.c: 152:     i2c_masterWrite();
  5516  06ED  318A  22C3  3186   	fcall	_i2c_masterWrite
  5517  06F0                     l5750:	
  5518                           ;mcc_generated_files/drivers/i2c_simple_master.c: 153:     while(I2C_BUSY == i2c_close()
      +                          );
  5519                           
  5520  06F0  318D  25A7  3186   	fcall	_i2c_close
  5521  06F3  3A01               	xorlw	1
  5522  06F4  1903               	skipnz
  5523  06F5  2EF7               	goto	u3601
  5524  06F6  2EF8               	goto	u3600
  5525  06F7                     u3601:	
  5526  06F7  2EF0               	goto	l5750
  5527  06F8                     u3600:	
  5528  06F8                     l300:	
  5529  06F8  0008               	return
  5530  06F9                     __end_of_i2c_readDataBlock:	
  5531                           
  5532                           	psect	text8
  5533  0C18                     __ptext8:	
  5534 ;; *************** function _i2c_setAddressNACKCallback *****************
  5535 ;; Defined at:
  5536 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  5539 ;;		 -> i2c_restartWrite(1), 
  5540 ;;  p               1    7[BANK0 ] PTR void 
  5541 ;;		 -> NULL(0), 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5553 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;Total ram usage:        4 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    7
  5560 ;; This function calls:
  5561 ;;		_setCallBack
  5562 ;; This function is called by:
  5563 ;;		_i2c_writeNBytes
  5564 ;;		_i2c_readDataBlock
  5565 ;;		_i2c_write1ByteRegister
  5566 ;;		_i2c_read1ByteRegister
  5567 ;;		_i2c_read2ByteRegister
  5568 ;;		_i2c_write2ByteRegister
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _i2c_setAddressNACKCallback
  5574  0C18                     _i2c_setAddressNACKCallback:	
  5575  0C18                     l5618:	
  5576                           ;incstack = 0
  5577                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5578                           
  5579                           
  5580                           ;mcc_generated_files/drivers/i2c_master.c: 99: void i2c_setAddressNACKCallback(i2c_callb
      +                          ack cb, void *p);mcc_generated_files/drivers/i2c_master.c: 100: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 101:     setCallBack(i2c_addressNACK,cb,p);
  5581  0C18  0020               	movlb	0	; select bank0
  5582  0C19  0859               	movf	i2c_setAddressNACKCallback@cb+1,w
  5583  0C1A  00D4               	movwf	setCallBack@cb+1
  5584  0C1B  0858               	movf	i2c_setAddressNACKCallback@cb,w
  5585  0C1C  00D3               	movwf	setCallBack@cb
  5586  0C1D  085A               	movf	i2c_setAddressNACKCallback@p,w
  5587  0C1E  00DB               	movwf	??_i2c_setAddressNACKCallback
  5588  0C1F  085B               	movf	??_i2c_setAddressNACKCallback,w
  5589  0C20  00D5               	movwf	setCallBack@p
  5590  0C21  3002               	movlw	2
  5591  0C22  3187  27D9  318C   	fcall	_setCallBack
  5592  0C25                     l67:	
  5593  0C25  0008               	return
  5594  0C26                     __end_of_i2c_setAddressNACKCallback:	
  5595                           
  5596                           	psect	text9
  5597  0551                     __ptext9:	
  5598 ;; *************** function _i2c_open *****************
  5599 ;; Defined at:
  5600 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  address         1    wreg     unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  address         1    3[BANK0 ] unsigned char 
  5605 ;;  ret             1    4[BANK0 ] enum E3252
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      enum E3252
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;Total ram usage:        3 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    7
  5622 ;; This function calls:
  5623 ;;		_i2c_driver_open
  5624 ;;		_i2c_driver_setBusCollisionISR
  5625 ;;		_i2c_driver_setI2cISR
  5626 ;;		_mssp_clearIRQ
  5627 ;; This function is called by:
  5628 ;;		_i2c_writeNBytes
  5629 ;;		_i2c_readDataBlock
  5630 ;;		_i2c_write1ByteRegister
  5631 ;;		_i2c_read1ByteRegister
  5632 ;;		_i2c_read2ByteRegister
  5633 ;;		_i2c_write2ByteRegister
  5634 ;;		_i2c_readNBytes
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _i2c_open
  5640  0551                     _i2c_open:	
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
  5644                           ;i2c_open@address stored from wreg
  5645  0551  0020               	movlb	0	; select bank0
  5646  0552  00D6               	movwf	i2c_open@address
  5647  0553                     l5620:	
  5648                           
  5649                           ;mcc_generated_files/drivers/i2c_master.c: 116: i2c_error_t i2c_open(i2c_address_t addre
      +                          ss);mcc_generated_files/drivers/i2c_master.c: 117: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 118:     i2c_error_t ret = I2C_BUSY;
  5650  0553  01D7               	clrf	i2c_open@ret
  5651  0554  0AD7               	incf	i2c_open@ret,f
  5652                           
  5653                           ;mcc_generated_files/drivers/i2c_master.c: 120:     if(!i2c_status.inUse)
  5654  0555  0021               	movlb	1	; select bank1
  5655  0556  18A0               	btfsc	_i2c_status^(0+128),1
  5656  0557  2D59               	goto	u3551
  5657  0558  2D5A               	goto	u3550
  5658  0559                     u3551:	
  5659  0559  2D9F               	goto	l76
  5660  055A                     u3550:	
  5661  055A                     l5622:	
  5662                           
  5663                           ;mcc_generated_files/drivers/i2c_master.c: 121:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 122:         i2c_status.address = address;
  5664  055A  0020               	movlb	0	; select bank0
  5665  055B  0856               	movf	i2c_open@address,w
  5666  055C  00D5               	movwf	??_i2c_open
  5667  055D  0855               	movf	??_i2c_open,w
  5668  055E  0021               	movlb	1	; select bank1
  5669  055F  00A1               	movwf	(_i2c_status^(0+128)+1)
  5670  0560                     l5624:	
  5671                           
  5672                           ;mcc_generated_files/drivers/i2c_master.c: 123:         i2c_status.busy = 0;
  5673  0560  1020               	bcf	_i2c_status^(0+128),0
  5674  0561                     l5626:	
  5675                           
  5676                           ;mcc_generated_files/drivers/i2c_master.c: 124:         i2c_status.inUse = 1;
  5677  0561  14A0               	bsf	_i2c_status^(0+128),1
  5678  0562                     l5628:	
  5679                           
  5680                           ;mcc_generated_files/drivers/i2c_master.c: 125:         i2c_status.addressNACKCheck = 0;
  5681  0562  11A0               	bcf	_i2c_status^(0+128),3
  5682                           
  5683                           ;mcc_generated_files/drivers/i2c_master.c: 126:         i2c_status.state = I2C_RESET;
  5684  0563  300E               	movlw	14
  5685  0564  0020               	movlb	0	; select bank0
  5686  0565  00D5               	movwf	??_i2c_open
  5687  0566  0855               	movf	??_i2c_open,w
  5688  0567  0021               	movlb	1	; select bank1
  5689  0568  00A9               	movwf	(_i2c_status^(0+128)+9)
  5690                           
  5691                           ;mcc_generated_files/drivers/i2c_master.c: 127:         i2c_status.time_out_value = 500;
  5692  0569  30F4               	movlw	244
  5693  056A  00A7               	movwf	(_i2c_status^(0+128)+7)
  5694  056B  3001               	movlw	1
  5695  056C  00A8               	movwf	(_i2c_status^(0+128)+8)
  5696  056D                     l5630:	
  5697                           
  5698                           ;mcc_generated_files/drivers/i2c_master.c: 128:         i2c_status.bufferFree = 1;
  5699  056D  1520               	bsf	_i2c_status^(0+128),2
  5700                           
  5701                           ;mcc_generated_files/drivers/i2c_master.c: 131:         i2c_status.callbackTable[i2c_dat
      +                          aComplete]=returnStop;
  5702  056E  30D4               	movlw	low _returnStop
  5703  056F  00AB               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
  5704  0570  300A               	movlw	high _returnStop
  5705  0571  00AC               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
  5706  0572                     l5632:	
  5707                           
  5708                           ;mcc_generated_files/drivers/i2c_master.c: 132:         i2c_status.callbackPayload[i2c_d
      +                          ataComplete] = ((void*)0);
  5709  0572  01B7               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
  5710  0573                     l5634:	
  5711                           
  5712                           ;mcc_generated_files/drivers/i2c_master.c: 133:         i2c_status.callbackTable[i2c_wri
      +                          teCollision]=returnStop;
  5713  0573  30D4               	movlw	low _returnStop
  5714  0574  00AD               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
  5715  0575  300A               	movlw	high _returnStop
  5716  0576  00AE               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
  5717                           
  5718                           ;mcc_generated_files/drivers/i2c_master.c: 134:         i2c_status.callbackPayload[i2c_w
      +                          riteCollision] = ((void*)0);
  5719  0577  01B8               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
  5720  0578                     l5636:	
  5721                           
  5722                           ;mcc_generated_files/drivers/i2c_master.c: 135:         i2c_status.callbackTable[i2c_add
      +                          ressNACK]=returnStop;
  5723  0578  30D4               	movlw	low _returnStop
  5724  0579  00AF               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
  5725  057A  300A               	movlw	high _returnStop
  5726  057B  00B0               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
  5727  057C                     l5638:	
  5728                           
  5729                           ;mcc_generated_files/drivers/i2c_master.c: 136:         i2c_status.callbackPayload[i2c_a
      +                          ddressNACK] = ((void*)0);
  5730  057C  01B9               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
  5731                           
  5732                           ;mcc_generated_files/drivers/i2c_master.c: 137:         i2c_status.callbackTable[i2c_dat
      +                          aNACK]=returnStop;
  5733  057D  30D4               	movlw	low _returnStop
  5734  057E  00B1               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
  5735  057F  300A               	movlw	high _returnStop
  5736  0580  00B2               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
  5737  0581                     l5640:	
  5738                           
  5739                           ;mcc_generated_files/drivers/i2c_master.c: 138:         i2c_status.callbackPayload[i2c_d
      +                          ataNACK] = ((void*)0);
  5740  0581  01BA               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
  5741  0582                     l5642:	
  5742                           
  5743                           ;mcc_generated_files/drivers/i2c_master.c: 139:         i2c_status.callbackTable[i2c_tim
      +                          eOut]=returnReset;
  5744  0582  30DA               	movlw	low _returnReset
  5745  0583  00B3               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
  5746  0584  300A               	movlw	high _returnReset
  5747  0585  00B4               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
  5748                           
  5749                           ;mcc_generated_files/drivers/i2c_master.c: 140:         i2c_status.callbackPayload[i2c_t
      +                          imeOut] = ((void*)0);
  5750  0586  01BB               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
  5751  0587                     l5644:	
  5752                           
  5753                           ;mcc_generated_files/drivers/i2c_master.c: 142:         i2c_driver_open();
  5754  0587  318B  23D5  3185   	fcall	_i2c_driver_open
  5755  058A                     l5646:	
  5756                           
  5757                           ;mcc_generated_files/drivers/i2c_master.c: 143:         mssp_clearIRQ();
  5758  058A  318A  2262  3185   	fcall	_mssp_clearIRQ
  5759  058D                     l5648:	
  5760                           
  5761                           ;mcc_generated_files/drivers/i2c_master.c: 145:         i2c_driver_setBusCollisionISR(i2
      +                          c_busCollisionISR);
  5762  058D  307A               	movlw	low _i2c_busCollisionISR
  5763  058E  0020               	movlb	0	; select bank0
  5764  058F  00D3               	movwf	i2c_driver_setBusCollisionISR@handler
  5765  0590  300A               	movlw	high _i2c_busCollisionISR
  5766  0591  00D4               	movwf	i2c_driver_setBusCollisionISR@handler+1
  5767  0592  318A  22EC  3185   	fcall	_i2c_driver_setBusCollisionISR
  5768  0595                     l5650:	
  5769                           
  5770                           ;mcc_generated_files/drivers/i2c_master.c: 146:         i2c_driver_setI2cISR(i2c_ISR);
  5771  0595  3033               	movlw	low _i2c_ISR
  5772  0596  0020               	movlb	0	; select bank0
  5773  0597  00D3               	movwf	i2c_driver_setI2cISR@handler
  5774  0598  300F               	movlw	high _i2c_ISR
  5775  0599  00D4               	movwf	i2c_driver_setI2cISR@handler+1
  5776  059A  318A  22F2  3185   	fcall	_i2c_driver_setI2cISR
  5777  059D                     l5652:	
  5778                           
  5779                           ;mcc_generated_files/drivers/i2c_master.c: 151:         ret = I2C_NOERR;
  5780  059D  0020               	movlb	0	; select bank0
  5781  059E  01D7               	clrf	i2c_open@ret
  5782  059F                     l76:	
  5783                           ;mcc_generated_files/drivers/i2c_master.c: 152:     }
  5784                           
  5785                           
  5786                           ;mcc_generated_files/drivers/i2c_master.c: 153:     return ret;
  5787  059F  0020               	movlb	0	; select bank0
  5788  05A0  0857               	movf	i2c_open@ret,w
  5789  05A1                     l77:	
  5790  05A1  0008               	return
  5791  05A2                     __end_of_i2c_open:	
  5792                           
  5793                           	psect	text10
  5794  0AF2                     __ptext10:	
  5795 ;; *************** function _i2c_driver_setI2cISR *****************
  5796 ;; Defined at:
  5797 ;;		line 263 in file "mcc_generated_files/i2c_driver.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  5800 ;;		 -> i2c_ISR(1), 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    6
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_i2c_open
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _i2c_driver_setI2cISR
  5828  0AF2                     _i2c_driver_setI2cISR:	
  5829  0AF2                     l5592:	
  5830                           ;incstack = 0
  5831                           ; Regs used in _i2c_driver_setI2cISR: [wreg]
  5832                           
  5833                           
  5834                           ;mcc_generated_files/i2c_driver.c: 264:     i2c_driver_i2cISR = handler;
  5835  0AF2  0020               	movlb	0	; select bank0
  5836  0AF3  0854               	movf	i2c_driver_setI2cISR@handler+1,w
  5837  0AF4  00C5               	movwf	_i2c_driver_i2cISR+1
  5838  0AF5  0853               	movf	i2c_driver_setI2cISR@handler,w
  5839  0AF6  00C4               	movwf	_i2c_driver_i2cISR
  5840  0AF7                     l699:	
  5841  0AF7  0008               	return
  5842  0AF8                     __end_of_i2c_driver_setI2cISR:	
  5843                           
  5844                           	psect	text11
  5845  0AEC                     __ptext11:	
  5846 ;; *************** function _i2c_driver_setBusCollisionISR *****************
  5847 ;; Defined at:
  5848 ;;		line 259 in file "mcc_generated_files/i2c_driver.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  5851 ;;		 -> i2c_busCollisionISR(1), 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:        2 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    6
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_i2c_open
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _i2c_driver_setBusCollisionISR
  5879  0AEC                     _i2c_driver_setBusCollisionISR:	
  5880  0AEC                     l5590:	
  5881                           ;incstack = 0
  5882                           ; Regs used in _i2c_driver_setBusCollisionISR: [wreg]
  5883                           
  5884                           
  5885                           ;mcc_generated_files/i2c_driver.c: 260:     i2c_driver_busCollisionISR = handler;
  5886  0AEC  0020               	movlb	0	; select bank0
  5887  0AED  0854               	movf	i2c_driver_setBusCollisionISR@handler+1,w
  5888  0AEE  00FB               	movwf	_i2c_driver_busCollisionISR+1
  5889  0AEF  0853               	movf	i2c_driver_setBusCollisionISR@handler,w
  5890  0AF0  00FA               	movwf	_i2c_driver_busCollisionISR
  5891  0AF1                     l696:	
  5892  0AF1  0008               	return
  5893  0AF2                     __end_of_i2c_driver_setBusCollisionISR:	
  5894                           
  5895                           	psect	text12
  5896  0BD5                     __ptext12:	
  5897 ;; *************** function _i2c_driver_open *****************
  5898 ;; Defined at:
  5899 ;;		line 84 in file "mcc_generated_files/i2c_driver.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;		None               void
  5906 ;; Registers used:
  5907 ;;		wreg, status,2
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;Total ram usage:        0 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    6
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_i2c_open
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           
  5928                           ;psect for function _i2c_driver_open
  5929  0BD5                     _i2c_driver_open:	
  5930  0BD5                     l5578:	
  5931                           ;incstack = 0
  5932                           ; Regs used in _i2c_driver_open: [wreg+status,2]
  5933                           
  5934  0BD5  0024               	movlb	4	; select bank4
  5935  0BD6  1A95               	btfsc	21,5	;volatile
  5936  0BD7  2BD9               	goto	u3511
  5937  0BD8  2BDA               	goto	u3510
  5938  0BD9                     u3511:	
  5939  0BD9  2BE0               	goto	l615
  5940  0BDA                     u3510:	
  5941  0BDA                     l5580:	
  5942  0BDA  0194               	clrf	20	;volatile
  5943  0BDB                     l5582:	
  5944  0BDB  3028               	movlw	40
  5945  0BDC  0095               	movwf	21	;volatile
  5946  0BDD                     l5584:	
  5947  0BDD  0196               	clrf	22	;volatile
  5948  0BDE  304F               	movlw	79
  5949  0BDF  0092               	movwf	18	;volatile
  5950  0BE0                     l615:	
  5951  0BE0  0008               	return
  5952  0BE1                     __end_of_i2c_driver_open:	
  5953                           
  5954                           	psect	text13
  5955  0AC3                     __ptext13:	
  5956 ;; *************** function _i2c_masterWrite *****************
  5957 ;; Defined at:
  5958 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      enum E3252
  5965 ;; Registers used:
  5966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;Total ram usage:        0 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:   13
  5979 ;; This function calls:
  5980 ;;		_i2c_masterOperation
  5981 ;; This function is called by:
  5982 ;;		_i2c_writeNBytes
  5983 ;;		_i2c_readDataBlock
  5984 ;;		_i2c_write1ByteRegister
  5985 ;;		_i2c_read1ByteRegister
  5986 ;;		_i2c_read2ByteRegister
  5987 ;;		_i2c_write2ByteRegister
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           
  5992                           ;psect for function _i2c_masterWrite
  5993  0AC3                     _i2c_masterWrite:	
  5994  0AC3                     l5668:	
  5995                           ;incstack = 0
  5996                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5997                           
  5998                           
  5999                           ;mcc_generated_files/drivers/i2c_master.c: 224:     return i2c_masterOperation(0);;	Retu
      +                          rn value of _i2c_masterWrite is never used
  6000  0AC3  3000               	movlw	0
  6001  0AC4  318E  2657  318A   	fcall	_i2c_masterOperation
  6002  0AC7                     l104:	
  6003  0AC7  0008               	return
  6004  0AC8                     __end_of_i2c_masterWrite:	
  6005                           
  6006                           	psect	text14
  6007  0E57                     __ptext14:	
  6008 ;; *************** function _i2c_masterOperation *****************
  6009 ;; Defined at:
  6010 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  read            1    wreg     _Bool 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  read            1    8[BANK0 ] _Bool 
  6015 ;;  ret             1    9[BANK0 ] enum E3252
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      enum E3252
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;Total ram usage:        3 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:   12
  6032 ;; This function calls:
  6033 ;;		_i2c_driver_start
  6034 ;;		_i2c_poller
  6035 ;;		_mssp_IRQisEnabled
  6036 ;; This function is called by:
  6037 ;;		_i2c_masterWrite
  6038 ;;		_i2c_masterRead
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           
  6043                           ;psect for function _i2c_masterOperation
  6044  0E57                     _i2c_masterOperation:	
  6045                           
  6046                           ;incstack = 0
  6047                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6048                           ;i2c_masterOperation@read stored from wreg
  6049  0E57  0020               	movlb	0	; select bank0
  6050  0E58  00DB               	movwf	i2c_masterOperation@read
  6051  0E59                     l5596:	
  6052                           
  6053                           ;mcc_generated_files/drivers/i2c_master.c: 193: i2c_error_t i2c_masterOperation(_Bool re
      +                          ad);mcc_generated_files/drivers/i2c_master.c: 194: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 195:     i2c_error_t ret = I2C_BUSY;
  6054  0E59  01DC               	clrf	i2c_masterOperation@ret
  6055  0E5A  0ADC               	incf	i2c_masterOperation@ret,f
  6056                           
  6057                           ;mcc_generated_files/drivers/i2c_master.c: 196:     if(!i2c_status.busy)
  6058  0E5B  0021               	movlb	1	; select bank1
  6059  0E5C  1820               	btfsc	_i2c_status^(0+128),0
  6060  0E5D  2E5F               	goto	u3521
  6061  0E5E  2E60               	goto	u3520
  6062  0E5F                     u3521:	
  6063  0E5F  2E7E               	goto	l5612
  6064  0E60                     u3520:	
  6065  0E60                     l5598:	
  6066                           
  6067                           ;mcc_generated_files/drivers/i2c_master.c: 197:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 198:         i2c_status.busy = 1;
  6068  0E60  1420               	bsf	_i2c_status^(0+128),0
  6069  0E61                     l5600:	
  6070                           
  6071                           ;mcc_generated_files/drivers/i2c_master.c: 199:         ret = I2C_NOERR;
  6072  0E61  0020               	movlb	0	; select bank0
  6073  0E62  01DC               	clrf	i2c_masterOperation@ret
  6074  0E63                     l5602:	
  6075                           
  6076                           ;mcc_generated_files/drivers/i2c_master.c: 201:         if(read)
  6077  0E63  085B               	movf	i2c_masterOperation@read,w
  6078  0E64  1903               	btfsc	3,2
  6079  0E65  2E67               	goto	u3531
  6080  0E66  2E68               	goto	u3530
  6081  0E67                     u3531:	
  6082  0E67  2E6C               	goto	l5606
  6083  0E68                     u3530:	
  6084  0E68                     l5604:	
  6085                           
  6086                           ;mcc_generated_files/drivers/i2c_master.c: 202:         {;mcc_generated_files/drivers/i2
      +                          c_master.c: 203:             i2c_status.state = I2C_SEND_ADR_READ;
  6087  0E68  0021               	movlb	1	; select bank1
  6088  0E69  01A9               	clrf	(_i2c_status^(0+128)+9)
  6089  0E6A  0AA9               	incf	(_i2c_status^(0+128)+9),f
  6090                           
  6091                           ;mcc_generated_files/drivers/i2c_master.c: 204:         }
  6092  0E6B  2E71               	goto	l5608
  6093  0E6C                     l5606:	
  6094                           
  6095                           ;mcc_generated_files/drivers/i2c_master.c: 206:         {;mcc_generated_files/drivers/i2
      +                          c_master.c: 207:             i2c_status.state = I2C_SEND_ADR_WRITE;
  6096  0E6C  3002               	movlw	2
  6097  0E6D  00DA               	movwf	??_i2c_masterOperation
  6098  0E6E  085A               	movf	??_i2c_masterOperation,w
  6099  0E6F  0021               	movlb	1	; select bank1
  6100  0E70  00A9               	movwf	(_i2c_status^(0+128)+9)
  6101  0E71                     l5608:	
  6102                           
  6103                           ;mcc_generated_files/drivers/i2c_master.c: 209:         i2c_driver_start();
  6104  0E71  318A  2268  318E   	fcall	_i2c_driver_start
  6105                           
  6106                           ;mcc_generated_files/drivers/i2c_master.c: 211:         if(! mssp_IRQisEnabled())
  6107  0E74  318B  2390  318E   	fcall	_mssp_IRQisEnabled
  6108  0E77  1803               	btfsc	3,0
  6109  0E78  2E7A               	goto	u3541
  6110  0E79  2E7B               	goto	u3540
  6111  0E7A                     u3541:	
  6112  0E7A  2E7E               	goto	l5612
  6113  0E7B                     u3540:	
  6114  0E7B                     l5610:	
  6115                           
  6116                           ;mcc_generated_files/drivers/i2c_master.c: 212:             i2c_poller();
  6117  0E7B  318C  240A  318E   	fcall	_i2c_poller
  6118  0E7E                     l5612:	
  6119                           
  6120                           ;mcc_generated_files/drivers/i2c_master.c: 214:     return ret;
  6121  0E7E  0020               	movlb	0	; select bank0
  6122  0E7F  085C               	movf	i2c_masterOperation@ret,w
  6123  0E80                     l98:	
  6124  0E80  0008               	return
  6125  0E81                     __end_of_i2c_masterOperation:	
  6126                           
  6127                           	psect	text15
  6128  0B90                     __ptext15:	
  6129 ;; *************** function _mssp_IRQisEnabled *****************
  6130 ;; Defined at:
  6131 ;;		line 44 in file "mcc_generated_files/i2c_driver.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;		None
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;		None
  6136 ;; Return value:  Size  Location     Type
  6137 ;;		None               void
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;Total ram usage:        2 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    6
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_i2c_masterOperation
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           
  6160                           ;psect for function _mssp_IRQisEnabled
  6161  0B90                     _mssp_IRQisEnabled:	
  6162  0B90                     l5560:	
  6163                           ;incstack = 0
  6164                           ; Regs used in _mssp_IRQisEnabled: [wreg+status,2+status,0]
  6165                           
  6166                           
  6167                           ;mcc_generated_files/i2c_driver.c: 46:             _delay((unsigned long)((100)*(3200000
      +                          0/4000000.0)));
  6168  0B90  0021               	movlb	1	; select bank1
  6169  0B91  0C11               	rrf	17,w	;volatile
  6170  0B92  0020               	movlb	0	; select bank0
  6171  0B93  00D3               	movwf	??_mssp_IRQisEnabled
  6172  0B94  0CD3               	rrf	??_mssp_IRQisEnabled,f
  6173  0B95  0C53               	rrf	??_mssp_IRQisEnabled,w
  6174  0B96  3901               	andlw	1
  6175  0B97  00D4               	movwf	??_mssp_IRQisEnabled+1
  6176  0B98  0C54               	rrf	??_mssp_IRQisEnabled+1,w
  6177  0B99                     l591:	
  6178  0B99  0008               	return
  6179  0B9A                     __end_of_mssp_IRQisEnabled:	
  6180                           
  6181                           	psect	text16
  6182  0C0A                     __ptext16:	
  6183 ;; *************** function _i2c_poller *****************
  6184 ;; Defined at:
  6185 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:   11
  6206 ;; This function calls:
  6207 ;;		_i2c_ISR
  6208 ;;		_mssp_waitForEvent
  6209 ;; This function is called by:
  6210 ;;		_i2c_masterOperation
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _i2c_poller
  6216  0C0A                     _i2c_poller:	
  6217  0C0A                     l5564:	
  6218                           ;incstack = 0
  6219                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6220                           
  6221                           
  6222                           ;mcc_generated_files/drivers/i2c_master.c: 232:     while(i2c_status.busy)
  6223  0C0A  2C12               	goto	l5570
  6224  0C0B                     l5566:	
  6225                           
  6226                           ;mcc_generated_files/drivers/i2c_master.c: 233:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 234:         mssp_waitForEvent(((void*)0));
  6227  0C0B  3000               	movlw	0
  6228  0C0C  318C  2445  318C   	fcall	_mssp_waitForEvent
  6229  0C0F                     l5568:	
  6230                           
  6231                           ;mcc_generated_files/drivers/i2c_master.c: 235:         i2c_ISR();
  6232  0C0F  318F  2733  318C   	fcall	_i2c_ISR
  6233  0C12                     l5570:	
  6234                           
  6235                           ;mcc_generated_files/drivers/i2c_master.c: 232:     while(i2c_status.busy)
  6236  0C12  0021               	movlb	1	; select bank1
  6237  0C13  1820               	btfsc	_i2c_status^(0+128),0
  6238  0C14  2C16               	goto	u3491
  6239  0C15  2C17               	goto	u3490
  6240  0C16                     u3491:	
  6241  0C16  2C0B               	goto	l5566
  6242  0C17                     u3490:	
  6243  0C17                     l110:	
  6244  0C17  0008               	return
  6245  0C18                     __end_of_i2c_poller:	
  6246                           
  6247                           	psect	text17
  6248  0C45                     __ptext17:	
  6249 ;; *************** function _mssp_waitForEvent *****************
  6250 ;; Defined at:
  6251 ;;		line 69 in file "mcc_generated_files/i2c_driver.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  timeout         1    wreg     PTR unsigned short 
  6254 ;;		 -> NULL(0), 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  timeout         1    0[BANK0 ] PTR unsigned short 
  6257 ;;		 -> NULL(0), 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        1 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    6
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_i2c_poller
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _mssp_waitForEvent
  6283  0C45                     _mssp_waitForEvent:	
  6284  0C45                     l5542:	
  6285                           ;incstack = 0
  6286                           ; Regs used in _mssp_waitForEvent: [wreg]
  6287                           
  6288  0C45  0020               	movlb	0	; select bank0
  6289  0C46  1991               	btfsc	17,3	;volatile
  6290  0C47  2C49               	goto	u3451
  6291  0C48  2C4A               	goto	u3450
  6292  0C49                     u3451:	
  6293  0C49  2C55               	goto	l611
  6294  0C4A                     u3450:	
  6295  0C4A                     l607:	
  6296  0C4A  0020               	movlb	0	; select bank0
  6297  0C4B  1D91               	btfss	17,3	;volatile
  6298  0C4C  2C4E               	goto	u3461
  6299  0C4D  2C4F               	goto	u3460
  6300  0C4E                     u3461:	
  6301  0C4E  2C50               	goto	l5546
  6302  0C4F                     u3460:	
  6303  0C4F  2C55               	goto	l611
  6304  0C50                     l5546:	
  6305  0C50  30A0               	movlw	160
  6306  0C51                     u4837:	
  6307  0C51  3200               	nop2
  6308  0C52  0B89               	decfsz	9,f
  6309  0C53  2C51               	goto	u4837
  6310  0C54  2C4A               	goto	l607
  6311  0C55                     l611:	
  6312  0C55  0008               	return
  6313  0C56                     __end_of_mssp_waitForEvent:	
  6314                           
  6315                           	psect	text18
  6316  0F33                     __ptext18:	
  6317 ;; *************** function _i2c_ISR *****************
  6318 ;; Defined at:
  6319 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;Total ram usage:        3 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:   10
  6340 ;; This function calls:
  6341 ;;		_do_I2C_DO_ACK
  6342 ;;		_do_I2C_DO_ADDRESS_NACK
  6343 ;;		_do_I2C_DO_NACK_RESTART
  6344 ;;		_do_I2C_DO_NACK_STOP
  6345 ;;		_do_I2C_IDLE
  6346 ;;		_do_I2C_RCEN
  6347 ;;		_do_I2C_RESET
  6348 ;;		_do_I2C_RX
  6349 ;;		_do_I2C_SEND_ADR_READ
  6350 ;;		_do_I2C_SEND_ADR_WRITE
  6351 ;;		_do_I2C_SEND_RESTART
  6352 ;;		_do_I2C_SEND_RESTART_READ
  6353 ;;		_do_I2C_SEND_RESTART_WRITE
  6354 ;;		_do_I2C_SEND_STOP
  6355 ;;		_do_I2C_TX
  6356 ;;		_do_I2C_TX_EMPTY
  6357 ;;		_i2c_driver_isNACK
  6358 ;;		_mssp_clearIRQ
  6359 ;; This function is called by:
  6360 ;;		_i2c_open
  6361 ;;		_i2c_poller
  6362 ;;		_INTERRUPT_InterruptManager
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function _i2c_ISR
  6368  0F33                     _i2c_ISR:	
  6369                           
  6370                           ;Skip over the trampoline to the duplicate function for level 1
  6371  0F33  1C7E               	btfss	int$flags,0
  6372  0F34  2F37               	goto	_i2c_ISR$intlevel0
  6373  0F35  318E  2E2D         	ljmp	i1_i2c_ISR
  6374  0F37                     _i2c_ISR$intlevel0:	
  6375  0F37                     l5548:	
  6376                           ;incstack = 0
  6377                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6378                           
  6379                           
  6380                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp_clearIRQ();
  6381  0F37  318A  2262  318F   	fcall	_mssp_clearIRQ
  6382  0F3A                     l5550:	
  6383                           
  6384                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c_driver_isNACK())
  6385  0F3A  0021               	movlb	1	; select bank1
  6386  0F3B  1DA0               	btfss	_i2c_status^(0+128),3
  6387  0F3C  2F3E               	goto	u3471
  6388  0F3D  2F3F               	goto	u3470
  6389  0F3E                     u3471:	
  6390  0F3E  2F4C               	goto	l5556
  6391  0F3F                     u3470:	
  6392  0F3F                     l5552:	
  6393  0F3F  318B  233F  318F   	fcall	_i2c_driver_isNACK
  6394  0F42  1C03               	btfss	3,0
  6395  0F43  2F45               	goto	u3481
  6396  0F44  2F46               	goto	u3480
  6397  0F45                     u3481:	
  6398  0F45  2F4C               	goto	l5556
  6399  0F46                     u3480:	
  6400  0F46                     l5554:	
  6401                           
  6402                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  6403  0F46  300F               	movlw	15
  6404  0F47  0020               	movlb	0	; select bank0
  6405  0F48  00D7               	movwf	??_i2c_ISR
  6406  0F49  0857               	movf	??_i2c_ISR,w
  6407  0F4A  0021               	movlb	1	; select bank1
  6408  0F4B  00A9               	movwf	(_i2c_status^(0+128)+9)
  6409  0F4C                     l5556:	
  6410                           
  6411                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  6412  0F4C  0021               	movlb	1	; select bank1
  6413  0F4D  0829               	movf	(_i2c_status^(0+128)+9),w
  6414  0F4E  0020               	movlb	0	; select bank0
  6415  0F4F  00D7               	movwf	??_i2c_ISR
  6416  0F50  01D8               	clrf	??_i2c_ISR+1
  6417  0F51  35D7               	lslf	??_i2c_ISR,f
  6418  0F52  0DD8               	rlf	??_i2c_ISR+1,f
  6419  0F53  3000               	movlw	low (_fsmStateTable| (0+32768))
  6420  0F54  0757               	addwf	??_i2c_ISR,w
  6421  0F55  0084               	movwf	4
  6422  0F56  3090               	movlw	high (_fsmStateTable| (0+32768))
  6423  0F57  3D58               	addwfc	??_i2c_ISR+1,w
  6424  0F58  0085               	movwf	5
  6425  0F59  3F01               	moviw [1]fsr0
  6426  0F5A  008A               	movwf	10
  6427  0F5B  3F00               	moviw [0]fsr0
  6428  0F5C  000A               	callw
  6429  0F5D  318F               	pagesel	$
  6430  0F5E  0020               	movlb	0	; select bank0
  6431  0F5F  00D9               	movwf	??_i2c_ISR+2
  6432  0F60  0859               	movf	??_i2c_ISR+2,w
  6433  0F61  0021               	movlb	1	; select bank1
  6434  0F62  00A9               	movwf	(_i2c_status^(0+128)+9)
  6435  0F63                     l198:	
  6436  0F63  0008               	return
  6437  0F64                     __end_of_i2c_ISR:	
  6438                           
  6439                           	psect	text19
  6440  04FE                     __ptext19:	
  6441 ;; *************** function _do_I2C_RX *****************
  6442 ;; Defined at:
  6443 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      enum E3411
  6450 ;; Registers used:
  6451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;Total ram usage:        3 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    9
  6464 ;; This function calls:
  6465 ;;		Absolute function
  6466 ;;		_do_I2C_DO_NACK_RESTART
  6467 ;;		_do_I2C_DO_NACK_STOP
  6468 ;;		_i2c_driver_getRXData
  6469 ;;		_i2c_driver_sendACK
  6470 ;;		_i2c_restartWrite
  6471 ;;		_rd1RegCompleteHandler
  6472 ;;		_rd2RegCompleteHandler
  6473 ;;		_rdBlkRegCompleteHandler
  6474 ;;		_returnReset
  6475 ;;		_returnStop
  6476 ;;		_wr1RegCompleteHandler
  6477 ;;		_wr2RegCompleteHandler
  6478 ;; This function is called by:
  6479 ;;		_i2c_ISR
  6480 ;;		i1_i2c_ISR
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _do_I2C_RX
  6486  04FE                     _do_I2C_RX:	
  6487                           
  6488                           ;Skip over the trampoline to the duplicate function for level 1
  6489  04FE  1C7E               	btfss	int$flags,0
  6490  04FF  2D02               	goto	_do_I2C_RX$intlevel0
  6491  0500  3185  2DA2         	ljmp	i1_do_I2C_RX
  6492  0502                     _do_I2C_RX$intlevel0:	
  6493  0502                     l5488:	
  6494                           ;incstack = 0
  6495                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6496                           
  6497                           
  6498                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c_driver_
      +                          getRXData();
  6499  0502  318A  2274  3184   	fcall	_i2c_driver_getRXData
  6500  0505  0020               	movlb	0	; select bank0
  6501  0506  00D3               	movwf	??_do_I2C_RX
  6502  0507  0021               	movlb	1	; select bank1
  6503  0508  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
  6504  0509  0086               	movwf	6
  6505  050A  0187               	clrf	7
  6506  050B  0020               	movlb	0	; select bank0
  6507  050C  0853               	movf	??_do_I2C_RX,w
  6508  050D  0081               	movwf	1
  6509  050E                     l5490:	
  6510  050E  3001               	movlw	1
  6511  050F  00D3               	movwf	??_do_I2C_RX
  6512  0510  0853               	movf	??_do_I2C_RX,w
  6513  0511  0021               	movlb	1	; select bank1
  6514  0512  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
  6515  0513                     l5492:	
  6516                           
  6517                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  6518  0513  3001               	movlw	1
  6519  0514  02A3               	subwf	(_i2c_status^(0+128)+3),f
  6520  0515  3000               	movlw	0
  6521  0516  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
  6522  0517  0823               	movf	(_i2c_status^(0+128)+3),w
  6523  0518  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
  6524  0519  1903               	btfsc	3,2
  6525  051A  2D1C               	goto	u3441
  6526  051B  2D1D               	goto	u3440
  6527  051C                     u3441:	
  6528  051C  2D22               	goto	l173
  6529  051D                     u3440:	
  6530  051D                     l5494:	
  6531                           
  6532                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c_driver_sendACK();
  6533  051D  318A  228E  3184   	fcall	_i2c_driver_sendACK
  6534  0520                     l5496:	
  6535                           
  6536                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  6537  0520  3005               	movlw	5
  6538  0521  2D50               	goto	l174
  6539  0522                     l173:	
  6540                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  6541                           
  6542                           
  6543                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  6544  0522  1520               	bsf	_i2c_status^(0+128),2
  6545                           
  6546                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  6547  0523  2D2C               	goto	l5512
  6548  0524                     l5502:	
  6549                           
  6550                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  6551  0524  318B  2387  3184   	fcall	_do_I2C_DO_NACK_RESTART
  6552  0527  2D50               	goto	l174
  6553  0528                     l5506:	
  6554                           
  6555                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  6556  0528  318B  237E  3184   	fcall	_do_I2C_DO_NACK_STOP
  6557  052B  2D50               	goto	l174
  6558  052C                     l5512:	
  6559  052C  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  6560  052D  0020               	movlb	0	; select bank0
  6561  052E  00D3               	movwf	??_do_I2C_RX
  6562  052F  0853               	movf	??_do_I2C_RX,w
  6563  0530  00DC               	movwf	wr1RegCompleteHandler@p
  6564  0531  300B               	movlw	11
  6565  0532  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6566  0533  0086               	movwf	6
  6567  0534  0187               	clrf	7
  6568  0535  3F41               	moviw [1]fsr1
  6569  0536  008A               	movwf	10
  6570  0537  3F40               	moviw [0]fsr1
  6571  0538  000A               	callw
  6572  0539  3184               	pagesel	$
  6573  053A  0020               	movlb	0	; select bank0
  6574  053B  00D4               	movwf	??_do_I2C_RX+1
  6575  053C  01D5               	clrf	??_do_I2C_RX+2
  6576                           
  6577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6578                           ; Switch size 1, requested type "simple"
  6579                           ; Number of cases is 1, Range of values is 0 to 0
  6580                           ; switch strategies available:
  6581                           ; Name         Instructions Cycles
  6582                           ; simple_byte            4     3 (average)
  6583                           ; direct_byte            8     6 (fixed)
  6584                           ; jumptable            260     6 (fixed)
  6585                           ;	Chosen strategy is simple_byte
  6586  053D  0855               	movf	??_do_I2C_RX+2,w
  6587  053E  3A00               	xorlw	0	; case 0
  6588  053F  1903               	skipnz
  6589  0540  2D42               	goto	l6750
  6590  0541  2D28               	goto	l5506
  6591  0542                     l6750:	
  6592                           
  6593                           ; Switch size 1, requested type "simple"
  6594                           ; Number of cases is 4, Range of values is 1 to 4
  6595                           ; switch strategies available:
  6596                           ; Name         Instructions Cycles
  6597                           ; simple_byte           13     7 (average)
  6598                           ; direct_byte           17     9 (fixed)
  6599                           ; jumptable            263     9 (fixed)
  6600                           ;	Chosen strategy is simple_byte
  6601  0542  0854               	movf	??_do_I2C_RX+1,w
  6602  0543  3A01               	xorlw	1	; case 1
  6603  0544  1903               	skipnz
  6604  0545  2D28               	goto	l5506
  6605  0546  3A03               	xorlw	3	; case 2
  6606  0547  1903               	skipnz
  6607  0548  2D24               	goto	l5502
  6608  0549  3A01               	xorlw	1	; case 3
  6609  054A  1903               	skipnz
  6610  054B  2D24               	goto	l5502
  6611  054C  3A07               	xorlw	7	; case 4
  6612  054D  1903               	skipnz
  6613  054E  2D28               	goto	l5506
  6614  054F  2D28               	goto	l5506
  6615  0550                     l174:	
  6616  0550  0008               	return
  6617  0551                     __end_of_do_I2C_RX:	
  6618                           
  6619                           	psect	text20
  6620  044F                     __ptext20:	
  6621 ;; *************** function _do_I2C_TX *****************
  6622 ;; Defined at:
  6623 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      enum E3411
  6630 ;; Registers used:
  6631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;Total ram usage:        3 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    9
  6644 ;; This function calls:
  6645 ;;		Absolute function
  6646 ;;		_do_I2C_SEND_RESTART_READ
  6647 ;;		_do_I2C_SEND_RESTART_WRITE
  6648 ;;		_do_I2C_SEND_STOP
  6649 ;;		_i2c_driver_TXData
  6650 ;;		_i2c_driver_isNACK
  6651 ;;		_i2c_restartWrite
  6652 ;;		_rd1RegCompleteHandler
  6653 ;;		_rd2RegCompleteHandler
  6654 ;;		_rdBlkRegCompleteHandler
  6655 ;;		_returnReset
  6656 ;;		_returnStop
  6657 ;;		_wr1RegCompleteHandler
  6658 ;;		_wr2RegCompleteHandler
  6659 ;; This function is called by:
  6660 ;;		_i2c_ISR
  6661 ;;		i1_i2c_ISR
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           
  6666                           ;psect for function _do_I2C_TX
  6667  044F                     _do_I2C_TX:	
  6668                           
  6669                           ;Skip over the trampoline to the duplicate function for level 1
  6670  044F  1C7E               	btfss	int$flags,0
  6671  0450  2C53               	goto	_do_I2C_TX$intlevel0
  6672  0451  3184  2CA9         	ljmp	i1_do_I2C_TX
  6673  0453                     _do_I2C_TX$intlevel0:	
  6674  0453                     l5454:	
  6675                           ;incstack = 0
  6676                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6677                           
  6678                           
  6679                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c_driver_isNACK())
  6680  0453  318B  233F  3184   	fcall	_i2c_driver_isNACK
  6681  0456  1C03               	btfss	3,0
  6682  0457  2C59               	goto	u3421
  6683  0458  2C5A               	goto	u3420
  6684  0459                     u3421:	
  6685  0459  2C8C               	goto	l157
  6686  045A                     u3420:	
  6687  045A  2C67               	goto	l5472
  6688  045B                     l5458:	
  6689                           
  6690                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  6691  045B  318B  2351  3184   	fcall	_do_I2C_SEND_RESTART_READ
  6692  045E  2CA8               	goto	l160
  6693  045F                     l5462:	
  6694                           
  6695                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  6696  045F  318B  235A  3184   	fcall	_do_I2C_SEND_RESTART_WRITE
  6697  0462  2CA8               	goto	l160
  6698  0463                     l5466:	
  6699                           
  6700                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  6701  0463  318B  236C  3184   	fcall	_do_I2C_SEND_STOP
  6702  0466  2CA8               	goto	l160
  6703  0467                     l5472:	
  6704  0467  0021               	movlb	1	; select bank1
  6705  0468  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
  6706  0469  0020               	movlb	0	; select bank0
  6707  046A  00D4               	movwf	??_do_I2C_TX
  6708  046B  0854               	movf	??_do_I2C_TX,w
  6709  046C  00DC               	movwf	wr1RegCompleteHandler@p
  6710  046D  3011               	movlw	17
  6711  046E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6712  046F  0086               	movwf	6
  6713  0470  0187               	clrf	7
  6714  0471  3F41               	moviw [1]fsr1
  6715  0472  008A               	movwf	10
  6716  0473  3F40               	moviw [0]fsr1
  6717  0474  000A               	callw
  6718  0475  3184               	pagesel	$
  6719  0476  0020               	movlb	0	; select bank0
  6720  0477  00D5               	movwf	??_do_I2C_TX+1
  6721  0478  01D6               	clrf	??_do_I2C_TX+2
  6722                           
  6723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6724                           ; Switch size 1, requested type "simple"
  6725                           ; Number of cases is 1, Range of values is 0 to 0
  6726                           ; switch strategies available:
  6727                           ; Name         Instructions Cycles
  6728                           ; simple_byte            4     3 (average)
  6729                           ; direct_byte            8     6 (fixed)
  6730                           ; jumptable            260     6 (fixed)
  6731                           ;	Chosen strategy is simple_byte
  6732  0479  0856               	movf	??_do_I2C_TX+2,w
  6733  047A  3A00               	xorlw	0	; case 0
  6734  047B  1903               	skipnz
  6735  047C  2C7E               	goto	l6752
  6736  047D  2C63               	goto	l5466
  6737  047E                     l6752:	
  6738                           
  6739                           ; Switch size 1, requested type "simple"
  6740                           ; Number of cases is 4, Range of values is 1 to 4
  6741                           ; switch strategies available:
  6742                           ; Name         Instructions Cycles
  6743                           ; simple_byte           13     7 (average)
  6744                           ; direct_byte           17     9 (fixed)
  6745                           ; jumptable            263     9 (fixed)
  6746                           ;	Chosen strategy is simple_byte
  6747  047E  0855               	movf	??_do_I2C_TX+1,w
  6748  047F  3A01               	xorlw	1	; case 1
  6749  0480  1903               	skipnz
  6750  0481  2C63               	goto	l5466
  6751  0482  3A03               	xorlw	3	; case 2
  6752  0483  1903               	skipnz
  6753  0484  2C5B               	goto	l5458
  6754  0485  3A01               	xorlw	1	; case 3
  6755  0486  1903               	skipnz
  6756  0487  2C5F               	goto	l5462
  6757  0488  3A07               	xorlw	7	; case 4
  6758  0489  1903               	skipnz
  6759  048A  2C63               	goto	l5466
  6760  048B  2C63               	goto	l5466
  6761  048C                     l157:	
  6762                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  6763                           
  6764                           
  6765                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  6766  048C  0021               	movlb	1	; select bank1
  6767  048D  11A0               	bcf	_i2c_status^(0+128),3
  6768  048E                     l5474:	
  6769                           
  6770                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c_driver_TXData(*i2c_status.da
      +                          ta_ptr++);
  6771  048E  3002               	movlw	2
  6772  048F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6773  0490  0086               	movwf	6
  6774  0491  0187               	clrf	7
  6775  0492  3F40               	moviw [0]fsr1
  6776  0493  0084               	movwf	4
  6777  0494  0185               	clrf	5
  6778  0495  0A81               	incf	1,f
  6779  0496  0800               	movf	0,w
  6780  0497  318A  22E6  3184   	fcall	_i2c_driver_TXData
  6781  049A                     l5476:	
  6782                           
  6783                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  6784  049A  3001               	movlw	1
  6785  049B  0021               	movlb	1	; select bank1
  6786  049C  02A3               	subwf	(_i2c_status^(0+128)+3),f
  6787  049D  3000               	movlw	0
  6788  049E  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
  6789  049F  0823               	movf	(_i2c_status^(0+128)+3),w
  6790  04A0  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
  6791  04A1  1D03               	btfss	3,2
  6792  04A2  2CA4               	goto	u3431
  6793  04A3  2CA5               	goto	u3430
  6794  04A4                     u3431:	
  6795  04A4  2CA7               	goto	l5480
  6796  04A5                     u3430:	
  6797  04A5                     l5478:	
  6798  04A5  3006               	movlw	6
  6799  04A6  2CA8               	goto	l160
  6800  04A7                     l5480:	
  6801  04A7  3003               	movlw	3
  6802  04A8                     l160:	
  6803  04A8  0008               	return
  6804  04A9                     __end_of_do_I2C_TX:	
  6805                           
  6806                           	psect	text21
  6807  0FCC                     __ptext21:	
  6808 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  6809 ;; Defined at:
  6810 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      enum E3411
  6817 ;; Registers used:
  6818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;Total ram usage:        3 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    9
  6831 ;; This function calls:
  6832 ;;		Absolute function
  6833 ;;		_do_I2C_SEND_RESTART
  6834 ;;		_do_I2C_SEND_STOP
  6835 ;;		_i2c_restartWrite
  6836 ;;		_rd1RegCompleteHandler
  6837 ;;		_rd2RegCompleteHandler
  6838 ;;		_rdBlkRegCompleteHandler
  6839 ;;		_returnReset
  6840 ;;		_returnStop
  6841 ;;		_wr1RegCompleteHandler
  6842 ;;		_wr2RegCompleteHandler
  6843 ;; This function is called by:
  6844 ;;		_i2c_ISR
  6845 ;;		i1_i2c_ISR
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           
  6850                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  6851  0FCC                     _do_I2C_DO_ADDRESS_NACK:	
  6852                           
  6853                           ;Skip over the trampoline to the duplicate function for level 1
  6854  0FCC  1C7E               	btfss	int$flags,0
  6855  0FCD  2FD0               	goto	_do_I2C_DO_ADDRESS_NACK$intlevel0
  6856  0FCE  318E  2EAB         	ljmp	i1_do_I2C_DO_ADDRESS_NACK
  6857  0FD0                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
  6858  0FD0                     l5434:	
  6859                           ;incstack = 0
  6860                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6861                           
  6862                           
  6863                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  6864  0FD0  0021               	movlb	1	; select bank1
  6865  0FD1  11A0               	bcf	_i2c_status^(0+128),3
  6866  0FD2                     l5436:	
  6867                           
  6868                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  6869  0FD2  3002               	movlw	2
  6870  0FD3  0020               	movlb	0	; select bank0
  6871  0FD4  00D3               	movwf	??_do_I2C_DO_ADDRESS_NACK
  6872  0FD5  0853               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  6873  0FD6  0021               	movlb	1	; select bank1
  6874  0FD7  00AA               	movwf	(_i2c_status^(0+128)+10)
  6875                           
  6876                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  6877  0FD8  2FE1               	goto	l5448
  6878  0FD9                     l5438:	
  6879                           
  6880                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  6881  0FD9  318B  2363  318F   	fcall	_do_I2C_SEND_RESTART
  6882  0FDC  2FFF               	goto	l152
  6883  0FDD                     l5442:	
  6884                           
  6885                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  6886  0FDD  318B  236C  318F   	fcall	_do_I2C_SEND_STOP
  6887  0FE0  2FFF               	goto	l152
  6888  0FE1                     l5448:	
  6889  0FE1  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
  6890  0FE2  0020               	movlb	0	; select bank0
  6891  0FE3  00D3               	movwf	??_do_I2C_DO_ADDRESS_NACK
  6892  0FE4  0853               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  6893  0FE5  00DC               	movwf	wr1RegCompleteHandler@p
  6894  0FE6  300F               	movlw	15
  6895  0FE7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  6896  0FE8  0086               	movwf	6
  6897  0FE9  0187               	clrf	7
  6898  0FEA  3F41               	moviw [1]fsr1
  6899  0FEB  008A               	movwf	10
  6900  0FEC  3F40               	moviw [0]fsr1
  6901  0FED  000A               	callw
  6902  0FEE  318F               	pagesel	$
  6903  0FEF  0020               	movlb	0	; select bank0
  6904  0FF0  00D4               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  6905  0FF1  01D5               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  6906                           
  6907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 1, Range of values is 0 to 0
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            4     3 (average)
  6913                           ; direct_byte            8     6 (fixed)
  6914                           ; jumptable            260     6 (fixed)
  6915                           ;	Chosen strategy is simple_byte
  6916  0FF2  0855               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  6917  0FF3  3A00               	xorlw	0	; case 0
  6918  0FF4  1903               	skipnz
  6919  0FF5  2FF7               	goto	l6754
  6920  0FF6  2FDD               	goto	l5442
  6921  0FF7                     l6754:	
  6922                           
  6923                           ; Switch size 1, requested type "simple"
  6924                           ; Number of cases is 2, Range of values is 2 to 3
  6925                           ; switch strategies available:
  6926                           ; Name         Instructions Cycles
  6927                           ; simple_byte            7     4 (average)
  6928                           ; direct_byte           13     9 (fixed)
  6929                           ; jumptable            263     9 (fixed)
  6930                           ;	Chosen strategy is simple_byte
  6931  0FF7  0854               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  6932  0FF8  3A02               	xorlw	2	; case 2
  6933  0FF9  1903               	skipnz
  6934  0FFA  2FD9               	goto	l5438
  6935  0FFB  3A01               	xorlw	1	; case 3
  6936  0FFC  1903               	skipnz
  6937  0FFD  2FD9               	goto	l5438
  6938  0FFE  2FDD               	goto	l5442
  6939  0FFF                     l152:	
  6940  0FFF  0008               	return
  6941  1000                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  6942                           
  6943                           	psect	text22
  6944  0B87                     __ptext22:	
  6945 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  6946 ;; Defined at:
  6947 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      enum E3411
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0, pclath, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    7
  6968 ;; This function calls:
  6969 ;;		_i2c_driver_sendNACK
  6970 ;; This function is called by:
  6971 ;;		_do_I2C_RX
  6972 ;;		_i2c_ISR
  6973 ;;		i1_i2c_ISR
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           
  6978                           ;psect for function _do_I2C_DO_NACK_RESTART
  6979  0B87                     _do_I2C_DO_NACK_RESTART:	
  6980                           
  6981                           ;Skip over the trampoline to the duplicate function for level 1
  6982  0B87  1C7E               	btfss	int$flags,0
  6983  0B88  2B8B               	goto	_do_I2C_DO_NACK_RESTART$intlevel0
  6984  0B89  318A  2ABE         	ljmp	i1_do_I2C_DO_NACK_RESTART
  6985  0B8B                     _do_I2C_DO_NACK_RESTART$intlevel0:	
  6986  0B8B                     l5318:	
  6987                           ;incstack = 0
  6988                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6989                           
  6990                           
  6991                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c_driver_sendNACK();
  6992  0B8B  318A  2292  318B   	fcall	_i2c_driver_sendNACK
  6993  0B8E                     l5320:	
  6994                           
  6995                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  6996  0B8E  3009               	movlw	9
  6997  0B8F                     l146:	
  6998  0B8F  0008               	return
  6999  0B90                     __end_of_do_I2C_DO_NACK_RESTART:	
  7000                           
  7001                           	psect	text23
  7002  0B7E                     __ptext23:	
  7003 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  7004 ;; Defined at:
  7005 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      enum E3411
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    7
  7026 ;; This function calls:
  7027 ;;		_i2c_driver_sendNACK
  7028 ;; This function is called by:
  7029 ;;		_do_I2C_RX
  7030 ;;		_i2c_ISR
  7031 ;;		i1_i2c_ISR
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           
  7036                           ;psect for function _do_I2C_DO_NACK_STOP
  7037  0B7E                     _do_I2C_DO_NACK_STOP:	
  7038                           
  7039                           ;Skip over the trampoline to the duplicate function for level 1
  7040  0B7E  1C7E               	btfss	int$flags,0
  7041  0B7F  2B82               	goto	_do_I2C_DO_NACK_STOP$intlevel0
  7042  0B80  318A  2AB9         	ljmp	i1_do_I2C_DO_NACK_STOP
  7043  0B82                     _do_I2C_DO_NACK_STOP$intlevel0:	
  7044  0B82                     l5312:	
  7045                           ;incstack = 0
  7046                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  7047                           
  7048                           
  7049                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c_driver_sendNACK();
  7050  0B82  318A  2292  318B   	fcall	_i2c_driver_sendNACK
  7051  0B85                     l5314:	
  7052                           
  7053                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  7054  0B85  300A               	movlw	10
  7055  0B86                     l143:	
  7056  0B86  0008               	return
  7057  0B87                     __end_of_do_I2C_DO_NACK_STOP:	
  7058                           
  7059                           	psect	text24
  7060  0B75                     __ptext24:	
  7061 ;; *************** function _do_I2C_DO_ACK *****************
  7062 ;; Defined at:
  7063 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      enum E3411
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0, pclath, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; Hardware stack levels required when called:    7
  7084 ;; This function calls:
  7085 ;;		_i2c_driver_sendACK
  7086 ;; This function is called by:
  7087 ;;		_i2c_ISR
  7088 ;;		i1_i2c_ISR
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           
  7093                           ;psect for function _do_I2C_DO_ACK
  7094  0B75                     _do_I2C_DO_ACK:	
  7095                           
  7096                           ;Skip over the trampoline to the duplicate function for level 1
  7097  0B75  1C7E               	btfss	int$flags,0
  7098  0B76  2B79               	goto	_do_I2C_DO_ACK$intlevel0
  7099  0B77  318A  2AB4         	ljmp	i1_do_I2C_DO_ACK
  7100  0B79                     _do_I2C_DO_ACK$intlevel0:	
  7101  0B79                     l5428:	
  7102                           ;incstack = 0
  7103                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  7104                           
  7105                           
  7106                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c_driver_sendACK();
  7107  0B79  318A  228E  318B   	fcall	_i2c_driver_sendACK
  7108  0B7C                     l5430:	
  7109                           
  7110                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  7111  0B7C  3005               	movlw	5
  7112  0B7D                     l140:	
  7113  0B7D  0008               	return
  7114  0B7E                     __end_of_do_I2C_DO_ACK:	
  7115                           
  7116                           	psect	text25
  7117  0B9A                     __ptext25:	
  7118 ;; *************** function _do_I2C_RCEN *****************
  7119 ;; Defined at:
  7120 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;		None
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;		None
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      enum E3411
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0, pclath, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;Total ram usage:        0 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    7
  7141 ;; This function calls:
  7142 ;;		_i2c_driver_startRX
  7143 ;; This function is called by:
  7144 ;;		_i2c_ISR
  7145 ;;		i1_i2c_ISR
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           
  7150                           ;psect for function _do_I2C_RCEN
  7151  0B9A                     _do_I2C_RCEN:	
  7152                           
  7153                           ;Skip over the trampoline to the duplicate function for level 1
  7154  0B9A  1C7E               	btfss	int$flags,0
  7155  0B9B  2B9E               	goto	_do_I2C_RCEN$intlevel0
  7156  0B9C  318A  2AFE         	ljmp	i1_do_I2C_RCEN
  7157  0B9E                     _do_I2C_RCEN$intlevel0:	
  7158  0B9E                     l5420:	
  7159                           ;incstack = 0
  7160                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  7161                           
  7162                           
  7163                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  7164  0B9E  0021               	movlb	1	; select bank1
  7165  0B9F  11A0               	bcf	_i2c_status^(0+128),3
  7166  0BA0                     l5422:	
  7167                           
  7168                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c_driver_startRX();
  7169  0BA0  318A  2271  318B   	fcall	_i2c_driver_startRX
  7170  0BA3                     l5424:	
  7171                           
  7172                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  7173  0BA3  3004               	movlw	4
  7174  0BA4                     l137:	
  7175  0BA4  0008               	return
  7176  0BA5                     __end_of_do_I2C_RCEN:	
  7177                           
  7178                           	psect	text26
  7179  0BC9                     __ptext26:	
  7180 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  7181 ;; Defined at:
  7182 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;		None
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      enum E3411
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;Total ram usage:        0 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    7
  7203 ;; This function calls:
  7204 ;;		_i2c_driver_TXData
  7205 ;; This function is called by:
  7206 ;;		_i2c_ISR
  7207 ;;		i1_i2c_ISR
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _do_I2C_SEND_ADR_WRITE
  7213  0BC9                     _do_I2C_SEND_ADR_WRITE:	
  7214                           
  7215                           ;Skip over the trampoline to the duplicate function for level 1
  7216  0BC9  1C7E               	btfss	int$flags,0
  7217  0BCA  2BCD               	goto	_do_I2C_SEND_ADR_WRITE$intlevel0
  7218  0BCB  318B  2B1D         	ljmp	i1_do_I2C_SEND_ADR_WRITE
  7219  0BCD                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
  7220  0BCD                     l5412:	
  7221                           ;incstack = 0
  7222                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  7223                           
  7224                           
  7225                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  7226  0BCD  0021               	movlb	1	; select bank1
  7227  0BCE  15A0               	bsf	_i2c_status^(0+128),3
  7228  0BCF                     l5414:	
  7229                           
  7230                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c_driver_TXData(i2c_status.address
      +                           << 1);
  7231  0BCF  3521               	lslf	(_i2c_status^(0+128)+1),w
  7232  0BD0  318A  22E6  318B   	fcall	_i2c_driver_TXData
  7233  0BD3                     l5416:	
  7234                           
  7235                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  7236  0BD3  3003               	movlw	3
  7237  0BD4                     l134:	
  7238  0BD4  0008               	return
  7239  0BD5                     __end_of_do_I2C_SEND_ADR_WRITE:	
  7240                           
  7241                           	psect	text27
  7242  0BE1                     __ptext27:	
  7243 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  7244 ;; Defined at:
  7245 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      enum E3411
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0, pclath, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    7
  7266 ;; This function calls:
  7267 ;;		_i2c_driver_TXData
  7268 ;; This function is called by:
  7269 ;;		_i2c_ISR
  7270 ;;		i1_i2c_ISR
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _do_I2C_SEND_ADR_READ
  7276  0BE1                     _do_I2C_SEND_ADR_READ:	
  7277                           
  7278                           ;Skip over the trampoline to the duplicate function for level 1
  7279  0BE1  1C7E               	btfss	int$flags,0
  7280  0BE2  2BE5               	goto	_do_I2C_SEND_ADR_READ$intlevel0
  7281  0BE3  318B  2B36         	ljmp	i1_do_I2C_SEND_ADR_READ
  7282  0BE5                     _do_I2C_SEND_ADR_READ$intlevel0:	
  7283  0BE5                     l5404:	
  7284                           ;incstack = 0
  7285                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  7286                           
  7287                           
  7288                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  7289  0BE5  0021               	movlb	1	; select bank1
  7290  0BE6  15A0               	bsf	_i2c_status^(0+128),3
  7291  0BE7                     l5406:	
  7292                           
  7293                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c_driver_TXData(i2c_status.address
      +                           << 1 | 1);
  7294  0BE7  1403               	setc
  7295  0BE8  0D21               	rlf	(_i2c_status^(0+128)+1),w
  7296  0BE9  318A  22E6  318B   	fcall	_i2c_driver_TXData
  7297  0BEC                     l5408:	
  7298                           
  7299                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  7300  0BEC  3005               	movlw	5
  7301  0BED                     l131:	
  7302  0BED  0008               	return
  7303  0BEE                     __end_of_do_I2C_SEND_ADR_READ:	
  7304                           
  7305                           	psect	text28
  7306  0B6C                     __ptext28:	
  7307 ;; *************** function _do_I2C_SEND_STOP *****************
  7308 ;; Defined at:
  7309 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      enum E3411
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0, pclath, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;Total ram usage:        0 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; Hardware stack levels required when called:    7
  7330 ;; This function calls:
  7331 ;;		_i2c_driver_stop
  7332 ;; This function is called by:
  7333 ;;		_do_I2C_DO_ADDRESS_NACK
  7334 ;;		_do_I2C_TX
  7335 ;;		_do_I2C_TX_EMPTY
  7336 ;;		_i2c_ISR
  7337 ;;		i1_i2c_ISR
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           
  7342                           ;psect for function _do_I2C_SEND_STOP
  7343  0B6C                     _do_I2C_SEND_STOP:	
  7344                           
  7345                           ;Skip over the trampoline to the duplicate function for level 1
  7346  0B6C  1C7E               	btfss	int$flags,0
  7347  0B6D  2B70               	goto	_do_I2C_SEND_STOP$intlevel0
  7348  0B6E  318A  2AAF         	ljmp	i1_do_I2C_SEND_STOP
  7349  0B70                     _do_I2C_SEND_STOP$intlevel0:	
  7350  0B70                     l5300:	
  7351                           ;incstack = 0
  7352                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  7353                           
  7354                           
  7355                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c_driver_stop();
  7356  0B70  318A  226E  318B   	fcall	_i2c_driver_stop
  7357  0B73                     l5302:	
  7358                           
  7359                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  7360  0B73  3000               	movlw	0
  7361  0B74                     l128:	
  7362  0B74  0008               	return
  7363  0B75                     __end_of_do_I2C_SEND_STOP:	
  7364                           
  7365                           	psect	text29
  7366  0B63                     __ptext29:	
  7367 ;; *************** function _do_I2C_SEND_RESTART *****************
  7368 ;; Defined at:
  7369 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      enum E3411
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    7
  7390 ;; This function calls:
  7391 ;;		_i2c_driver_restart
  7392 ;; This function is called by:
  7393 ;;		_do_I2C_DO_ADDRESS_NACK
  7394 ;;		_do_I2C_TX_EMPTY
  7395 ;;		_i2c_ISR
  7396 ;;		i1_i2c_ISR
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           
  7401                           ;psect for function _do_I2C_SEND_RESTART
  7402  0B63                     _do_I2C_SEND_RESTART:	
  7403                           
  7404                           ;Skip over the trampoline to the duplicate function for level 1
  7405  0B63  1C7E               	btfss	int$flags,0
  7406  0B64  2B67               	goto	_do_I2C_SEND_RESTART$intlevel0
  7407  0B65  318A  2AAA         	ljmp	i1_do_I2C_SEND_RESTART
  7408  0B67                     _do_I2C_SEND_RESTART$intlevel0:	
  7409  0B67                     l5294:	
  7410                           ;incstack = 0
  7411                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  7412                           
  7413                           
  7414                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c_driver_restart();
  7415  0B67  318A  226B  318B   	fcall	_i2c_driver_restart
  7416  0B6A                     l5296:	
  7417                           
  7418                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  7419  0B6A  3001               	movlw	1
  7420  0B6B                     l125:	
  7421  0B6B  0008               	return
  7422  0B6C                     __end_of_do_I2C_SEND_RESTART:	
  7423                           
  7424                           	psect	text30
  7425  0B5A                     __ptext30:	
  7426 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  7427 ;; Defined at:
  7428 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;		None
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      enum E3411
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0, pclath, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;Total ram usage:        0 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    7
  7449 ;; This function calls:
  7450 ;;		_i2c_driver_restart
  7451 ;; This function is called by:
  7452 ;;		_do_I2C_TX
  7453 ;;		_i2c_ISR
  7454 ;;		i1_i2c_ISR
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  7460  0B5A                     _do_I2C_SEND_RESTART_WRITE:	
  7461                           
  7462                           ;Skip over the trampoline to the duplicate function for level 1
  7463  0B5A  1C7E               	btfss	int$flags,0
  7464  0B5B  2B5E               	goto	_do_I2C_SEND_RESTART_WRITE$intlevel0
  7465  0B5C  318A  2AA5         	ljmp	i1_do_I2C_SEND_RESTART_WRITE
  7466  0B5E                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
  7467  0B5E                     l5288:	
  7468                           ;incstack = 0
  7469                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  7470                           
  7471                           
  7472                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c_driver_restart();
  7473  0B5E  318A  226B  318B   	fcall	_i2c_driver_restart
  7474  0B61                     l5290:	
  7475                           
  7476                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  7477  0B61  3002               	movlw	2
  7478  0B62                     l122:	
  7479  0B62  0008               	return
  7480  0B63                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  7481                           
  7482                           	psect	text31
  7483  0B51                     __ptext31:	
  7484 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  7485 ;; Defined at:
  7486 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      enum E3411
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    7
  7507 ;; This function calls:
  7508 ;;		_i2c_driver_restart
  7509 ;; This function is called by:
  7510 ;;		_do_I2C_TX
  7511 ;;		_i2c_ISR
  7512 ;;		i1_i2c_ISR
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           
  7517                           ;psect for function _do_I2C_SEND_RESTART_READ
  7518  0B51                     _do_I2C_SEND_RESTART_READ:	
  7519                           
  7520                           ;Skip over the trampoline to the duplicate function for level 1
  7521  0B51  1C7E               	btfss	int$flags,0
  7522  0B52  2B55               	goto	_do_I2C_SEND_RESTART_READ$intlevel0
  7523  0B53  318A  2AA0         	ljmp	i1_do_I2C_SEND_RESTART_READ
  7524  0B55                     _do_I2C_SEND_RESTART_READ$intlevel0:	
  7525  0B55                     l5282:	
  7526                           ;incstack = 0
  7527                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  7528                           
  7529                           
  7530                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c_driver_restart();
  7531  0B55  318A  226B  318B   	fcall	_i2c_driver_restart
  7532  0B58                     l5284:	
  7533                           
  7534                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  7535  0B58  3001               	movlw	1
  7536  0B59                     l119:	
  7537  0B59  0008               	return
  7538  0B5A                     __end_of_do_I2C_SEND_RESTART_READ:	
  7539                           
  7540                           	psect	text32
  7541  0B48                     __ptext32:	
  7542 ;; *************** function _do_I2C_IDLE *****************
  7543 ;; Defined at:
  7544 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      enum E3411
  7551 ;; Registers used:
  7552 ;;		wreg, status,2
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    6
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_i2c_ISR
  7569 ;;		i1_i2c_ISR
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           
  7574                           ;psect for function _do_I2C_IDLE
  7575  0B48                     _do_I2C_IDLE:	
  7576                           
  7577                           ;Skip over the trampoline to the duplicate function for level 1
  7578  0B48  1C7E               	btfss	int$flags,0
  7579  0B49  2B4C               	goto	_do_I2C_IDLE$intlevel0
  7580  0B4A  318A  2A9B         	ljmp	i1_do_I2C_IDLE
  7581  0B4C                     _do_I2C_IDLE$intlevel0:	
  7582  0B4C                     l5396:	
  7583                           ;incstack = 0
  7584                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
  7585                           
  7586                           
  7587                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  7588  0B4C  0021               	movlb	1	; select bank1
  7589  0B4D  1020               	bcf	_i2c_status^(0+128),0
  7590  0B4E                     l5398:	
  7591                           
  7592                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  7593  0B4E  01AA               	clrf	(_i2c_status^(0+128)+10)
  7594  0B4F                     l5400:	
  7595                           
  7596                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  7597  0B4F  300E               	movlw	14
  7598  0B50                     l116:	
  7599  0B50  0008               	return
  7600  0B51                     __end_of_do_I2C_IDLE:	
  7601                           
  7602                           	psect	text33
  7603  0BBD                     __ptext33:	
  7604 ;; *************** function _do_I2C_RESET *****************
  7605 ;; Defined at:
  7606 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      enum E3411
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0, pclath, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    7
  7627 ;; This function calls:
  7628 ;;		_i2c_driver_resetBus
  7629 ;; This function is called by:
  7630 ;;		_i2c_ISR
  7631 ;;		i1_i2c_ISR
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           
  7636                           ;psect for function _do_I2C_RESET
  7637  0BBD                     _do_I2C_RESET:	
  7638                           
  7639                           ;Skip over the trampoline to the duplicate function for level 1
  7640  0BBD  1C7E               	btfss	int$flags,0
  7641  0BBE  2BC1               	goto	_do_I2C_RESET$intlevel0
  7642  0BBF  318B  2B15         	ljmp	i1_do_I2C_RESET
  7643  0BC1                     _do_I2C_RESET$intlevel0:	
  7644  0BC1                     l5386:	
  7645                           ;incstack = 0
  7646                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
  7647                           
  7648                           
  7649                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c_driver_resetBus();
  7650  0BC1  318A  2248  318B   	fcall	_i2c_driver_resetBus
  7651  0BC4                     l5388:	
  7652                           
  7653                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  7654  0BC4  0021               	movlb	1	; select bank1
  7655  0BC5  1020               	bcf	_i2c_status^(0+128),0
  7656  0BC6                     l5390:	
  7657                           
  7658                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  7659  0BC6  01AA               	clrf	(_i2c_status^(0+128)+10)
  7660  0BC7                     l5392:	
  7661                           
  7662                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  7663  0BC7  300E               	movlw	14
  7664  0BC8                     l113:	
  7665  0BC8  0008               	return
  7666  0BC9                     __end_of_do_I2C_RESET:	
  7667                           
  7668                           	psect	text34
  7669  0736                     __ptext34:	
  7670 ;; *************** function _do_I2C_TX_EMPTY *****************
  7671 ;; Defined at:
  7672 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      enum E3411
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;Total ram usage:        3 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    9
  7693 ;; This function calls:
  7694 ;;		Absolute function
  7695 ;;		_do_I2C_SEND_RESTART
  7696 ;;		_do_I2C_SEND_STOP
  7697 ;;		_i2c_restartWrite
  7698 ;;		_mssp_setIRQ
  7699 ;;		_rd1RegCompleteHandler
  7700 ;;		_rd2RegCompleteHandler
  7701 ;;		_rdBlkRegCompleteHandler
  7702 ;;		_returnReset
  7703 ;;		_returnStop
  7704 ;;		_wr1RegCompleteHandler
  7705 ;;		_wr2RegCompleteHandler
  7706 ;; This function is called by:
  7707 ;;		_i2c_ISR
  7708 ;;		i1_i2c_ISR
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _do_I2C_TX_EMPTY
  7714  0736                     _do_I2C_TX_EMPTY:	
  7715                           
  7716                           ;Skip over the trampoline to the duplicate function for level 1
  7717  0736  1C7E               	btfss	int$flags,0
  7718  0737  2F3A               	goto	_do_I2C_TX_EMPTY$intlevel0
  7719  0738  318F  2F64         	ljmp	i1_do_I2C_TX_EMPTY
  7720  073A                     _do_I2C_TX_EMPTY$intlevel0:	
  7721  073A                     l5518:	
  7722                           ;incstack = 0
  7723                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7724                           
  7725                           
  7726                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  7727  073A  0021               	movlb	1	; select bank1
  7728  073B  1520               	bsf	_i2c_status^(0+128),2
  7729                           
  7730                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  7731  073C  2F4A               	goto	l5536
  7732  073D                     l5520:	
  7733                           
  7734                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  7735  073D  318B  2363  3187   	fcall	_do_I2C_SEND_RESTART
  7736  0740  2F6E               	goto	l188
  7737  0741                     l5524:	
  7738                           
  7739                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp_setIRQ();
  7740  0741  318A  2277  3187   	fcall	_mssp_setIRQ
  7741  0744                     l5526:	
  7742                           
  7743                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  7744  0744  3003               	movlw	3
  7745  0745  2F6E               	goto	l188
  7746  0746                     l5530:	
  7747                           
  7748                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  7749  0746  318B  236C  3187   	fcall	_do_I2C_SEND_STOP
  7750  0749  2F6E               	goto	l188
  7751  074A                     l5536:	
  7752  074A  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  7753  074B  0020               	movlb	0	; select bank0
  7754  074C  00D3               	movwf	??_do_I2C_TX_EMPTY
  7755  074D  0853               	movf	??_do_I2C_TX_EMPTY,w
  7756  074E  00DC               	movwf	wr1RegCompleteHandler@p
  7757  074F  300B               	movlw	11
  7758  0750  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  7759  0751  0086               	movwf	6
  7760  0752  0187               	clrf	7
  7761  0753  3F41               	moviw [1]fsr1
  7762  0754  008A               	movwf	10
  7763  0755  3F40               	moviw [0]fsr1
  7764  0756  000A               	callw
  7765  0757  3187               	pagesel	$
  7766  0758  0020               	movlb	0	; select bank0
  7767  0759  00D4               	movwf	??_do_I2C_TX_EMPTY+1
  7768  075A  01D5               	clrf	??_do_I2C_TX_EMPTY+2
  7769                           
  7770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7771                           ; Switch size 1, requested type "simple"
  7772                           ; Number of cases is 1, Range of values is 0 to 0
  7773                           ; switch strategies available:
  7774                           ; Name         Instructions Cycles
  7775                           ; simple_byte            4     3 (average)
  7776                           ; direct_byte            8     6 (fixed)
  7777                           ; jumptable            260     6 (fixed)
  7778                           ;	Chosen strategy is simple_byte
  7779  075B  0855               	movf	??_do_I2C_TX_EMPTY+2,w
  7780  075C  3A00               	xorlw	0	; case 0
  7781  075D  1903               	skipnz
  7782  075E  2F60               	goto	l6756
  7783  075F  2F46               	goto	l5530
  7784  0760                     l6756:	
  7785                           
  7786                           ; Switch size 1, requested type "simple"
  7787                           ; Number of cases is 4, Range of values is 1 to 4
  7788                           ; switch strategies available:
  7789                           ; Name         Instructions Cycles
  7790                           ; simple_byte           13     7 (average)
  7791                           ; direct_byte           17     9 (fixed)
  7792                           ; jumptable            263     9 (fixed)
  7793                           ;	Chosen strategy is simple_byte
  7794  0760  0854               	movf	??_do_I2C_TX_EMPTY+1,w
  7795  0761  3A01               	xorlw	1	; case 1
  7796  0762  1903               	skipnz
  7797  0763  2F46               	goto	l5530
  7798  0764  3A03               	xorlw	3	; case 2
  7799  0765  1903               	skipnz
  7800  0766  2F3D               	goto	l5520
  7801  0767  3A01               	xorlw	1	; case 3
  7802  0768  1903               	skipnz
  7803  0769  2F3D               	goto	l5520
  7804  076A  3A07               	xorlw	7	; case 4
  7805  076B  1903               	skipnz
  7806  076C  2F41               	goto	l5524
  7807  076D  2F46               	goto	l5530
  7808  076E                     l188:	
  7809  076E  0008               	return
  7810  076F                     __end_of_do_I2C_TX_EMPTY:	
  7811                           
  7812                           	psect	text35
  7813  0A77                     __ptext35:	
  7814 ;; *************** function _mssp_setIRQ *****************
  7815 ;; Defined at:
  7816 ;;		line 59 in file "mcc_generated_files/i2c_driver.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		None
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    6
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_do_I2C_TX_EMPTY
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function _mssp_setIRQ
  7846  0A77                     _mssp_setIRQ:	
  7847  0A77                     l5332:	
  7848                           ;incstack = 0
  7849                           ; Regs used in _mssp_setIRQ: []
  7850                           
  7851                           
  7852                           ;mcc_generated_files/i2c_driver.c: 61:     else
  7853  0A77  0020               	movlb	0	; select bank0
  7854  0A78  1591               	bsf	17,3	;volatile
  7855  0A79                     l600:	
  7856  0A79  0008               	return
  7857  0A7A                     __end_of_mssp_setIRQ:	
  7858                           
  7859                           	psect	text36
  7860  0B3F                     __ptext36:	
  7861 ;; *************** function _i2c_driver_isNACK *****************
  7862 ;; Defined at:
  7863 ;;		line 162 in file "mcc_generated_files/i2c_driver.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;		None               void
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;Total ram usage:        1 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    6
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_do_I2C_TX
  7888 ;;		_i2c_ISR
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           
  7893                           ;psect for function _i2c_driver_isNACK
  7894  0B3F                     _i2c_driver_isNACK:	
  7895  0B3F                     l5324:	
  7896                           ;incstack = 0
  7897                           ; Regs used in _i2c_driver_isNACK: [wreg+status,2+status,0]
  7898                           
  7899                           
  7900                           ;mcc_generated_files/i2c_driver.c: 164:     return SSPCON2bits.ACKSTAT;
  7901  0B3F  0024               	movlb	4	; select bank4
  7902  0B40  0E16               	swapf	22,w	;volatile
  7903  0B41  0C89               	rrf	9,f
  7904  0B42  0C89               	rrf	9,f
  7905  0B43  3901               	andlw	1
  7906  0B44  0020               	movlb	0	; select bank0
  7907  0B45  00D3               	movwf	??_i2c_driver_isNACK
  7908  0B46  0C53               	rrf	??_i2c_driver_isNACK,w
  7909  0B47                     l635:	
  7910  0B47  0008               	return
  7911  0B48                     __end_of_i2c_driver_isNACK:	
  7912                           
  7913                           	psect	text37
  7914  0AE6                     __ptext37:	
  7915 ;; *************** function _i2c_driver_TXData *****************
  7916 ;; Defined at:
  7917 ;;		line 187 in file "mcc_generated_files/i2c_driver.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  d               1    wreg     unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  d               1    0[BANK0 ] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;Total ram usage:        1 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    6
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_do_I2C_SEND_ADR_READ
  7942 ;;		_do_I2C_SEND_ADR_WRITE
  7943 ;;		_do_I2C_TX
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function _i2c_driver_TXData
  7949  0AE6                     _i2c_driver_TXData:	
  7950                           
  7951                           ;incstack = 0
  7952                           ; Regs used in _i2c_driver_TXData: [wreg]
  7953                           ;i2c_driver_TXData@d stored from wreg
  7954  0AE6  0020               	movlb	0	; select bank0
  7955  0AE7  00D3               	movwf	i2c_driver_TXData@d
  7956  0AE8                     l5306:	
  7957                           
  7958                           ;mcc_generated_files/i2c_driver.c: 187: __attribute__((inline)) void i2c_driver_TXData(c
      +                          har d);mcc_generated_files/i2c_driver.c: 188: {;mcc_generated_files/i2c_driver.c: 189:  
      +                             SSPBUF = d;
  7959  0AE8  0853               	movf	i2c_driver_TXData@d,w
  7960  0AE9  0024               	movlb	4	; select bank4
  7961  0AEA  0091               	movwf	17	;volatile
  7962  0AEB                     l650:	
  7963  0AEB  0008               	return
  7964  0AEC                     __end_of_i2c_driver_TXData:	
  7965                           
  7966                           	psect	text38
  7967  0A74                     __ptext38:	
  7968 ;; *************** function _i2c_driver_getRXData *****************
  7969 ;; Defined at:
  7970 ;;		line 172 in file "mcc_generated_files/i2c_driver.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;		None
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      unsigned char 
  7977 ;; Registers used:
  7978 ;;		wreg
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;Total ram usage:        0 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    6
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_do_I2C_RX
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function _i2c_driver_getRXData
  8000  0A74                     _i2c_driver_getRXData:	
  8001  0A74                     l5328:	
  8002                           ;incstack = 0
  8003                           ; Regs used in _i2c_driver_getRXData: [wreg]
  8004                           
  8005                           
  8006                           ;mcc_generated_files/i2c_driver.c: 174:     return SSPBUF;
  8007  0A74  0024               	movlb	4	; select bank4
  8008  0A75  0811               	movf	17,w	;volatile
  8009  0A76                     l641:	
  8010  0A76  0008               	return
  8011  0A77                     __end_of_i2c_driver_getRXData:	
  8012                           
  8013                           	psect	text39
  8014  0A92                     __ptext39:	
  8015 ;; *************** function _i2c_driver_sendNACK *****************
  8016 ;; Defined at:
  8017 ;;		line 203 in file "mcc_generated_files/i2c_driver.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		None
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;Total ram usage:        0 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:    6
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_do_I2C_DO_NACK_STOP
  8042 ;;		_do_I2C_DO_NACK_RESTART
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           
  8047                           ;psect for function _i2c_driver_sendNACK
  8048  0A92                     _i2c_driver_sendNACK:	
  8049  0A92                     l5280:	
  8050                           ;incstack = 0
  8051                           ; Regs used in _i2c_driver_sendNACK: []
  8052                           
  8053                           
  8054                           ;mcc_generated_files/i2c_driver.c: 205:     SSPCON2bits.ACKDT = 1;
  8055  0A92  0024               	movlb	4	; select bank4
  8056  0A93  1696               	bsf	22,5	;volatile
  8057                           
  8058                           ;mcc_generated_files/i2c_driver.c: 206:     SSPCON2bits.ACKEN = 1;
  8059  0A94  1616               	bsf	22,4	;volatile
  8060  0A95                     l659:	
  8061  0A95  0008               	return
  8062  0A96                     __end_of_i2c_driver_sendNACK:	
  8063                           
  8064                           	psect	text40
  8065  0A48                     __ptext40:	
  8066 ;; *************** function _i2c_driver_resetBus *****************
  8067 ;; Defined at:
  8068 ;;		line 142 in file "mcc_generated_files/i2c_driver.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		None
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    6
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_do_I2C_RESET
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _i2c_driver_resetBus
  8098  0A48                     _i2c_driver_resetBus:	
  8099  0A48                     l623:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _i2c_driver_resetBus: []
  8102                           
  8103  0A48  0008               	return
  8104  0A49                     __end_of_i2c_driver_resetBus:	
  8105                           
  8106                           	psect	text41
  8107  0A71                     __ptext41:	
  8108 ;; *************** function _i2c_driver_startRX *****************
  8109 ;; Defined at:
  8110 ;;		line 167 in file "mcc_generated_files/i2c_driver.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		None
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    6
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_do_I2C_RCEN
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function _i2c_driver_startRX
  8140  0A71                     _i2c_driver_startRX:	
  8141  0A71                     l5308:	
  8142                           ;incstack = 0
  8143                           ; Regs used in _i2c_driver_startRX: []
  8144                           
  8145                           
  8146                           ;mcc_generated_files/i2c_driver.c: 169:     SSPCON2bits.RCEN = 1;
  8147  0A71  0024               	movlb	4	; select bank4
  8148  0A72  1596               	bsf	22,3	;volatile
  8149  0A73                     l638:	
  8150  0A73  0008               	return
  8151  0A74                     __end_of_i2c_driver_startRX:	
  8152                           
  8153                           	psect	text42
  8154  0DC5                     __ptext42:	
  8155 ;; *************** function _rdBlkRegCompleteHandler *****************
  8156 ;; Defined at:
  8157 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  p               1    9[BANK0 ] PTR void 
  8160 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8161 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      enum E358
  8166 ;; Registers used:
  8167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8173 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;Total ram usage:        1 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    8
  8180 ;; This function calls:
  8181 ;;		_i2c_setBuffer
  8182 ;;		_i2c_setDataCompleteCallback
  8183 ;; This function is called by:
  8184 ;;		_i2c_readDataBlock
  8185 ;;		_do_I2C_DO_ADDRESS_NACK
  8186 ;;		_do_I2C_TX
  8187 ;;		_do_I2C_RX
  8188 ;;		_do_I2C_TX_EMPTY
  8189 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8190 ;;		i1_do_I2C_TX
  8191 ;;		i1_do_I2C_RX
  8192 ;;		i1_do_I2C_TX_EMPTY
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           
  8197                           ;psect for function _rdBlkRegCompleteHandler
  8198  0DC5                     _rdBlkRegCompleteHandler:	
  8199                           
  8200                           ;Skip over the trampoline to the duplicate function for level 1
  8201  0DC5  1C7E               	btfss	int$flags,0
  8202  0DC6  2DC9               	goto	_rdBlkRegCompleteHandler$intlevel0
  8203  0DC7  318D  2D3A         	ljmp	i1_rdBlkRegCompleteHandler
  8204  0DC9                     _rdBlkRegCompleteHandler$intlevel0:	
  8205  0DC9                     l5374:	
  8206                           ;incstack = 0
  8207                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  8208                           
  8209                           
  8210                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
  8211  0DC9  0020               	movlb	0	; select bank0
  8212  0DCA  085C               	movf	rdBlkRegCompleteHandler@p,w
  8213  0DCB  0086               	movwf	6
  8214  0DCC  0187               	clrf	7
  8215  0DCD  3F40               	moviw [0]fsr1
  8216  0DCE  00D3               	movwf	i2c_setBuffer@bufferSize
  8217  0DCF  3F41               	moviw [1]fsr1
  8218  0DD0  00D4               	movwf	i2c_setBuffer@bufferSize+1
  8219  0DD1  085C               	movf	rdBlkRegCompleteHandler@p,w
  8220  0DD2  3E02               	addlw	2
  8221  0DD3  0086               	movwf	6
  8222  0DD4  0187               	clrf	7
  8223  0DD5  0801               	movf	1,w
  8224  0DD6  318C  24C7  318D   	fcall	_i2c_setBuffer
  8225                           
  8226                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
  8227  0DD9  3000               	movlw	0
  8228  0DDA  0020               	movlb	0	; select bank0
  8229  0DDB  00D8               	movwf	i2c_setDataCompleteCallback@cb
  8230  0DDC  00D9               	movwf	i2c_setDataCompleteCallback@cb+1
  8231  0DDD  01DA               	clrf	i2c_setDataCompleteCallback@p
  8232  0DDE  318B  23FC  318D   	fcall	_i2c_setDataCompleteCallback
  8233  0DE1                     l5376:	
  8234                           
  8235                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
  8236  0DE1  3002               	movlw	2
  8237  0DE2                     l291:	
  8238  0DE2  0008               	return
  8239  0DE3                     __end_of_rdBlkRegCompleteHandler:	
  8240                           
  8241                           	psect	text43
  8242  0D23                     __ptext43:	
  8243 ;; *************** function _rd2RegCompleteHandler *****************
  8244 ;; Defined at:
  8245 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  p               1    9[BANK0 ] PTR void 
  8248 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8249 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;		None
  8252 ;; Return value:  Size  Location     Type
  8253 ;;                  1    wreg      enum E358
  8254 ;; Registers used:
  8255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8261 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;Total ram usage:        1 bytes
  8266 ;; Hardware stack levels used:    1
  8267 ;; Hardware stack levels required when called:    8
  8268 ;; This function calls:
  8269 ;;		_i2c_setBuffer
  8270 ;;		_i2c_setDataCompleteCallback
  8271 ;; This function is called by:
  8272 ;;		_i2c_read2ByteRegister
  8273 ;;		_do_I2C_DO_ADDRESS_NACK
  8274 ;;		_do_I2C_TX
  8275 ;;		_do_I2C_RX
  8276 ;;		_do_I2C_TX_EMPTY
  8277 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8278 ;;		i1_do_I2C_TX
  8279 ;;		i1_do_I2C_RX
  8280 ;;		i1_do_I2C_TX_EMPTY
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _rd2RegCompleteHandler
  8286  0D23                     _rd2RegCompleteHandler:	
  8287                           
  8288                           ;Skip over the trampoline to the duplicate function for level 1
  8289  0D23  1C7E               	btfss	int$flags,0
  8290  0D24  2D27               	goto	_rd2RegCompleteHandler$intlevel0
  8291  0D25  318C  2C8C         	ljmp	i1_rd2RegCompleteHandler
  8292  0D27                     _rd2RegCompleteHandler$intlevel0:	
  8293  0D27                     l5358:	
  8294                           ;incstack = 0
  8295                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8296                           
  8297                           
  8298                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
  8299  0D27  3002               	movlw	2
  8300  0D28  0020               	movlb	0	; select bank0
  8301  0D29  00D3               	movwf	i2c_setBuffer@bufferSize
  8302  0D2A  3000               	movlw	0
  8303  0D2B  00D4               	movwf	i2c_setBuffer@bufferSize+1
  8304  0D2C  085C               	movf	rd2RegCompleteHandler@p,w
  8305  0D2D  318C  24C7  318D   	fcall	_i2c_setBuffer
  8306  0D30                     l5360:	
  8307                           
  8308                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  8309  0D30  3000               	movlw	0
  8310  0D31  0020               	movlb	0	; select bank0
  8311  0D32  00D8               	movwf	i2c_setDataCompleteCallback@cb
  8312  0D33  00D9               	movwf	i2c_setDataCompleteCallback@cb+1
  8313  0D34  01DA               	clrf	i2c_setDataCompleteCallback@p
  8314  0D35  318B  23FC  318D   	fcall	_i2c_setDataCompleteCallback
  8315  0D38                     l5362:	
  8316                           
  8317                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
  8318  0D38  3002               	movlw	2
  8319  0D39                     l267:	
  8320  0D39  0008               	return
  8321  0D3A                     __end_of_rd2RegCompleteHandler:	
  8322                           
  8323                           	psect	text44
  8324  0D0C                     __ptext44:	
  8325 ;; *************** function _rd1RegCompleteHandler *****************
  8326 ;; Defined at:
  8327 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  p               1    9[BANK0 ] PTR void 
  8330 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8331 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      enum E358
  8336 ;; Registers used:
  8337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8343 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;Total ram usage:        1 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:    8
  8350 ;; This function calls:
  8351 ;;		_i2c_setBuffer
  8352 ;;		_i2c_setDataCompleteCallback
  8353 ;; This function is called by:
  8354 ;;		_i2c_read1ByteRegister
  8355 ;;		_do_I2C_DO_ADDRESS_NACK
  8356 ;;		_do_I2C_TX
  8357 ;;		_do_I2C_RX
  8358 ;;		_do_I2C_TX_EMPTY
  8359 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8360 ;;		i1_do_I2C_TX
  8361 ;;		i1_do_I2C_RX
  8362 ;;		i1_do_I2C_TX_EMPTY
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           
  8367                           ;psect for function _rd1RegCompleteHandler
  8368  0D0C                     _rd1RegCompleteHandler:	
  8369                           
  8370                           ;Skip over the trampoline to the duplicate function for level 1
  8371  0D0C  1C7E               	btfss	int$flags,0
  8372  0D0D  2D10               	goto	_rd1RegCompleteHandler$intlevel0
  8373  0D0E  318C  2C7A         	ljmp	i1_rd1RegCompleteHandler
  8374  0D10                     _rd1RegCompleteHandler$intlevel0:	
  8375  0D10                     l5350:	
  8376                           ;incstack = 0
  8377                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8378                           
  8379                           
  8380                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
  8381  0D10  3001               	movlw	1
  8382  0D11  0020               	movlb	0	; select bank0
  8383  0D12  00D3               	movwf	i2c_setBuffer@bufferSize
  8384  0D13  3000               	movlw	0
  8385  0D14  00D4               	movwf	i2c_setBuffer@bufferSize+1
  8386  0D15  085C               	movf	rd1RegCompleteHandler@p,w
  8387  0D16  318C  24C7  318D   	fcall	_i2c_setBuffer
  8388  0D19                     l5352:	
  8389                           
  8390                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  8391  0D19  3000               	movlw	0
  8392  0D1A  0020               	movlb	0	; select bank0
  8393  0D1B  00D8               	movwf	i2c_setDataCompleteCallback@cb
  8394  0D1C  00D9               	movwf	i2c_setDataCompleteCallback@cb+1
  8395  0D1D  01DA               	clrf	i2c_setDataCompleteCallback@p
  8396  0D1E  318B  23FC  318D   	fcall	_i2c_setDataCompleteCallback
  8397  0D21                     l5354:	
  8398                           
  8399                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
  8400  0D21  3002               	movlw	2
  8401  0D22                     l252:	
  8402  0D22  0008               	return
  8403  0D23                     __end_of_rd1RegCompleteHandler:	
  8404                           
  8405                           	psect	text45
  8406  0CF5                     __ptext45:	
  8407 ;; *************** function _wr1RegCompleteHandler *****************
  8408 ;; Defined at:
  8409 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  p               1    9[BANK0 ] PTR void 
  8412 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8413 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      enum E358
  8418 ;; Registers used:
  8419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:        1 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    8
  8432 ;; This function calls:
  8433 ;;		_i2c_setBuffer
  8434 ;;		_i2c_setDataCompleteCallback
  8435 ;; This function is called by:
  8436 ;;		_i2c_write1ByteRegister
  8437 ;;		_do_I2C_DO_ADDRESS_NACK
  8438 ;;		_do_I2C_TX
  8439 ;;		_do_I2C_RX
  8440 ;;		_do_I2C_TX_EMPTY
  8441 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8442 ;;		i1_do_I2C_TX
  8443 ;;		i1_do_I2C_RX
  8444 ;;		i1_do_I2C_TX_EMPTY
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           
  8449                           ;psect for function _wr1RegCompleteHandler
  8450  0CF5                     _wr1RegCompleteHandler:	
  8451                           
  8452                           ;Skip over the trampoline to the duplicate function for level 1
  8453  0CF5  1C7E               	btfss	int$flags,0
  8454  0CF6  2CF9               	goto	_wr1RegCompleteHandler$intlevel0
  8455  0CF7  318C  2C68         	ljmp	i1_wr1RegCompleteHandler
  8456  0CF9                     _wr1RegCompleteHandler$intlevel0:	
  8457  0CF9                     l5342:	
  8458                           ;incstack = 0
  8459                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8460                           
  8461                           
  8462                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
  8463  0CF9  3001               	movlw	1
  8464  0CFA  0020               	movlb	0	; select bank0
  8465  0CFB  00D3               	movwf	i2c_setBuffer@bufferSize
  8466  0CFC  3000               	movlw	0
  8467  0CFD  00D4               	movwf	i2c_setBuffer@bufferSize+1
  8468  0CFE  085C               	movf	wr1RegCompleteHandler@p,w
  8469  0CFF  318C  24C7  318C   	fcall	_i2c_setBuffer
  8470  0D02                     l5344:	
  8471                           
  8472                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  8473  0D02  3000               	movlw	0
  8474  0D03  0020               	movlb	0	; select bank0
  8475  0D04  00D8               	movwf	i2c_setDataCompleteCallback@cb
  8476  0D05  00D9               	movwf	i2c_setDataCompleteCallback@cb+1
  8477  0D06  01DA               	clrf	i2c_setDataCompleteCallback@p
  8478  0D07  318B  23FC  318C   	fcall	_i2c_setDataCompleteCallback
  8479  0D0A                     l5346:	
  8480                           
  8481                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
  8482  0D0A  3004               	movlw	4
  8483  0D0B                     l231:	
  8484  0D0B  0008               	return
  8485  0D0C                     __end_of_wr1RegCompleteHandler:	
  8486                           
  8487                           	psect	text46
  8488  0AE0                     __ptext46:	
  8489 ;; *************** function _i2c_restartWrite *****************
  8490 ;; Defined at:
  8491 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  p               1    9[BANK0 ] PTR void 
  8494 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8495 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      enum E358
  8500 ;; Registers used:
  8501 ;;		wreg
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8507 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;Total ram usage:        1 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    6
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_i2c_writeNBytes
  8518 ;;		_i2c_readDataBlock
  8519 ;;		_i2c_write1ByteRegister
  8520 ;;		_i2c_read1ByteRegister
  8521 ;;		_i2c_read2ByteRegister
  8522 ;;		_i2c_write2ByteRegister
  8523 ;;		_do_I2C_DO_ADDRESS_NACK
  8524 ;;		_do_I2C_TX
  8525 ;;		_do_I2C_RX
  8526 ;;		_do_I2C_TX_EMPTY
  8527 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8528 ;;		i1_do_I2C_TX
  8529 ;;		i1_do_I2C_RX
  8530 ;;		i1_do_I2C_TX_EMPTY
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function _i2c_restartWrite
  8536  0AE0                     _i2c_restartWrite:	
  8537                           
  8538                           ;Skip over the trampoline to the duplicate function for level 1
  8539  0AE0  1C7E               	btfss	int$flags,0
  8540  0AE1  2AE4               	goto	_i2c_restartWrite$intlevel0
  8541  0AE2  3180  2802         	ljmp	i1_i2c_restartWrite
  8542  0AE4                     _i2c_restartWrite$intlevel0:	
  8543  0AE4                     l5380:	
  8544                           ;incstack = 0
  8545                           ; Regs used in _i2c_restartWrite: [wreg]
  8546                           
  8547                           
  8548                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
  8549  0AE4  3003               	movlw	3
  8550  0AE5                     l318:	
  8551  0AE5  0008               	return
  8552  0AE6                     __end_of_i2c_restartWrite:	
  8553                           
  8554                           	psect	text47
  8555  0ADA                     __ptext47:	
  8556 ;; *************** function _returnReset *****************
  8557 ;; Defined at:
  8558 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  p               1    9[BANK0 ] PTR void 
  8561 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8562 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      enum E3257
  8567 ;; Registers used:
  8568 ;;		wreg
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8574 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;Total ram usage:        1 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    6
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_i2c_open
  8585 ;;		_do_I2C_DO_ADDRESS_NACK
  8586 ;;		_do_I2C_TX
  8587 ;;		_do_I2C_RX
  8588 ;;		_do_I2C_TX_EMPTY
  8589 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8590 ;;		i1_do_I2C_TX
  8591 ;;		i1_do_I2C_RX
  8592 ;;		i1_do_I2C_TX_EMPTY
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           
  8597                           ;psect for function _returnReset
  8598  0ADA                     _returnReset:	
  8599                           
  8600                           ;Skip over the trampoline to the duplicate function for level 1
  8601  0ADA  1C7E               	btfss	int$flags,0
  8602  0ADB  2ADE               	goto	_returnReset$intlevel0
  8603  0ADC  318A  2A4B         	ljmp	i1_returnReset
  8604  0ADE                     _returnReset$intlevel0:	
  8605  0ADE                     l5338:	
  8606                           ;incstack = 0
  8607                           ; Regs used in _returnReset: [wreg]
  8608                           
  8609                           
  8610                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
  8611  0ADE  3005               	movlw	5
  8612  0ADF                     l207:	
  8613  0ADF  0008               	return
  8614  0AE0                     __end_of_returnReset:	
  8615                           
  8616                           	psect	text48
  8617  0AD4                     __ptext48:	
  8618 ;; *************** function _returnStop *****************
  8619 ;; Defined at:
  8620 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  p               1    9[BANK0 ] PTR void 
  8623 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8624 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      enum E3257
  8629 ;; Registers used:
  8630 ;;		wreg
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8636 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8640 ;;Total ram usage:        1 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:    6
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_i2c_open
  8647 ;;		_setCallBack
  8648 ;;		_do_I2C_DO_ADDRESS_NACK
  8649 ;;		_do_I2C_TX
  8650 ;;		_do_I2C_RX
  8651 ;;		_do_I2C_TX_EMPTY
  8652 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8653 ;;		i1_do_I2C_TX
  8654 ;;		i1_do_I2C_RX
  8655 ;;		i1_do_I2C_TX_EMPTY
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function _returnStop
  8661  0AD4                     _returnStop:	
  8662                           
  8663                           ;Skip over the trampoline to the duplicate function for level 1
  8664  0AD4  1C7E               	btfss	int$flags,0
  8665  0AD5  2AD8               	goto	_returnStop$intlevel0
  8666  0AD6  318A  2A49         	ljmp	i1_returnStop
  8667  0AD8                     _returnStop$intlevel0:	
  8668  0AD8                     l5334:	
  8669                           ;incstack = 0
  8670                           ; Regs used in _returnStop: [wreg]
  8671                           
  8672                           
  8673                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
  8674  0AD8  3001               	movlw	1
  8675  0AD9                     l204:	
  8676  0AD9  0008               	return
  8677  0ADA                     __end_of_returnStop:	
  8678                           
  8679                           	psect	text49
  8680  0CDE                     __ptext49:	
  8681 ;; *************** function _wr2RegCompleteHandler *****************
  8682 ;; Defined at:
  8683 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  p               1    9[BANK0 ] PTR void 
  8686 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8687 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      enum E358
  8692 ;; Registers used:
  8693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8699 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;Total ram usage:        1 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    8
  8706 ;; This function calls:
  8707 ;;		_i2c_setBuffer
  8708 ;;		_i2c_setDataCompleteCallback
  8709 ;; This function is called by:
  8710 ;;		_i2c_write2ByteRegister
  8711 ;;		_do_I2C_DO_ADDRESS_NACK
  8712 ;;		_do_I2C_TX
  8713 ;;		_do_I2C_RX
  8714 ;;		_do_I2C_TX_EMPTY
  8715 ;;		i1_do_I2C_DO_ADDRESS_NACK
  8716 ;;		i1_do_I2C_TX
  8717 ;;		i1_do_I2C_RX
  8718 ;;		i1_do_I2C_TX_EMPTY
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           
  8723                           ;psect for function _wr2RegCompleteHandler
  8724  0CDE                     _wr2RegCompleteHandler:	
  8725                           
  8726                           ;Skip over the trampoline to the duplicate function for level 1
  8727  0CDE  1C7E               	btfss	int$flags,0
  8728  0CDF  2CE2               	goto	_wr2RegCompleteHandler$intlevel0
  8729  0CE0  318C  2C56         	ljmp	i1_wr2RegCompleteHandler
  8730  0CE2                     _wr2RegCompleteHandler$intlevel0:	
  8731  0CE2                     l5366:	
  8732                           ;incstack = 0
  8733                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8734                           
  8735                           
  8736                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
  8737  0CE2  3002               	movlw	2
  8738  0CE3  0020               	movlb	0	; select bank0
  8739  0CE4  00D3               	movwf	i2c_setBuffer@bufferSize
  8740  0CE5  3000               	movlw	0
  8741  0CE6  00D4               	movwf	i2c_setBuffer@bufferSize+1
  8742  0CE7  085C               	movf	wr2RegCompleteHandler@p,w
  8743  0CE8  318C  24C7  318C   	fcall	_i2c_setBuffer
  8744  0CEB                     l5368:	
  8745                           
  8746                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
  8747  0CEB  3000               	movlw	0
  8748  0CEC  0020               	movlb	0	; select bank0
  8749  0CED  00D8               	movwf	i2c_setDataCompleteCallback@cb
  8750  0CEE  00D9               	movwf	i2c_setDataCompleteCallback@cb+1
  8751  0CEF  01DA               	clrf	i2c_setDataCompleteCallback@p
  8752  0CF0  318B  23FC  318C   	fcall	_i2c_setDataCompleteCallback
  8753  0CF3                     l5370:	
  8754                           
  8755                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
  8756  0CF3  3004               	movlw	4
  8757  0CF4                     l279:	
  8758  0CF4  0008               	return
  8759  0CF5                     __end_of_wr2RegCompleteHandler:	
  8760                           
  8761                           	psect	text50
  8762  0BFC                     __ptext50:	
  8763 ;; *************** function _i2c_setDataCompleteCallback *****************
  8764 ;; Defined at:
  8765 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  8768 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8769 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  8770 ;;  p               1    7[BANK0 ] PTR void 
  8771 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8772 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8784 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;Total ram usage:        4 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    7
  8791 ;; This function calls:
  8792 ;;		_setCallBack
  8793 ;; This function is called by:
  8794 ;;		_wr1RegCompleteHandler
  8795 ;;		_rd1RegCompleteHandler
  8796 ;;		_rd2RegCompleteHandler
  8797 ;;		_wr2RegCompleteHandler
  8798 ;;		_rdBlkRegCompleteHandler
  8799 ;;		_i2c_readDataBlock
  8800 ;;		_i2c_write1ByteRegister
  8801 ;;		_i2c_read1ByteRegister
  8802 ;;		_i2c_read2ByteRegister
  8803 ;;		_i2c_write2ByteRegister
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           
  8808                           ;psect for function _i2c_setDataCompleteCallback
  8809  0BFC                     _i2c_setDataCompleteCallback:	
  8810  0BFC                     l5268:	
  8811                           ;incstack = 0
  8812                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8813                           
  8814                           
  8815                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
  8816  0BFC  0020               	movlb	0	; select bank0
  8817  0BFD  0859               	movf	i2c_setDataCompleteCallback@cb+1,w
  8818  0BFE  00D4               	movwf	setCallBack@cb+1
  8819  0BFF  0858               	movf	i2c_setDataCompleteCallback@cb,w
  8820  0C00  00D3               	movwf	setCallBack@cb
  8821  0C01  085A               	movf	i2c_setDataCompleteCallback@p,w
  8822  0C02  00DB               	movwf	??_i2c_setDataCompleteCallback
  8823  0C03  085B               	movf	??_i2c_setDataCompleteCallback,w
  8824  0C04  00D5               	movwf	setCallBack@p
  8825  0C05  3000               	movlw	0
  8826  0C06  3187  27D9  318B   	fcall	_setCallBack
  8827  0C09                     l61:	
  8828  0C09  0008               	return
  8829  0C0A                     __end_of_i2c_setDataCompleteCallback:	
  8830                           
  8831                           	psect	text51
  8832  07D9                     __ptext51:	
  8833 ;; *************** function _setCallBack *****************
  8834 ;; Defined at:
  8835 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  idx             1    wreg     enum E3429
  8838 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8839 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8840 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
  8841 ;;  p               1    2[BANK0 ] PTR void 
  8842 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8843 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  idx             1    4[BANK0 ] enum E3429
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8855 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;Total ram usage:        5 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:    6
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_i2c_setDataCompleteCallback
  8866 ;;		_i2c_setAddressNACKCallback
  8867 ;;		_i2c_setWriteCollisionCallback
  8868 ;;		_i2c_setDataNACKCallback
  8869 ;;		_i2c_setTimeOutCallback
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           
  8874                           ;psect for function _setCallBack
  8875  07D9                     _setCallBack:	
  8876                           
  8877                           ;incstack = 0
  8878                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
  8879                           ;setCallBack@idx stored from wreg
  8880  07D9  0020               	movlb	0	; select bank0
  8881  07DA  00D7               	movwf	setCallBack@idx
  8882  07DB                     l5262:	
  8883                           
  8884                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
  8885  07DB  0853               	movf	setCallBack@cb,w
  8886  07DC  0454               	iorwf	setCallBack@cb+1,w
  8887  07DD  1903               	btfsc	3,2
  8888  07DE  2FE0               	goto	u3401
  8889  07DF  2FE1               	goto	u3400
  8890  07E0                     u3401:	
  8891  07E0  2FF2               	goto	l5266
  8892  07E1                     u3400:	
  8893  07E1                     l5264:	
  8894                           
  8895                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
  8896  07E1  3557               	lslf	setCallBack@idx,w
  8897  07E2  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  8898  07E3  0086               	movwf	6
  8899  07E4  0187               	clrf	7
  8900  07E5  0853               	movf	setCallBack@cb,w
  8901  07E6  3FC0               	movwi [0]fsr1
  8902  07E7  0854               	movf	setCallBack@cb+1,w
  8903  07E8  3FC1               	movwi [1]fsr1
  8904                           
  8905                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
  8906  07E9  0855               	movf	setCallBack@p,w
  8907  07EA  00D6               	movwf	??_setCallBack
  8908  07EB  0857               	movf	setCallBack@idx,w
  8909  07EC  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  8910  07ED  0086               	movwf	6
  8911  07EE  0187               	clrf	7
  8912  07EF  0856               	movf	??_setCallBack,w
  8913  07F0  0081               	movwf	1
  8914                           
  8915                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
  8916  07F1  2FFF               	goto	l212
  8917  07F2                     l5266:	
  8918                           
  8919                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
  8920  07F2  3557               	lslf	setCallBack@idx,w
  8921  07F3  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  8922  07F4  0086               	movwf	6
  8923  07F5  0187               	clrf	7
  8924  07F6  30D4               	movlw	low _returnStop
  8925  07F7  3FC0               	movwi [0]fsr1
  8926  07F8  300A               	movlw	high _returnStop
  8927  07F9  3FC1               	movwi [1]fsr1
  8928                           
  8929                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
  8930  07FA  0857               	movf	setCallBack@idx,w
  8931  07FB  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  8932  07FC  0086               	movwf	6
  8933  07FD  0187               	clrf	7
  8934  07FE  0181               	clrf	1
  8935  07FF                     l212:	
  8936  07FF  0008               	return
  8937  0800                     __end_of_setCallBack:	
  8938                           
  8939                           	psect	text52
  8940  0CC7                     __ptext52:	
  8941 ;; *************** function _i2c_setBuffer *****************
  8942 ;; Defined at:
  8943 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  buffer          1    wreg     PTR void 
  8946 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
  8947 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
  8948 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  8949 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  buffer          1    3[BANK0 ] PTR void 
  8952 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
  8953 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
  8954 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;Total ram usage:        4 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    6
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_wr1RegCompleteHandler
  8975 ;;		_i2c_writeNBytes
  8976 ;;		_rd1RegCompleteHandler
  8977 ;;		_rd2RegCompleteHandler
  8978 ;;		_wr2RegCompleteHandler
  8979 ;;		_rdBlkRegCompleteHandler
  8980 ;;		_i2c_readDataBlock
  8981 ;;		_i2c_write1ByteRegister
  8982 ;;		_i2c_read1ByteRegister
  8983 ;;		_i2c_read2ByteRegister
  8984 ;;		_i2c_write2ByteRegister
  8985 ;;		_i2c_readNBytes
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           
  8990                           ;psect for function _i2c_setBuffer
  8991  0CC7                     _i2c_setBuffer:	
  8992                           
  8993                           ;incstack = 0
  8994                           ; Regs used in _i2c_setBuffer: [wreg]
  8995                           ;i2c_setBuffer@buffer stored from wreg
  8996  0CC7  0020               	movlb	0	; select bank0
  8997  0CC8  00D6               	movwf	i2c_setBuffer@buffer
  8998  0CC9                     l5270:	
  8999                           
  9000                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
  9001  0CC9  0021               	movlb	1	; select bank1
  9002  0CCA  1D20               	btfss	_i2c_status^(0+128),2
  9003  0CCB  2CCD               	goto	u3411
  9004  0CCC  2CCE               	goto	u3410
  9005  0CCD                     u3411:	
  9006  0CCD  2CDD               	goto	l91
  9007  0CCE                     u3410:	
  9008  0CCE                     l5272:	
  9009                           
  9010                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
  9011  0CCE  0020               	movlb	0	; select bank0
  9012  0CCF  0856               	movf	i2c_setBuffer@buffer,w
  9013  0CD0  00D5               	movwf	??_i2c_setBuffer
  9014  0CD1  0855               	movf	??_i2c_setBuffer,w
  9015  0CD2  0021               	movlb	1	; select bank1
  9016  0CD3  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
  9017                           
  9018                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
  9019  0CD4  0020               	movlb	0	; select bank0
  9020  0CD5  0854               	movf	i2c_setBuffer@bufferSize+1,w
  9021  0CD6  0021               	movlb	1	; select bank1
  9022  0CD7  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
  9023  0CD8  0020               	movlb	0	; select bank0
  9024  0CD9  0853               	movf	i2c_setBuffer@bufferSize,w
  9025  0CDA  0021               	movlb	1	; select bank1
  9026  0CDB  00A3               	movwf	(_i2c_status^(0+128)+3)
  9027  0CDC                     l5274:	
  9028                           
  9029                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
  9030  0CDC  1120               	bcf	_i2c_status^(0+128),2
  9031  0CDD                     l91:	
  9032  0CDD  0008               	return
  9033  0CDE                     __end_of_i2c_setBuffer:	
  9034                           
  9035                           	psect	text53
  9036  0A6E                     __ptext53:	
  9037 ;; *************** function _i2c_driver_stop *****************
  9038 ;; Defined at:
  9039 ;;		line 157 in file "mcc_generated_files/i2c_driver.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		None
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;Total ram usage:        0 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    6
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_do_I2C_SEND_STOP
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function _i2c_driver_stop
  9069  0A6E                     _i2c_driver_stop:	
  9070  0A6E                     l5278:	
  9071                           ;incstack = 0
  9072                           ; Regs used in _i2c_driver_stop: []
  9073                           
  9074                           
  9075                           ;mcc_generated_files/i2c_driver.c: 159:     SSPCON2bits.PEN = 1;
  9076  0A6E  0024               	movlb	4	; select bank4
  9077  0A6F  1516               	bsf	22,2	;volatile
  9078  0A70                     l632:	
  9079  0A70  0008               	return
  9080  0A71                     __end_of_i2c_driver_stop:	
  9081                           
  9082                           	psect	text54
  9083  0A6B                     __ptext54:	
  9084 ;; *************** function _i2c_driver_restart *****************
  9085 ;; Defined at:
  9086 ;;		line 152 in file "mcc_generated_files/i2c_driver.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;		None
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  1    wreg      void 
  9093 ;; Registers used:
  9094 ;;		None
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;Total ram usage:        0 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    6
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		_do_I2C_SEND_RESTART_READ
  9111 ;;		_do_I2C_SEND_RESTART_WRITE
  9112 ;;		_do_I2C_SEND_RESTART
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           
  9117                           ;psect for function _i2c_driver_restart
  9118  0A6B                     _i2c_driver_restart:	
  9119  0A6B                     l5276:	
  9120                           ;incstack = 0
  9121                           ; Regs used in _i2c_driver_restart: []
  9122                           
  9123                           
  9124                           ;mcc_generated_files/i2c_driver.c: 154:     SSPCON2bits.RSEN = 1;
  9125  0A6B  0024               	movlb	4	; select bank4
  9126  0A6C  1496               	bsf	22,1	;volatile
  9127  0A6D                     l629:	
  9128  0A6D  0008               	return
  9129  0A6E                     __end_of_i2c_driver_restart:	
  9130                           
  9131                           	psect	text55
  9132  0A8E                     __ptext55:	
  9133 ;; *************** function _i2c_driver_sendACK *****************
  9134 ;; Defined at:
  9135 ;;		line 197 in file "mcc_generated_files/i2c_driver.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		None
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;Total ram usage:        0 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:    6
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_do_I2C_DO_ACK
  9160 ;;		_do_I2C_RX
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           
  9165                           ;psect for function _i2c_driver_sendACK
  9166  0A8E                     _i2c_driver_sendACK:	
  9167  0A8E                     l5310:	
  9168                           ;incstack = 0
  9169                           ; Regs used in _i2c_driver_sendACK: []
  9170                           
  9171                           
  9172                           ;mcc_generated_files/i2c_driver.c: 199:     SSPCON2bits.ACKDT = 0;
  9173  0A8E  0024               	movlb	4	; select bank4
  9174  0A8F  1296               	bcf	22,5	;volatile
  9175                           
  9176                           ;mcc_generated_files/i2c_driver.c: 200:     SSPCON2bits.ACKEN = 1;
  9177  0A90  1616               	bsf	22,4	;volatile
  9178  0A91                     l656:	
  9179  0A91  0008               	return
  9180  0A92                     __end_of_i2c_driver_sendACK:	
  9181                           
  9182                           	psect	text56
  9183  0A68                     __ptext56:	
  9184 ;; *************** function _i2c_driver_start *****************
  9185 ;; Defined at:
  9186 ;;		line 147 in file "mcc_generated_files/i2c_driver.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;		None
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;		None
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  1    wreg      void 
  9193 ;; Registers used:
  9194 ;;		None
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;Total ram usage:        0 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    6
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_i2c_masterOperation
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _i2c_driver_start
  9216  0A68                     _i2c_driver_start:	
  9217  0A68                     l5558:	
  9218                           ;incstack = 0
  9219                           ; Regs used in _i2c_driver_start: []
  9220                           
  9221                           
  9222                           ;mcc_generated_files/i2c_driver.c: 149:     SSPCON2bits.SEN = 1;
  9223  0A68  0024               	movlb	4	; select bank4
  9224  0A69  1416               	bsf	22,0	;volatile
  9225  0A6A                     l626:	
  9226  0A6A  0008               	return
  9227  0A6B                     __end_of_i2c_driver_start:	
  9228                           
  9229                           	psect	text57
  9230  0DA7                     __ptext57:	
  9231 ;; *************** function _i2c_close *****************
  9232 ;; Defined at:
  9233 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  ret             1    1[BANK0 ] enum E3252
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      enum E3252
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0, pclath, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;Total ram usage:        2 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    7
  9254 ;; This function calls:
  9255 ;;		_mssp_clearIRQ
  9256 ;;		_mssp_disableIRQ
  9257 ;; This function is called by:
  9258 ;;		_i2c_writeNBytes
  9259 ;;		_i2c_readDataBlock
  9260 ;;		_i2c_write1ByteRegister
  9261 ;;		_i2c_read1ByteRegister
  9262 ;;		_i2c_read2ByteRegister
  9263 ;;		_i2c_write2ByteRegister
  9264 ;;		_i2c_readNBytes
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _i2c_close
  9270  0DA7                     _i2c_close:	
  9271  0DA7                     l5656:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
  9274                           
  9275                           
  9276                           ;mcc_generated_files/drivers/i2c_master.c: 164:     i2c_error_t ret = I2C_BUSY;
  9277  0DA7  0020               	movlb	0	; select bank0
  9278  0DA8  01D4               	clrf	i2c_close@ret
  9279  0DA9  0AD4               	incf	i2c_close@ret,f
  9280                           
  9281                           ;mcc_generated_files/drivers/i2c_master.c: 165:     if(!i2c_status.busy)
  9282  0DAA  0021               	movlb	1	; select bank1
  9283  0DAB  1820               	btfsc	_i2c_status^(0+128),0
  9284  0DAC  2DAE               	goto	u3561
  9285  0DAD  2DAF               	goto	u3560
  9286  0DAE                     u3561:	
  9287  0DAE  2DC2               	goto	l83
  9288  0DAF                     u3560:	
  9289  0DAF                     l5658:	
  9290                           
  9291                           ;mcc_generated_files/drivers/i2c_master.c: 166:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 167:         i2c_status.inUse = 0;
  9292  0DAF  10A0               	bcf	_i2c_status^(0+128),1
  9293  0DB0                     l5660:	
  9294                           
  9295                           ;mcc_generated_files/drivers/i2c_master.c: 169:         i2c_status.address = 0xff;
  9296  0DB0  30FF               	movlw	255
  9297  0DB1  0020               	movlb	0	; select bank0
  9298  0DB2  00D3               	movwf	??_i2c_close
  9299  0DB3  0853               	movf	??_i2c_close,w
  9300  0DB4  0021               	movlb	1	; select bank1
  9301  0DB5  00A1               	movwf	(_i2c_status^(0+128)+1)
  9302  0DB6                     l5662:	
  9303                           
  9304                           ;mcc_generated_files/drivers/i2c_master.c: 170:         mssp_clearIRQ();
  9305  0DB6  318A  2262  318D   	fcall	_mssp_clearIRQ
  9306  0DB9                     l5664:	
  9307                           
  9308                           ;mcc_generated_files/drivers/i2c_master.c: 171:         mssp_disableIRQ();
  9309  0DB9  318A  2265  318D   	fcall	_mssp_disableIRQ
  9310                           
  9311                           ;mcc_generated_files/drivers/i2c_master.c: 172:         ret = i2c_status.error;
  9312  0DBC  0021               	movlb	1	; select bank1
  9313  0DBD  082A               	movf	(_i2c_status^(0+128)+10),w
  9314  0DBE  0020               	movlb	0	; select bank0
  9315  0DBF  00D3               	movwf	??_i2c_close
  9316  0DC0  0853               	movf	??_i2c_close,w
  9317  0DC1  00D4               	movwf	i2c_close@ret
  9318  0DC2                     l83:	
  9319                           ;mcc_generated_files/drivers/i2c_master.c: 173:     }
  9320                           
  9321                           
  9322                           ;mcc_generated_files/drivers/i2c_master.c: 174:     return ret;
  9323  0DC2  0020               	movlb	0	; select bank0
  9324  0DC3  0854               	movf	i2c_close@ret,w
  9325  0DC4                     l84:	
  9326  0DC4  0008               	return
  9327  0DC5                     __end_of_i2c_close:	
  9328                           
  9329                           	psect	text58
  9330  0A65                     __ptext58:	
  9331 ;; *************** function _mssp_disableIRQ *****************
  9332 ;; Defined at:
  9333 ;;		line 49 in file "mcc_generated_files/i2c_driver.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;		None
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;		None
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		None
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;Total ram usage:        0 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    6
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_i2c_close
  9358 ;;		_i2c_setTimeOut
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           
  9363                           ;psect for function _mssp_disableIRQ
  9364  0A65                     _mssp_disableIRQ:	
  9365  0A65                     l5594:	
  9366                           ;incstack = 0
  9367                           ; Regs used in _mssp_disableIRQ: []
  9368                           
  9369                           
  9370                           ;mcc_generated_files/i2c_driver.c: 51: __bit i2c_driver_open(void)
  9371  0A65  0021               	movlb	1	; select bank1
  9372  0A66  1191               	bcf	17,3	;volatile
  9373  0A67                     l594:	
  9374  0A67  0008               	return
  9375  0A68                     __end_of_mssp_disableIRQ:	
  9376                           
  9377                           	psect	text59
  9378  0A62                     __ptext59:	
  9379 ;; *************** function _mssp_clearIRQ *****************
  9380 ;; Defined at:
  9381 ;;		line 54 in file "mcc_generated_files/i2c_driver.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		None
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    6
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_i2c_open
  9406 ;;		_i2c_close
  9407 ;;		_i2c_ISR
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           
  9412                           ;psect for function _mssp_clearIRQ
  9413  0A62                     _mssp_clearIRQ:	
  9414  0A62                     l5384:	
  9415                           ;incstack = 0
  9416                           ; Regs used in _mssp_clearIRQ: []
  9417                           
  9418                           
  9419                           ;mcc_generated_files/i2c_driver.c: 56:         SSPCON1 = 0x28;
  9420  0A62  0020               	movlb	0	; select bank0
  9421  0A63  1191               	bcf	17,3	;volatile
  9422  0A64                     l597:	
  9423  0A64  0008               	return
  9424  0A65                     __end_of_mssp_clearIRQ:	
  9425                           
  9426                           	psect	text60
  9427  07A4                     __ptext60:	
  9428 ;; *************** function _bcdMinuteIncr *****************
  9429 ;; Defined at:
  9430 ;;		line 141 in file "main.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  mn              1    wreg     unsigned char 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  mn              1    0[BANK0 ] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      unsigned char 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;Total ram usage:        1 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    6
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_main
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _bcdMinuteIncr
  9460  07A4                     _bcdMinuteIncr:	
  9461                           
  9462                           ;incstack = 0
  9463                           ; Regs used in _bcdMinuteIncr: [wreg+status,2+status,0]
  9464                           ;bcdMinuteIncr@mn stored from wreg
  9465  07A4  0020               	movlb	0	; select bank0
  9466  07A5  00D3               	movwf	bcdMinuteIncr@mn
  9467  07A6                     l6066:	
  9468                           
  9469                           ;main.c: 143:     if(mn == 0x09) return 0x10;
  9470  07A6  3009               	movlw	9
  9471  07A7  0653               	xorwf	bcdMinuteIncr@mn,w
  9472  07A8  1D03               	btfss	3,2
  9473  07A9  2FAB               	goto	u3861
  9474  07AA  2FAC               	goto	u3860
  9475  07AB                     u3861:	
  9476  07AB  2FAE               	goto	l6072
  9477  07AC                     u3860:	
  9478  07AC                     l6068:	
  9479  07AC  3010               	movlw	16
  9480  07AD  2FD8               	goto	l822
  9481  07AE                     l6072:	
  9482                           
  9483                           ;main.c: 144:     if(mn == 0x19) return 0x20;
  9484  07AE  3019               	movlw	25
  9485  07AF  0653               	xorwf	bcdMinuteIncr@mn,w
  9486  07B0  1D03               	btfss	3,2
  9487  07B1  2FB3               	goto	u3871
  9488  07B2  2FB4               	goto	u3870
  9489  07B3                     u3871:	
  9490  07B3  2FB6               	goto	l6078
  9491  07B4                     u3870:	
  9492  07B4                     l6074:	
  9493  07B4  3020               	movlw	32
  9494  07B5  2FD8               	goto	l822
  9495  07B6                     l6078:	
  9496                           
  9497                           ;main.c: 145:     if(mn == 0x29) return 0x30;
  9498  07B6  3029               	movlw	41
  9499  07B7  0653               	xorwf	bcdMinuteIncr@mn,w
  9500  07B8  1D03               	btfss	3,2
  9501  07B9  2FBB               	goto	u3881
  9502  07BA  2FBC               	goto	u3880
  9503  07BB                     u3881:	
  9504  07BB  2FBE               	goto	l6084
  9505  07BC                     u3880:	
  9506  07BC                     l6080:	
  9507  07BC  3030               	movlw	48
  9508  07BD  2FD8               	goto	l822
  9509  07BE                     l6084:	
  9510                           
  9511                           ;main.c: 146:     if(mn == 0x39) return 0x40;
  9512  07BE  3039               	movlw	57
  9513  07BF  0653               	xorwf	bcdMinuteIncr@mn,w
  9514  07C0  1D03               	btfss	3,2
  9515  07C1  2FC3               	goto	u3891
  9516  07C2  2FC4               	goto	u3890
  9517  07C3                     u3891:	
  9518  07C3  2FC6               	goto	l6090
  9519  07C4                     u3890:	
  9520  07C4                     l6086:	
  9521  07C4  3040               	movlw	64
  9522  07C5  2FD8               	goto	l822
  9523  07C6                     l6090:	
  9524                           
  9525                           ;main.c: 147:     if(mn == 0x49) return 0x50;
  9526  07C6  3049               	movlw	73
  9527  07C7  0653               	xorwf	bcdMinuteIncr@mn,w
  9528  07C8  1D03               	btfss	3,2
  9529  07C9  2FCB               	goto	u3901
  9530  07CA  2FCC               	goto	u3900
  9531  07CB                     u3901:	
  9532  07CB  2FCE               	goto	l6096
  9533  07CC                     u3900:	
  9534  07CC                     l6092:	
  9535  07CC  3050               	movlw	80
  9536  07CD  2FD8               	goto	l822
  9537  07CE                     l6096:	
  9538                           
  9539                           ;main.c: 148:     if(mn == 0x59) return 0x00;
  9540  07CE  3059               	movlw	89
  9541  07CF  0653               	xorwf	bcdMinuteIncr@mn,w
  9542  07D0  1D03               	btfss	3,2
  9543  07D1  2FD3               	goto	u3911
  9544  07D2  2FD4               	goto	u3910
  9545  07D3                     u3911:	
  9546  07D3  2FD6               	goto	l6102
  9547  07D4                     u3910:	
  9548  07D4                     l6098:	
  9549  07D4  3000               	movlw	0
  9550  07D5  2FD8               	goto	l822
  9551  07D6                     l6102:	
  9552                           
  9553                           ;main.c: 149:     return (mn + 1);
  9554  07D6  0853               	movf	bcdMinuteIncr@mn,w
  9555  07D7  3E01               	addlw	1
  9556  07D8                     l822:	
  9557  07D8  0008               	return
  9558  07D9                     __end_of_bcdMinuteIncr:	
  9559                           
  9560                           	psect	text61
  9561  0F98                     __ptext61:	
  9562 ;; *************** function _bcdMinuteDecr *****************
  9563 ;; Defined at:
  9564 ;;		line 152 in file "main.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  mn              1    wreg     unsigned char 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  mn              1    0[BANK0 ] unsigned char 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      unsigned char 
  9571 ;; Registers used:
  9572 ;;		wreg, status,2, status,0
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;Total ram usage:        1 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; Hardware stack levels required when called:    6
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_main
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           
  9593                           ;psect for function _bcdMinuteDecr
  9594  0F98                     _bcdMinuteDecr:	
  9595                           
  9596                           ;incstack = 0
  9597                           ; Regs used in _bcdMinuteDecr: [wreg+status,2+status,0]
  9598                           ;bcdMinuteDecr@mn stored from wreg
  9599  0F98  0020               	movlb	0	; select bank0
  9600  0F99  00D3               	movwf	bcdMinuteDecr@mn
  9601  0F9A                     l6106:	
  9602                           
  9603                           ;main.c: 153:     if(mn == 0x00) return 0x59;
  9604  0F9A  0853               	movf	bcdMinuteDecr@mn,w
  9605  0F9B  1D03               	btfss	3,2
  9606  0F9C  2F9E               	goto	u3921
  9607  0F9D  2F9F               	goto	u3920
  9608  0F9E                     u3921:	
  9609  0F9E  2FA1               	goto	l6112
  9610  0F9F                     u3920:	
  9611  0F9F                     l6108:	
  9612  0F9F  3059               	movlw	89
  9613  0FA0  2FCB               	goto	l831
  9614  0FA1                     l6112:	
  9615                           
  9616                           ;main.c: 154:     if(mn == 0x10) return 0x09;
  9617  0FA1  3010               	movlw	16
  9618  0FA2  0653               	xorwf	bcdMinuteDecr@mn,w
  9619  0FA3  1D03               	btfss	3,2
  9620  0FA4  2FA6               	goto	u3931
  9621  0FA5  2FA7               	goto	u3930
  9622  0FA6                     u3931:	
  9623  0FA6  2FA9               	goto	l6118
  9624  0FA7                     u3930:	
  9625  0FA7                     l6114:	
  9626  0FA7  3009               	movlw	9
  9627  0FA8  2FCB               	goto	l831
  9628  0FA9                     l6118:	
  9629                           
  9630                           ;main.c: 155:     if(mn == 0x20) return 0x19;
  9631  0FA9  3020               	movlw	32
  9632  0FAA  0653               	xorwf	bcdMinuteDecr@mn,w
  9633  0FAB  1D03               	btfss	3,2
  9634  0FAC  2FAE               	goto	u3941
  9635  0FAD  2FAF               	goto	u3940
  9636  0FAE                     u3941:	
  9637  0FAE  2FB1               	goto	l6124
  9638  0FAF                     u3940:	
  9639  0FAF                     l6120:	
  9640  0FAF  3019               	movlw	25
  9641  0FB0  2FCB               	goto	l831
  9642  0FB1                     l6124:	
  9643                           
  9644                           ;main.c: 156:     if(mn == 0x30) return 0x29;
  9645  0FB1  3030               	movlw	48
  9646  0FB2  0653               	xorwf	bcdMinuteDecr@mn,w
  9647  0FB3  1D03               	btfss	3,2
  9648  0FB4  2FB6               	goto	u3951
  9649  0FB5  2FB7               	goto	u3950
  9650  0FB6                     u3951:	
  9651  0FB6  2FB9               	goto	l6130
  9652  0FB7                     u3950:	
  9653  0FB7                     l6126:	
  9654  0FB7  3029               	movlw	41
  9655  0FB8  2FCB               	goto	l831
  9656  0FB9                     l6130:	
  9657                           
  9658                           ;main.c: 157:     if(mn == 0x40) return 0x39;
  9659  0FB9  3040               	movlw	64
  9660  0FBA  0653               	xorwf	bcdMinuteDecr@mn,w
  9661  0FBB  1D03               	btfss	3,2
  9662  0FBC  2FBE               	goto	u3961
  9663  0FBD  2FBF               	goto	u3960
  9664  0FBE                     u3961:	
  9665  0FBE  2FC1               	goto	l6136
  9666  0FBF                     u3960:	
  9667  0FBF                     l6132:	
  9668  0FBF  3039               	movlw	57
  9669  0FC0  2FCB               	goto	l831
  9670  0FC1                     l6136:	
  9671                           
  9672                           ;main.c: 158:     if(mn == 0x50) return 0x49;
  9673  0FC1  3050               	movlw	80
  9674  0FC2  0653               	xorwf	bcdMinuteDecr@mn,w
  9675  0FC3  1D03               	btfss	3,2
  9676  0FC4  2FC6               	goto	u3971
  9677  0FC5  2FC7               	goto	u3970
  9678  0FC6                     u3971:	
  9679  0FC6  2FC9               	goto	l6142
  9680  0FC7                     u3970:	
  9681  0FC7                     l6138:	
  9682  0FC7  3049               	movlw	73
  9683  0FC8  2FCB               	goto	l831
  9684  0FC9                     l6142:	
  9685                           
  9686                           ;main.c: 159:     return (mn - 1);
  9687  0FC9  0853               	movf	bcdMinuteDecr@mn,w
  9688  0FCA  3EFF               	addlw	255
  9689  0FCB                     l831:	
  9690  0FCB  0008               	return
  9691  0FCC                     __end_of_bcdMinuteDecr:	
  9692                           
  9693                           	psect	text62
  9694  0D8A                     __ptext62:	
  9695 ;; *************** function _bcdHourIncr *****************
  9696 ;; Defined at:
  9697 ;;		line 126 in file "main.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  hr              1    wreg     unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  hr              1    0[BANK0 ] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      unsigned char 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;Total ram usage:        1 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    6
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_main
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           
  9726                           ;psect for function _bcdHourIncr
  9727  0D8A                     _bcdHourIncr:	
  9728                           
  9729                           ;incstack = 0
  9730                           ; Regs used in _bcdHourIncr: [wreg+status,2+status,0]
  9731                           ;bcdHourIncr@hr stored from wreg
  9732  0D8A  0020               	movlb	0	; select bank0
  9733  0D8B  00D3               	movwf	bcdHourIncr@hr
  9734  0D8C                     l6022:	
  9735                           
  9736                           ;main.c: 128:     if(hr == 0x09) return 0x10;
  9737  0D8C  3009               	movlw	9
  9738  0D8D  0653               	xorwf	bcdHourIncr@hr,w
  9739  0D8E  1D03               	btfss	3,2
  9740  0D8F  2D91               	goto	u3801
  9741  0D90  2D92               	goto	u3800
  9742  0D91                     u3801:	
  9743  0D91  2D94               	goto	l6028
  9744  0D92                     u3800:	
  9745  0D92                     l6024:	
  9746  0D92  3010               	movlw	16
  9747  0D93  2DA6               	goto	l810
  9748  0D94                     l6028:	
  9749                           
  9750                           ;main.c: 129:     if(hr == 0x19) return 0x20;
  9751  0D94  3019               	movlw	25
  9752  0D95  0653               	xorwf	bcdHourIncr@hr,w
  9753  0D96  1D03               	btfss	3,2
  9754  0D97  2D99               	goto	u3811
  9755  0D98  2D9A               	goto	u3810
  9756  0D99                     u3811:	
  9757  0D99  2D9C               	goto	l6034
  9758  0D9A                     u3810:	
  9759  0D9A                     l6030:	
  9760  0D9A  3020               	movlw	32
  9761  0D9B  2DA6               	goto	l810
  9762  0D9C                     l6034:	
  9763                           
  9764                           ;main.c: 130:     if(hr == 0x23) return 0x00;
  9765  0D9C  3023               	movlw	35
  9766  0D9D  0653               	xorwf	bcdHourIncr@hr,w
  9767  0D9E  1D03               	btfss	3,2
  9768  0D9F  2DA1               	goto	u3821
  9769  0DA0  2DA2               	goto	u3820
  9770  0DA1                     u3821:	
  9771  0DA1  2DA4               	goto	l6040
  9772  0DA2                     u3820:	
  9773  0DA2                     l6036:	
  9774  0DA2  3000               	movlw	0
  9775  0DA3  2DA6               	goto	l810
  9776  0DA4                     l6040:	
  9777                           
  9778                           ;main.c: 131:     return (hr + 1);
  9779  0DA4  0853               	movf	bcdHourIncr@hr,w
  9780  0DA5  3E01               	addlw	1
  9781  0DA6                     l810:	
  9782  0DA6  0008               	return
  9783  0DA7                     __end_of_bcdHourIncr:	
  9784                           
  9785                           	psect	text63
  9786  0D6E                     __ptext63:	
  9787 ;; *************** function _bcdHourDecr *****************
  9788 ;; Defined at:
  9789 ;;		line 134 in file "main.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;  hr              1    wreg     unsigned char 
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  hr              1    0[BANK0 ] unsigned char 
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      unsigned char 
  9796 ;; Registers used:
  9797 ;;		wreg, status,2, status,0
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;Total ram usage:        1 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:    6
  9810 ;; This function calls:
  9811 ;;		Nothing
  9812 ;; This function is called by:
  9813 ;;		_main
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           
  9818                           ;psect for function _bcdHourDecr
  9819  0D6E                     _bcdHourDecr:	
  9820                           
  9821                           ;incstack = 0
  9822                           ; Regs used in _bcdHourDecr: [wreg+status,2+status,0]
  9823                           ;bcdHourDecr@hr stored from wreg
  9824  0D6E  0020               	movlb	0	; select bank0
  9825  0D6F  00D3               	movwf	bcdHourDecr@hr
  9826  0D70                     l6044:	
  9827                           
  9828                           ;main.c: 135:     if(hr == 0x00) return 0x23;
  9829  0D70  0853               	movf	bcdHourDecr@hr,w
  9830  0D71  1D03               	btfss	3,2
  9831  0D72  2D74               	goto	u3831
  9832  0D73  2D75               	goto	u3830
  9833  0D74                     u3831:	
  9834  0D74  2D77               	goto	l6050
  9835  0D75                     u3830:	
  9836  0D75                     l6046:	
  9837  0D75  3023               	movlw	35
  9838  0D76  2D89               	goto	l816
  9839  0D77                     l6050:	
  9840                           
  9841                           ;main.c: 136:     if(hr == 0x10) return 0x09;
  9842  0D77  3010               	movlw	16
  9843  0D78  0653               	xorwf	bcdHourDecr@hr,w
  9844  0D79  1D03               	btfss	3,2
  9845  0D7A  2D7C               	goto	u3841
  9846  0D7B  2D7D               	goto	u3840
  9847  0D7C                     u3841:	
  9848  0D7C  2D7F               	goto	l6056
  9849  0D7D                     u3840:	
  9850  0D7D                     l6052:	
  9851  0D7D  3009               	movlw	9
  9852  0D7E  2D89               	goto	l816
  9853  0D7F                     l6056:	
  9854                           
  9855                           ;main.c: 137:     if(hr == 0x20) return 0x19;
  9856  0D7F  3020               	movlw	32
  9857  0D80  0653               	xorwf	bcdHourDecr@hr,w
  9858  0D81  1D03               	btfss	3,2
  9859  0D82  2D84               	goto	u3851
  9860  0D83  2D85               	goto	u3850
  9861  0D84                     u3851:	
  9862  0D84  2D87               	goto	l6062
  9863  0D85                     u3850:	
  9864  0D85                     l6058:	
  9865  0D85  3019               	movlw	25
  9866  0D86  2D89               	goto	l816
  9867  0D87                     l6062:	
  9868                           
  9869                           ;main.c: 138:     return (hr - 1);
  9870  0D87  0853               	movf	bcdHourDecr@hr,w
  9871  0D88  3EFF               	addlw	255
  9872  0D89                     l816:	
  9873  0D89  0008               	return
  9874  0D8A                     __end_of_bcdHourDecr:	
  9875                           
  9876                           	psect	text64
  9877  0C9E                     __ptext64:	
  9878 ;; *************** function _SYSTEM_Initialize *****************
  9879 ;; Defined at:
  9880 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;		None
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      void 
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0, pclath, cstack
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;Total ram usage:        0 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    8
  9901 ;; This function calls:
  9902 ;;		_ADC_Initialize
  9903 ;;		_FVR_Initialize
  9904 ;;		_OSCILLATOR_Initialize
  9905 ;;		_PIN_MANAGER_Initialize
  9906 ;;		_TMR0_Initialize
  9907 ;;		_WDT_Initialize
  9908 ;; This function is called by:
  9909 ;;		_main
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           
  9914                           ;psect for function _SYSTEM_Initialize
  9915  0C9E                     _SYSTEM_Initialize:	
  9916  0C9E                     l5980:	
  9917                           ;incstack = 0
  9918                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9919                           
  9920                           
  9921                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9922  0C9E  318E  26D8  318C   	fcall	_PIN_MANAGER_Initialize
  9923                           
  9924                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9925  0CA1  318B  23B1  318C   	fcall	_OSCILLATOR_Initialize
  9926                           
  9927                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  9928  0CA4  318A  228A  318C   	fcall	_WDT_Initialize
  9929                           
  9930                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  9931  0CA7  318A  2286  318C   	fcall	_FVR_Initialize
  9932                           
  9933                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  9934  0CAA  318C  24B1  318C   	fcall	_TMR0_Initialize
  9935                           
  9936                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  9937  0CAD  318B  2325  318C   	fcall	_ADC_Initialize
  9938  0CB0                     l433:	
  9939  0CB0  0008               	return
  9940  0CB1                     __end_of_SYSTEM_Initialize:	
  9941                           
  9942                           	psect	text65
  9943  0A8A                     __ptext65:	
  9944 ;; *************** function _WDT_Initialize *****************
  9945 ;; Defined at:
  9946 ;;		line 75 in file "mcc_generated_files/mcc.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;		None
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;		None
  9951 ;; Return value:  Size  Location     Type
  9952 ;;                  1    wreg      void 
  9953 ;; Registers used:
  9954 ;;		wreg
  9955 ;; Tracked objects:
  9956 ;;		On entry : 0/0
  9957 ;;		On exit  : 0/0
  9958 ;;		Unchanged: 0/0
  9959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;Total ram usage:        0 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; Hardware stack levels required when called:    6
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		_SYSTEM_Initialize
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _WDT_Initialize
  9976  0A8A                     _WDT_Initialize:	
  9977  0A8A                     l5792:	
  9978                           ;incstack = 0
  9979                           ; Regs used in _WDT_Initialize: [wreg]
  9980                           
  9981                           
  9982                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x12;
  9983  0A8A  3012               	movlw	18
  9984  0A8B  0021               	movlb	1	; select bank1
  9985  0A8C  0097               	movwf	23	;volatile
  9986  0A8D                     l442:	
  9987  0A8D  0008               	return
  9988  0A8E                     __end_of_WDT_Initialize:	
  9989                           
  9990                           	psect	text66
  9991  0CB1                     __ptext66:	
  9992 ;; *************** function _TMR0_Initialize *****************
  9993 ;; Defined at:
  9994 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;		None
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;		None
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, status,2, status,0, pclath, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;Total ram usage:        1 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    7
 10015 ;; This function calls:
 10016 ;;		_TMR0_SetInterruptHandler
 10017 ;; This function is called by:
 10018 ;;		_SYSTEM_Initialize
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           
 10023                           ;psect for function _TMR0_Initialize
 10024  0CB1                     _TMR0_Initialize:	
 10025  0CB1                     l5796:	
 10026                           ;incstack = 0
 10027                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10028                           
 10029                           
 10030                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
 10031  0CB1  0021               	movlb	1	; select bank1
 10032  0CB2  0815               	movf	21,w	;volatile
 10033  0CB3  39C0               	andlw	192
 10034  0CB4  3817               	iorlw	23
 10035  0CB5  0095               	movwf	21	;volatile
 10036  0CB6                     l5798:	
 10037                           
 10038                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
 10039  0CB6  3083               	movlw	131
 10040  0CB7  0020               	movlb	0	; select bank0
 10041  0CB8  0095               	movwf	21	;volatile
 10042  0CB9                     l5800:	
 10043                           
 10044                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
 10045  0CB9  3083               	movlw	131
 10046  0CBA  00D5               	movwf	??_TMR0_Initialize
 10047  0CBB  0855               	movf	??_TMR0_Initialize,w
 10048  0CBC  00FD               	movwf	_timer0ReloadVal	;volatile
 10049  0CBD                     l5802:	
 10050                           
 10051                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
 10052  0CBD  110B               	bcf	11,2	;volatile
 10053  0CBE                     l5804:	
 10054                           
 10055                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
 10056  0CBE  168B               	bsf	11,5	;volatile
 10057  0CBF                     l5806:	
 10058                           
 10059                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 10060  0CBF  3046               	movlw	low _TMR0_DefaultInterruptHandler
 10061  0CC0  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10062  0CC1  300A               	movlw	high _TMR0_DefaultInterruptHandler
 10063  0CC2  00D4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10064  0CC3  318A  22CE  318C   	fcall	_TMR0_SetInterruptHandler
 10065  0CC6                     l530:	
 10066  0CC6  0008               	return
 10067  0CC7                     __end_of_TMR0_Initialize:	
 10068                           
 10069                           	psect	text67
 10070  0ACE                     __ptext67:	
 10071 ;; *************** function _TMR0_SetInterruptHandler *****************
 10072 ;; Defined at:
 10073 ;;		line 133 in file "mcc_generated_files/tmr0.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10076 ;;		 -> displayRefreshISR(1), TMR0_DefaultInterruptHandler(1), 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10092 ;;Total ram usage:        2 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:    6
 10095 ;; This function calls:
 10096 ;;		Nothing
 10097 ;; This function is called by:
 10098 ;;		_TMR0_Initialize
 10099 ;;		_main
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           
 10104                           ;psect for function _TMR0_SetInterruptHandler
 10105  0ACE                     _TMR0_SetInterruptHandler:	
 10106  0ACE                     l5674:	
 10107                           ;incstack = 0
 10108                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 10109                           
 10110                           
 10111                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
 10112  0ACE  0020               	movlb	0	; select bank0
 10113  0ACF  0854               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 10114  0AD0  00F9               	movwf	_TMR0_InterruptHandler+1
 10115  0AD1  0853               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 10116  0AD2  00F8               	movwf	_TMR0_InterruptHandler
 10117  0AD3                     l549:	
 10118  0AD3  0008               	return
 10119  0AD4                     __end_of_TMR0_SetInterruptHandler:	
 10120                           
 10121                           	psect	text68
 10122  0ED8                     __ptext68:	
 10123 ;; *************** function _PIN_MANAGER_Initialize *****************
 10124 ;; Defined at:
 10125 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;		None
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;		None
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0, pclath, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;Total ram usage:        0 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    7
 10146 ;; This function calls:
 10147 ;;		_IOCBF4_SetInterruptHandler
 10148 ;; This function is called by:
 10149 ;;		_SYSTEM_Initialize
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           
 10154                           ;psect for function _PIN_MANAGER_Initialize
 10155  0ED8                     _PIN_MANAGER_Initialize:	
 10156  0ED8                     l5752:	
 10157                           ;incstack = 0
 10158                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10159                           
 10160                           
 10161                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 10162  0ED8  0022               	movlb	2	; select bank2
 10163  0ED9  0190               	clrf	16	;volatile
 10164                           
 10165                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 10166  0EDA  018F               	clrf	15	;volatile
 10167                           
 10168                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 10169  0EDB  018C               	clrf	12	;volatile
 10170                           
 10171                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 10172  0EDC  018D               	clrf	13	;volatile
 10173                           
 10174                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 10175  0EDD  018E               	clrf	14	;volatile
 10176  0EDE                     l5754:	
 10177                           
 10178                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x0D;
 10179  0EDE  300D               	movlw	13
 10180  0EDF  0021               	movlb	1	; select bank1
 10181  0EE0  0090               	movwf	16	;volatile
 10182  0EE1                     l5756:	
 10183                           
 10184                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x67;
 10185  0EE1  3067               	movlw	103
 10186  0EE2  008C               	movwf	12	;volatile
 10187  0EE3                     l5758:	
 10188                           
 10189                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0x7F;
 10190  0EE3  307F               	movlw	127
 10191  0EE4  008D               	movwf	13	;volatile
 10192  0EE5                     l5760:	
 10193                           
 10194                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFD;
 10195  0EE5  30FD               	movlw	253
 10196  0EE6  008E               	movwf	14	;volatile
 10197                           
 10198                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x00;
 10199  0EE7  018F               	clrf	15	;volatile
 10200                           
 10201                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x00;
 10202  0EE8  0023               	movlb	3	; select bank3
 10203  0EE9  018F               	clrf	15	;volatile
 10204  0EEA                     l5762:	
 10205                           
 10206                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0x20;
 10207  0EEA  3020               	movlw	32
 10208  0EEB  008D               	movwf	13	;volatile
 10209  0EEC                     l5764:	
 10210                           
 10211                           ;mcc_generated_files/pin_manager.c: 82:     ANSELE = 0x05;
 10212  0EEC  3005               	movlw	5
 10213  0EED  0090               	movwf	16	;volatile
 10214  0EEE                     l5766:	
 10215                           
 10216                           ;mcc_generated_files/pin_manager.c: 83:     ANSELA = 0x27;
 10217  0EEE  3027               	movlw	39
 10218  0EEF  008C               	movwf	12	;volatile
 10219  0EF0                     l5768:	
 10220                           
 10221                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10222  0EF0  0024               	movlb	4	; select bank4
 10223  0EF1  0190               	clrf	16	;volatile
 10224  0EF2                     l5770:	
 10225                           
 10226                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10227  0EF2  018D               	clrf	13	;volatile
 10228  0EF3                     l5772:	
 10229                           
 10230                           ;mcc_generated_files/pin_manager.c: 90:     OPTION_REGbits.nWPUEN = 1;
 10231  0EF3  0021               	movlb	1	; select bank1
 10232  0EF4  1795               	bsf	21,7	;volatile
 10233  0EF5                     l5774:	
 10234                           
 10235                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
 10236  0EF5  0022               	movlb	2	; select bank2
 10237  0EF6  019D               	clrf	29	;volatile
 10238  0EF7                     l5776:	
 10239                           
 10240                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
 10241  0EF7  0027               	movlb	7	; select bank7
 10242  0EF8  1216               	bcf	22,4	;volatile
 10243  0EF9                     l5778:	
 10244                           
 10245                           ;mcc_generated_files/pin_manager.c: 104:     IOCBNbits.IOCBN4 = 0;
 10246  0EF9  1215               	bcf	21,4	;volatile
 10247  0EFA                     l5780:	
 10248                           
 10249                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP4 = 1;
 10250  0EFA  1614               	bsf	20,4	;volatile
 10251  0EFB                     l5782:	
 10252                           
 10253                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
 10254  0EFB  3045               	movlw	low _IOCBF4_DefaultInterruptHandler
 10255  0EFC  0020               	movlb	0	; select bank0
 10256  0EFD  00D3               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
 10257  0EFE  300A               	movlw	high _IOCBF4_DefaultInterruptHandler
 10258  0EFF  00D4               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
 10259  0F00  318A  22C8  318E   	fcall	_IOCBF4_SetInterruptHandler
 10260  0F03                     l5784:	
 10261                           
 10262                           ;mcc_generated_files/pin_manager.c: 114:     INTCONbits.IOCIE = 1;
 10263  0F03  158B               	bsf	11,3	;volatile
 10264  0F04                     l497:	
 10265  0F04  0008               	return
 10266  0F05                     __end_of_PIN_MANAGER_Initialize:	
 10267                           
 10268                           	psect	text69
 10269  0AC8                     __ptext69:	
 10270 ;; *************** function _IOCBF4_SetInterruptHandler *****************
 10271 ;; Defined at:
 10272 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10275 ;;		 -> secondISR(1), IOCBF4_DefaultInterruptHandler(1), 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		wreg
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;Total ram usage:        2 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    6
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_PIN_MANAGER_Initialize
 10298 ;;		_main
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           
 10303                           ;psect for function _IOCBF4_SetInterruptHandler
 10304  0AC8                     _IOCBF4_SetInterruptHandler:	
 10305  0AC8                     l5672:	
 10306                           ;incstack = 0
 10307                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
 10308                           
 10309                           
 10310                           ;mcc_generated_files/pin_manager.c: 146:     IOCBF4_InterruptHandler = InterruptHandler;
 10311  0AC8  0020               	movlb	0	; select bank0
 10312  0AC9  0854               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
 10313  0ACA  00EE               	movwf	_IOCBF4_InterruptHandler+1
 10314  0ACB  0853               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
 10315  0ACC  00ED               	movwf	_IOCBF4_InterruptHandler
 10316  0ACD                     l508:	
 10317  0ACD  0008               	return
 10318  0ACE                     __end_of_IOCBF4_SetInterruptHandler:	
 10319                           
 10320                           	psect	text70
 10321  0BB1                     __ptext70:	
 10322 ;; *************** function _OSCILLATOR_Initialize *****************
 10323 ;; Defined at:
 10324 ;;		line 61 in file "mcc_generated_files/mcc.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;		None
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;		None
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, status,2
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;Total ram usage:        0 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; Hardware stack levels required when called:    6
 10345 ;; This function calls:
 10346 ;;		Nothing
 10347 ;; This function is called by:
 10348 ;;		_SYSTEM_Initialize
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           
 10353                           ;psect for function _OSCILLATOR_Initialize
 10354  0BB1                     _OSCILLATOR_Initialize:	
 10355  0BB1                     l5786:	
 10356                           ;incstack = 0
 10357                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10358                           
 10359                           
 10360                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
 10361  0BB1  3070               	movlw	112
 10362  0BB2  0021               	movlb	1	; select bank1
 10363  0BB3  0099               	movwf	25	;volatile
 10364  0BB4                     l5788:	
 10365                           
 10366                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
 10367  0BB4  0198               	clrf	24	;volatile
 10368  0BB5                     l5790:	
 10369                           
 10370                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
 10371  0BB5  0022               	movlb	2	; select bank2
 10372  0BB6  0196               	clrf	22	;volatile
 10373  0BB7                     l436:	
 10374                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
 10375                           
 10376                           
 10377                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
 10378  0BB7  0021               	movlb	1	; select bank1
 10379  0BB8  1F1A               	btfss	26,6	;volatile
 10380  0BB9  2BBB               	goto	u3611
 10381  0BBA  2BBC               	goto	u3610
 10382  0BBB                     u3611:	
 10383  0BBB  2BB7               	goto	l436
 10384  0BBC                     u3610:	
 10385  0BBC                     l439:	
 10386  0BBC  0008               	return
 10387  0BBD                     __end_of_OSCILLATOR_Initialize:	
 10388                           
 10389                           	psect	text71
 10390  0A86                     __ptext71:	
 10391 ;; *************** function _FVR_Initialize *****************
 10392 ;; Defined at:
 10393 ;;		line 58 in file "mcc_generated_files/fvr.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;		None
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;		None
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;Total ram usage:        0 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    6
 10414 ;; This function calls:
 10415 ;;		Nothing
 10416 ;; This function is called by:
 10417 ;;		_SYSTEM_Initialize
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           
 10422                           ;psect for function _FVR_Initialize
 10423  0A86                     _FVR_Initialize:	
 10424  0A86                     l5794:	
 10425                           ;incstack = 0
 10426                           ; Regs used in _FVR_Initialize: [wreg]
 10427                           
 10428                           
 10429                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
 10430  0A86  3081               	movlw	129
 10431  0A87  0022               	movlb	2	; select bank2
 10432  0A88  0097               	movwf	23	;volatile
 10433  0A89                     l706:	
 10434  0A89  0008               	return
 10435  0A8A                     __end_of_FVR_Initialize:	
 10436                           
 10437                           	psect	text72
 10438  0B25                     __ptext72:	
 10439 ;; *************** function _ADC_Initialize *****************
 10440 ;; Defined at:
 10441 ;;		line 65 in file "mcc_generated_files/adc.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;		None
 10444 ;; Auto vars:     Size  Location     Type
 10445 ;;		None
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  1    wreg      void 
 10448 ;; Registers used:
 10449 ;;		wreg, status,2
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;Total ram usage:        0 bytes
 10460 ;; Hardware stack levels used:    1
 10461 ;; Hardware stack levels required when called:    6
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_SYSTEM_Initialize
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           
 10470                           ;psect for function _ADC_Initialize
 10471  0B25                     _ADC_Initialize:	
 10472  0B25                     l5808:	
 10473                           ;incstack = 0
 10474                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10475                           
 10476                           
 10477                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
 10478  0B25  3001               	movlw	1
 10479  0B26  0021               	movlb	1	; select bank1
 10480  0B27  009D               	movwf	29	;volatile
 10481                           
 10482                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xE3;
 10483  0B28  30E3               	movlw	227
 10484  0B29  009E               	movwf	30	;volatile
 10485  0B2A                     l5810:	
 10486                           
 10487                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
 10488  0B2A  019B               	clrf	27	;volatile
 10489  0B2B                     l5812:	
 10490                           
 10491                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
 10492  0B2B  019C               	clrf	28	;volatile
 10493  0B2C                     l724:	
 10494  0B2C  0008               	return
 10495  0B2D                     __end_of_ADC_Initialize:	
 10496                           
 10497                           	psect	text73
 10498  05ED                     __ptext73:	
 10499 ;; *************** function _FIR_filter *****************
 10500 ;; Defined at:
 10501 ;;		line 219 in file "main.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  sample          2    4[BANK0 ] unsigned short 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;		None
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  2    4[BANK0 ] unsigned short 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;Total ram usage:        8 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    6
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _FIR_filter
 10531  05ED                     _FIR_filter:	
 10532  05ED                     l4656:	
 10533                           ;incstack = 0
 10534                           ; Regs used in _FIR_filter: [wreg+fsr1l+fsr1h+status,2+status,0]
 10535                           
 10536                           
 10537                           ;main.c: 220:     static adc_result_t buffer[8] = {0,0,0,0,0,0,0,0};;main.c: 221:     st
      +                          atic adc_result_t oldest = 0;;main.c: 222:     static uint32_t sum;;main.c: 224:     sum
      +                           -= buffer[oldest];
 10538  05ED  0020               	movlb	0	; select bank0
 10539  05EE  3540               	lslf	FIR_filter@oldest,w
 10540  05EF  3E20               	addlw	(low (FIR_filter@buffer| 0))& (0+255)
 10541  05F0  0086               	movwf	6
 10542  05F1  0187               	clrf	7
 10543  05F2  3F40               	moviw [0]fsr1
 10544  05F3  00D9               	movwf	??_FIR_filter
 10545  05F4  3F41               	moviw [1]fsr1
 10546  05F5  00DA               	movwf	??_FIR_filter+1
 10547  05F6  0859               	movf	??_FIR_filter,w
 10548  05F7  00DB               	movwf	??_FIR_filter+2
 10549  05F8  085A               	movf	??_FIR_filter+1,w
 10550  05F9  00DC               	movwf	??_FIR_filter+3
 10551  05FA  01DD               	clrf	??_FIR_filter+4
 10552  05FB  01DE               	clrf	??_FIR_filter+5
 10553  05FC  085B               	movf	??_FIR_filter+2,w
 10554  05FD  02B0               	subwf	FIR_filter@sum,f
 10555  05FE  085C               	movf	??_FIR_filter+3,w
 10556  05FF  3BB1               	subwfb	FIR_filter@sum+1,f
 10557  0600  085D               	movf	??_FIR_filter+4,w
 10558  0601  3BB2               	subwfb	FIR_filter@sum+2,f
 10559  0602  085E               	movf	??_FIR_filter+5,w
 10560  0603  3BB3               	subwfb	FIR_filter@sum+3,f
 10561  0604                     l4658:	
 10562                           
 10563                           ;main.c: 225:     sum += sample;
 10564  0604  0857               	movf	FIR_filter@sample,w
 10565  0605  07B0               	addwf	FIR_filter@sum,f
 10566  0606  0858               	movf	FIR_filter@sample+1,w
 10567  0607  3DB1               	addwfc	FIR_filter@sum+1,f
 10568  0608  3000               	movlw	0
 10569  0609  3DB2               	addwfc	FIR_filter@sum+2,f
 10570  060A  3DB3               	addwfc	FIR_filter@sum+3,f
 10571  060B                     l4660:	
 10572                           
 10573                           ;main.c: 226:     buffer[oldest] = sample;
 10574  060B  3540               	lslf	FIR_filter@oldest,w
 10575  060C  3E20               	addlw	(low (FIR_filter@buffer| 0))& (0+255)
 10576  060D  0086               	movwf	6
 10577  060E  0187               	clrf	7
 10578  060F  0857               	movf	FIR_filter@sample,w
 10579  0610  3FC0               	movwi [0]fsr1
 10580  0611  0858               	movf	FIR_filter@sample+1,w
 10581  0612  3FC1               	movwi [1]fsr1
 10582                           
 10583                           ;main.c: 227:     oldest += 1;
 10584  0613  3001               	movlw	1
 10585  0614  07C0               	addwf	FIR_filter@oldest,f
 10586  0615  3000               	movlw	0
 10587  0616  3DC1               	addwfc	FIR_filter@oldest+1,f
 10588                           
 10589                           ;main.c: 228:     if (oldest >= 8) oldest = 0;
 10590  0617  3000               	movlw	0
 10591  0618  0241               	subwf	FIR_filter@oldest+1,w
 10592  0619  3008               	movlw	8
 10593  061A  1903               	skipnz
 10594  061B  0240               	subwf	FIR_filter@oldest,w
 10595  061C  1C03               	skipc
 10596  061D  2E1F               	goto	u2571
 10597  061E  2E20               	goto	u2570
 10598  061F                     u2571:	
 10599  061F  2E22               	goto	l4664
 10600  0620                     u2570:	
 10601  0620                     l4662:	
 10602  0620  01C0               	clrf	FIR_filter@oldest
 10603  0621  01C1               	clrf	FIR_filter@oldest+1
 10604  0622                     l4664:	
 10605                           
 10606                           ;main.c: 230:     return (sum >> 3);
 10607  0622  0830               	movf	FIR_filter@sum,w
 10608  0623  00D9               	movwf	??_FIR_filter
 10609  0624  0831               	movf	FIR_filter@sum+1,w
 10610  0625  00DA               	movwf	??_FIR_filter+1
 10611  0626  0832               	movf	FIR_filter@sum+2,w
 10612  0627  00DB               	movwf	??_FIR_filter+2
 10613  0628  0833               	movf	FIR_filter@sum+3,w
 10614  0629  00DC               	movwf	??_FIR_filter+3
 10615  062A  3003               	movlw	3
 10616  062B                     u2585:	
 10617  062B  36DC               	lsrf	??_FIR_filter+3,f
 10618  062C  0CDB               	rrf	??_FIR_filter+2,f
 10619  062D  0CDA               	rrf	??_FIR_filter+1,f
 10620  062E  0CD9               	rrf	??_FIR_filter,f
 10621  062F                     u2580:	
 10622  062F  0B89               	decfsz	9,f
 10623  0630  2E2B               	goto	u2585
 10624  0631  085A               	movf	??_FIR_filter+1,w
 10625  0632  00D8               	movwf	?_FIR_filter+1
 10626  0633  0859               	movf	??_FIR_filter,w
 10627  0634  00D7               	movwf	?_FIR_filter
 10628  0635                     l876:	
 10629  0635  0008               	return
 10630  0636                     __end_of_FIR_filter:	
 10631                           
 10632                           	psect	text74
 10633  0DE3                     __ptext74:	
 10634 ;; *************** function _ADC_GetConversion *****************
 10635 ;; Defined at:
 10636 ;;		line 110 in file "mcc_generated_files/adc.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  channel         1    wreg     enum E2939
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  channel         1    3[BANK0 ] enum E2939
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  2    0[BANK0 ] unsigned short 
 10643 ;; Registers used:
 10644 ;;		wreg, status,2, status,0
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;Total ram usage:        4 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    6
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_main
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           
 10665                           ;psect for function _ADC_GetConversion
 10666  0DE3                     _ADC_GetConversion:	
 10667                           
 10668                           ;incstack = 0
 10669                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10670                           ;ADC_GetConversion@channel stored from wreg
 10671  0DE3  0020               	movlb	0	; select bank0
 10672  0DE4  00D6               	movwf	ADC_GetConversion@channel
 10673  0DE5                     l5982:	
 10674                           
 10675                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
 10676  0DE5  0856               	movf	ADC_GetConversion@channel,w
 10677  0DE6  00D5               	movwf	??_ADC_GetConversion
 10678  0DE7  0DD5               	rlf	??_ADC_GetConversion,f
 10679  0DE8  0DD5               	rlf	??_ADC_GetConversion,f
 10680  0DE9  0021               	movlb	1	; select bank1
 10681  0DEA  081D               	movf	29,w	;volatile
 10682  0DEB  0020               	movlb	0	; select bank0
 10683  0DEC  0655               	xorwf	??_ADC_GetConversion,w
 10684  0DED  3983               	andlw	-125
 10685  0DEE  0655               	xorwf	??_ADC_GetConversion,w
 10686  0DEF  0021               	movlb	1	; select bank1
 10687  0DF0  009D               	movwf	29	;volatile
 10688  0DF1                     l5984:	
 10689                           
 10690                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
 10691  0DF1  141D               	bsf	29,0	;volatile
 10692  0DF2                     l5986:	
 10693                           
 10694                           ;mcc_generated_files/adc.c: 119:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 10695  0DF2  300D               	movlw	13
 10696  0DF3                     u4847:	
 10697  0DF3  0B89               	decfsz	9,f
 10698  0DF4  2DF3               	goto	u4847
 10699  0DF5  0000               	nop
 10700  0DF6                     l5988:	
 10701                           
 10702                           ;mcc_generated_files/adc.c: 122:     ADCON0bits.GO_nDONE = 1;
 10703  0DF6  0021               	movlb	1	; select bank1
 10704  0DF7  149D               	bsf	29,1	;volatile
 10705                           
 10706                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GO_nDONE)
 10707  0DF8  2DFA               	goto	l739
 10708  0DF9                     l740:	
 10709  0DF9  0064               	clrwdt	;# 
 10710  0DFA                     l739:	
 10711                           ;mcc_generated_files/adc.c: 128:     }
 10712                           
 10713                           
 10714                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GO_nDONE)
 10715  0DFA  0021               	movlb	1	; select bank1
 10716  0DFB  189D               	btfsc	29,1	;volatile
 10717  0DFC  2DFE               	goto	u3781
 10718  0DFD  2DFF               	goto	u3780
 10719  0DFE                     u3781:	
 10720  0DFE  2DF9               	goto	l740
 10721  0DFF                     u3780:	
 10722  0DFF                     l5990:	
 10723                           
 10724                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10725  0DFF  081C               	movf	28,w	;volatile
 10726  0E00  0020               	movlb	0	; select bank0
 10727  0E01  00D4               	movwf	?_ADC_GetConversion+1
 10728  0E02  0021               	movlb	1	; select bank1
 10729  0E03  081B               	movf	27,w	;volatile
 10730  0E04  0020               	movlb	0	; select bank0
 10731  0E05  00D3               	movwf	?_ADC_GetConversion
 10732  0E06                     l742:	
 10733  0E06  0008               	return
 10734  0E07                     __end_of_ADC_GetConversion:	
 10735                           
 10736                           	psect	intentry
 10737  0004                     __pintentry:	
 10738 ;; *************** function _INTERRUPT_InterruptManager *****************
 10739 ;; Defined at:
 10740 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;Total ram usage:        0 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:    5
 10761 ;; This function calls:
 10762 ;;		Absolute function
 10763 ;;		_PIN_MANAGER_IOC
 10764 ;;		_TMR0_ISR
 10765 ;;		_i2c_busCollisionISR
 10766 ;;		i1_i2c_ISR
 10767 ;; This function is called by:
 10768 ;;		Interrupt level 1
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772  0004                     _INTERRUPT_InterruptManager:	
 10773                           
 10774                           ;incstack = 0
 10775  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10776                           
 10777                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10778  0005  3180               	pagesel	$
 10779  0006                     i1l6260:	
 10780                           
 10781                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10782  0006  1E8B               	btfss	11,5	;volatile
 10783  0007  2809               	goto	u415_21
 10784  0008  280A               	goto	u415_20
 10785  0009                     u415_21:	
 10786  0009  2812               	goto	i1l394
 10787  000A                     u415_20:	
 10788  000A                     i1l6262:	
 10789  000A  1D0B               	btfss	11,2	;volatile
 10790  000B  280D               	goto	u416_21
 10791  000C  280E               	goto	u416_20
 10792  000D                     u416_21:	
 10793  000D  2812               	goto	i1l394
 10794  000E                     u416_20:	
 10795  000E                     i1l6264:	
 10796                           
 10797                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 10798  000E  318B  2305  3180   	fcall	_TMR0_ISR
 10799                           
 10800                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10801  0011  2842               	goto	i1l404
 10802  0012                     i1l394:	
 10803                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
 10804                           
 10805  0012  1D8B               	btfss	11,3	;volatile
 10806  0013  2815               	goto	u417_21
 10807  0014  2816               	goto	u417_20
 10808  0015                     u417_21:	
 10809  0015  281E               	goto	i1l396
 10810  0016                     u417_20:	
 10811  0016                     i1l6266:	
 10812  0016  1C0B               	btfss	11,0	;volatile
 10813  0017  2819               	goto	u418_21
 10814  0018  281A               	goto	u418_20
 10815  0019                     u418_21:	
 10816  0019  281E               	goto	i1l396
 10817  001A                     u418_20:	
 10818  001A                     i1l6268:	
 10819                           
 10820                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
 10821  001A  318B  232D  3180   	fcall	_PIN_MANAGER_IOC
 10822                           
 10823                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 10824  001D  2842               	goto	i1l404
 10825  001E                     i1l396:	
 10826                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 10827                           
 10828  001E  1F0B               	btfss	11,6	;volatile
 10829  001F  2821               	goto	u419_21
 10830  0020  2822               	goto	u419_20
 10831  0021                     u419_21:	
 10832  0021  2842               	goto	i1l403
 10833  0022                     u419_20:	
 10834  0022                     i1l6270:	
 10835                           
 10836                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
 10837  0022  0021               	movlb	1	; select bank1
 10838  0023  1D92               	btfss	18,3	;volatile
 10839  0024  2826               	goto	u420_21
 10840  0025  2827               	goto	u420_20
 10841  0026                     u420_21:	
 10842  0026  2832               	goto	i1l399
 10843  0027                     u420_20:	
 10844  0027                     i1l6272:	
 10845  0027  0020               	movlb	0	; select bank0
 10846  0028  1D92               	btfss	18,3	;volatile
 10847  0029  282B               	goto	u421_21
 10848  002A  282C               	goto	u421_20
 10849  002B                     u421_21:	
 10850  002B  2832               	goto	i1l399
 10851  002C                     u421_20:	
 10852  002C                     i1l6274:	
 10853                           
 10854                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c_driver_busCollisionISR();
 10855  002C  087B               	movf	_i2c_driver_busCollisionISR+1,w
 10856  002D  008A               	movwf	10
 10857  002E  087A               	movf	_i2c_driver_busCollisionISR,w
 10858  002F  000A               	callw
 10859  0030  3180               	pagesel	$
 10860                           
 10861                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10862  0031  2842               	goto	i1l404
 10863  0032                     i1l399:	
 10864                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
 10865                           
 10866  0032  0021               	movlb	1	; select bank1
 10867  0033  1D91               	btfss	17,3	;volatile
 10868  0034  2836               	goto	u422_21
 10869  0035  2837               	goto	u422_20
 10870  0036                     u422_21:	
 10871  0036  2842               	goto	i1l403
 10872  0037                     u422_20:	
 10873  0037                     i1l6276:	
 10874  0037  0020               	movlb	0	; select bank0
 10875  0038  1D91               	btfss	17,3	;volatile
 10876  0039  283B               	goto	u423_21
 10877  003A  283C               	goto	u423_20
 10878  003B                     u423_21:	
 10879  003B  2842               	goto	i1l403
 10880  003C                     u423_20:	
 10881  003C                     i1l6278:	
 10882                           
 10883                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c_driver_i2cISR();
 10884  003C  0845               	movf	_i2c_driver_i2cISR+1,w
 10885  003D  008A               	movwf	10
 10886  003E  0844               	movf	_i2c_driver_i2cISR,w
 10887  003F  000A               	callw
 10888  0040  3180               	pagesel	$
 10889                           
 10890                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 10891  0041  2842               	goto	i1l404
 10892  0042                     i1l403:	
 10893                           ;mcc_generated_files/interrupt_manager.c: 79:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 81:     }
 10894                           
 10895  0042                     i1l404:	
 10896  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10897  0043  0009               	retfie
 10898  0044                     __end_of_INTERRUPT_InterruptManager:	
 10899                           
 10900                           	psect	text76
 10901  0E2D                     __ptext76:	
 10902 ;; *************** function i1_i2c_ISR *****************
 10903 ;; Defined at:
 10904 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;		None
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;		None
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  1    wreg      void 
 10911 ;; Registers used:
 10912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;Total ram usage:        3 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    4
 10925 ;; This function calls:
 10926 ;;		i1_do_I2C_DO_ACK
 10927 ;;		i1_do_I2C_DO_ADDRESS_NACK
 10928 ;;		i1_do_I2C_DO_NACK_RESTART
 10929 ;;		i1_do_I2C_DO_NACK_STOP
 10930 ;;		i1_do_I2C_IDLE
 10931 ;;		i1_do_I2C_RCEN
 10932 ;;		i1_do_I2C_RESET
 10933 ;;		i1_do_I2C_RX
 10934 ;;		i1_do_I2C_SEND_ADR_READ
 10935 ;;		i1_do_I2C_SEND_ADR_WRITE
 10936 ;;		i1_do_I2C_SEND_RESTART
 10937 ;;		i1_do_I2C_SEND_RESTART_READ
 10938 ;;		i1_do_I2C_SEND_RESTART_WRITE
 10939 ;;		i1_do_I2C_SEND_STOP
 10940 ;;		i1_do_I2C_TX
 10941 ;;		i1_do_I2C_TX_EMPTY
 10942 ;;		i1_i2c_driver_isNACK
 10943 ;;		i1_mssp_clearIRQ
 10944 ;; This function is called by:
 10945 ;;		_INTERRUPT_InterruptManager
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           
 10950                           ;psect for function i1_i2c_ISR
 10951  0E2D                     i1_i2c_ISR:	
 10952  0E2D                     i1l6160:	
 10953                           ;incstack = 0
 10954                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10955                           
 10956                           
 10957                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp_clearIRQ();
 10958  0E2D  318A  225F  318E   	fcall	i1_mssp_clearIRQ
 10959  0E30                     i1l6162:	
 10960                           
 10961                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c_driver_isNACK())
 10962  0E30  0021               	movlb	1	; select bank1
 10963  0E31  1DA0               	btfss	_i2c_status^(0+128),3
 10964  0E32  2E34               	goto	u401_21
 10965  0E33  2E35               	goto	u401_20
 10966  0E34                     u401_21:	
 10967  0E34  2E41               	goto	i1l6168
 10968  0E35                     u401_20:	
 10969  0E35                     i1l6164:	
 10970  0E35  318B  230D  318E   	fcall	i1_i2c_driver_isNACK
 10971  0E38  1C03               	btfss	3,0
 10972  0E39  2E3B               	goto	u402_21
 10973  0E3A  2E3C               	goto	u402_20
 10974  0E3B                     u402_21:	
 10975  0E3B  2E41               	goto	i1l6168
 10976  0E3C                     u402_20:	
 10977  0E3C                     i1l6166:	
 10978                           
 10979                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 10980  0E3C  300F               	movlw	15
 10981  0E3D  00F3               	movwf	??i1_i2c_ISR
 10982  0E3E  0873               	movf	??i1_i2c_ISR,w
 10983  0E3F  0021               	movlb	1	; select bank1
 10984  0E40  00A9               	movwf	(_i2c_status^(0+128)+9)
 10985  0E41                     i1l6168:	
 10986                           
 10987                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 10988  0E41  0021               	movlb	1	; select bank1
 10989  0E42  0829               	movf	(_i2c_status^(0+128)+9),w
 10990  0E43  00F3               	movwf	??i1_i2c_ISR
 10991  0E44  01F4               	clrf	??i1_i2c_ISR+1
 10992  0E45  35F3               	lslf	??i1_i2c_ISR,f
 10993  0E46  0DF4               	rlf	??i1_i2c_ISR+1,f
 10994  0E47  3000               	movlw	low (_fsmStateTable| (0+32768))
 10995  0E48  0773               	addwf	??i1_i2c_ISR,w
 10996  0E49  0084               	movwf	4
 10997  0E4A  3090               	movlw	high (_fsmStateTable| (0+32768))
 10998  0E4B  3D74               	addwfc	??i1_i2c_ISR+1,w
 10999  0E4C  0085               	movwf	5
 11000  0E4D  3F01               	moviw [1]fsr0
 11001  0E4E  008A               	movwf	10
 11002  0E4F  3F00               	moviw [0]fsr0
 11003  0E50  000A               	callw
 11004  0E51  318E               	pagesel	$
 11005  0E52  00F5               	movwf	??i1_i2c_ISR+2
 11006  0E53  0875               	movf	??i1_i2c_ISR+2,w
 11007  0E54  0021               	movlb	1	; select bank1
 11008  0E55  00A9               	movwf	(_i2c_status^(0+128)+9)
 11009  0E56                     i1l198:	
 11010  0E56  0008               	return
 11011  0E57                     __end_ofi1_i2c_ISR:	
 11012                           
 11013                           	psect	text77
 11014  0A5F                     __ptext77:	
 11015 ;; *************** function i1_mssp_clearIRQ *****************
 11016 ;; Defined at:
 11017 ;;		line 54 in file "mcc_generated_files/i2c_driver.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;		None
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;		None
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		None
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;Total ram usage:        0 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		i1_i2c_ISR
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           
 11045                           ;psect for function i1_mssp_clearIRQ
 11046  0A5F                     i1_mssp_clearIRQ:	
 11047  0A5F                     i1l4458:	
 11048                           ;incstack = 0
 11049                           ; Regs used in i1_mssp_clearIRQ: []
 11050                           
 11051                           
 11052                           ;mcc_generated_files/i2c_driver.c: 56:         SSPCON1 = 0x28;
 11053  0A5F  0020               	movlb	0	; select bank0
 11054  0A60  1191               	bcf	17,3	;volatile
 11055  0A61                     i1l597:	
 11056  0A61  0008               	return
 11057  0A62                     __end_ofi1_mssp_clearIRQ:	
 11058                           
 11059                           	psect	text78
 11060  05A2                     __ptext78:	
 11061 ;; *************** function i1_do_I2C_RX *****************
 11062 ;; Defined at:
 11063 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      enum E3411
 11070 ;; Registers used:
 11071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;Total ram usage:        3 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    3
 11084 ;; This function calls:
 11085 ;;		Absolute function
 11086 ;;		i1_do_I2C_DO_NACK_RESTART
 11087 ;;		i1_do_I2C_DO_NACK_STOP
 11088 ;;		i1_i2c_driver_getRXData
 11089 ;;		i1_i2c_driver_sendACK
 11090 ;;		i1_i2c_restartWrite
 11091 ;;		i1_rd1RegCompleteHandler
 11092 ;;		i1_rd2RegCompleteHandler
 11093 ;;		i1_rdBlkRegCompleteHandler
 11094 ;;		i1_returnReset
 11095 ;;		i1_returnStop
 11096 ;;		i1_wr1RegCompleteHandler
 11097 ;;		i1_wr2RegCompleteHandler
 11098 ;; This function is called by:
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           
 11103                           ;psect for function i1_do_I2C_RX
 11104  05A2                     i1_do_I2C_RX:	
 11105  05A2                     i1l5918:	
 11106                           ;incstack = 0
 11107                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11108                           
 11109                           
 11110                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c_driver_
      +                          getRXData();
 11111  05A2  318A  2259  3185   	fcall	i1_i2c_driver_getRXData
 11112  05A5  00F0               	movwf	??i1_do_I2C_RX
 11113  05A6  0021               	movlb	1	; select bank1
 11114  05A7  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 11115  05A8  0086               	movwf	6
 11116  05A9  0187               	clrf	7
 11117  05AA  0870               	movf	??i1_do_I2C_RX,w
 11118  05AB  0081               	movwf	1
 11119  05AC                     i1l5920:	
 11120  05AC  3001               	movlw	1
 11121  05AD  00F0               	movwf	??i1_do_I2C_RX
 11122  05AE  0870               	movf	??i1_do_I2C_RX,w
 11123  05AF  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 11124  05B0                     i1l5922:	
 11125                           
 11126                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 11127  05B0  3001               	movlw	1
 11128  05B1  02A3               	subwf	(_i2c_status^(0+128)+3),f
 11129  05B2  3000               	movlw	0
 11130  05B3  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 11131  05B4  0823               	movf	(_i2c_status^(0+128)+3),w
 11132  05B5  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 11133  05B6  1903               	btfsc	3,2
 11134  05B7  2DB9               	goto	u377_21
 11135  05B8  2DBA               	goto	u377_20
 11136  05B9                     u377_21:	
 11137  05B9  2DBF               	goto	i1l173
 11138  05BA                     u377_20:	
 11139  05BA                     i1l5924:	
 11140                           
 11141                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c_driver_sendACK();
 11142  05BA  318A  227E  3185   	fcall	i1_i2c_driver_sendACK
 11143  05BD                     i1l5926:	
 11144                           
 11145                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 11146  05BD  3005               	movlw	5
 11147  05BE  2DEC               	goto	i1l174
 11148  05BF                     i1l173:	
 11149                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 11150                           
 11151                           
 11152                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 11153  05BF  1520               	bsf	_i2c_status^(0+128),2
 11154                           
 11155                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 11156  05C0  2DC9               	goto	i1l5942
 11157  05C1                     i1l5932:	
 11158                           
 11159                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 11160  05C1  318A  22BE  3185   	fcall	i1_do_I2C_DO_NACK_RESTART
 11161  05C4  2DEC               	goto	i1l174
 11162  05C5                     i1l5936:	
 11163                           
 11164                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 11165  05C5  318A  22B9  3185   	fcall	i1_do_I2C_DO_NACK_STOP
 11166  05C8  2DEC               	goto	i1l174
 11167  05C9                     i1l5942:	
 11168  05C9  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 11169  05CA  00F0               	movwf	??i1_do_I2C_RX
 11170  05CB  0870               	movf	??i1_do_I2C_RX,w
 11171  05CC  0020               	movlb	0	; select bank0
 11172  05CD  00D4               	movwf	i1wr1RegCompleteHandler@p
 11173  05CE  300B               	movlw	11
 11174  05CF  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 11175  05D0  0086               	movwf	6
 11176  05D1  0187               	clrf	7
 11177  05D2  3F41               	moviw [1]fsr1
 11178  05D3  008A               	movwf	10
 11179  05D4  3F40               	moviw [0]fsr1
 11180  05D5  000A               	callw
 11181  05D6  3185               	pagesel	$
 11182  05D7  00F1               	movwf	??i1_do_I2C_RX+1
 11183  05D8  01F2               	clrf	??i1_do_I2C_RX+2
 11184                           
 11185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11186                           ; Switch size 1, requested type "simple"
 11187                           ; Number of cases is 1, Range of values is 0 to 0
 11188                           ; switch strategies available:
 11189                           ; Name         Instructions Cycles
 11190                           ; simple_byte            4     3 (average)
 11191                           ; direct_byte            8     6 (fixed)
 11192                           ; jumptable            260     6 (fixed)
 11193                           ;	Chosen strategy is simple_byte
 11194  05D9  0872               	movf	??i1_do_I2C_RX+2,w
 11195  05DA  3A00               	xorlw	0	; case 0
 11196  05DB  1903               	skipnz
 11197  05DC  2DDE               	goto	i1l6758
 11198  05DD  2DC5               	goto	i1l5936
 11199  05DE                     i1l6758:	
 11200                           
 11201                           ; Switch size 1, requested type "simple"
 11202                           ; Number of cases is 4, Range of values is 1 to 4
 11203                           ; switch strategies available:
 11204                           ; Name         Instructions Cycles
 11205                           ; simple_byte           13     7 (average)
 11206                           ; direct_byte           17     9 (fixed)
 11207                           ; jumptable            263     9 (fixed)
 11208                           ;	Chosen strategy is simple_byte
 11209  05DE  0871               	movf	??i1_do_I2C_RX+1,w
 11210  05DF  3A01               	xorlw	1	; case 1
 11211  05E0  1903               	skipnz
 11212  05E1  2DC5               	goto	i1l5936
 11213  05E2  3A03               	xorlw	3	; case 2
 11214  05E3  1903               	skipnz
 11215  05E4  2DC1               	goto	i1l5932
 11216  05E5  3A01               	xorlw	1	; case 3
 11217  05E6  1903               	skipnz
 11218  05E7  2DC1               	goto	i1l5932
 11219  05E8  3A07               	xorlw	7	; case 4
 11220  05E9  1903               	skipnz
 11221  05EA  2DC5               	goto	i1l5936
 11222  05EB  2DC5               	goto	i1l5936
 11223  05EC                     i1l174:	
 11224  05EC  0008               	return
 11225  05ED                     __end_ofi1_do_I2C_RX:	
 11226                           
 11227                           	psect	text79
 11228  04A9                     __ptext79:	
 11229 ;; *************** function i1_do_I2C_TX *****************
 11230 ;; Defined at:
 11231 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;		None
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      enum E3411
 11238 ;; Registers used:
 11239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;Total ram usage:        3 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    3
 11252 ;; This function calls:
 11253 ;;		Absolute function
 11254 ;;		i1_do_I2C_SEND_RESTART_READ
 11255 ;;		i1_do_I2C_SEND_RESTART_WRITE
 11256 ;;		i1_do_I2C_SEND_STOP
 11257 ;;		i1_i2c_driver_TXData
 11258 ;;		i1_i2c_driver_isNACK
 11259 ;;		i1_i2c_restartWrite
 11260 ;;		i1_rd1RegCompleteHandler
 11261 ;;		i1_rd2RegCompleteHandler
 11262 ;;		i1_rdBlkRegCompleteHandler
 11263 ;;		i1_returnReset
 11264 ;;		i1_returnStop
 11265 ;;		i1_wr1RegCompleteHandler
 11266 ;;		i1_wr2RegCompleteHandler
 11267 ;; This function is called by:
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           
 11272                           ;psect for function i1_do_I2C_TX
 11273  04A9                     i1_do_I2C_TX:	
 11274  04A9                     i1l5884:	
 11275                           ;incstack = 0
 11276                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11277                           
 11278                           
 11279                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c_driver_isNACK())
 11280  04A9  318B  230D  3184   	fcall	i1_i2c_driver_isNACK
 11281  04AC  1C03               	btfss	3,0
 11282  04AD  2CAF               	goto	u375_21
 11283  04AE  2CB0               	goto	u375_20
 11284  04AF                     u375_21:	
 11285  04AF  2CE1               	goto	i1l157
 11286  04B0                     u375_20:	
 11287  04B0  2CBD               	goto	i1l5902
 11288  04B1                     i1l5888:	
 11289                           
 11290                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 11291  04B1  318A  22A0  3184   	fcall	i1_do_I2C_SEND_RESTART_READ
 11292  04B4  2CFD               	goto	i1l160
 11293  04B5                     i1l5892:	
 11294                           
 11295                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 11296  04B5  318A  22A5  3184   	fcall	i1_do_I2C_SEND_RESTART_WRITE
 11297  04B8  2CFD               	goto	i1l160
 11298  04B9                     i1l5896:	
 11299                           
 11300                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 11301  04B9  318A  22AF  3184   	fcall	i1_do_I2C_SEND_STOP
 11302  04BC  2CFD               	goto	i1l160
 11303  04BD                     i1l5902:	
 11304  04BD  0021               	movlb	1	; select bank1
 11305  04BE  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 11306  04BF  00F0               	movwf	??i1_do_I2C_TX
 11307  04C0  0870               	movf	??i1_do_I2C_TX,w
 11308  04C1  0020               	movlb	0	; select bank0
 11309  04C2  00D4               	movwf	i1wr1RegCompleteHandler@p
 11310  04C3  3011               	movlw	17
 11311  04C4  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 11312  04C5  0086               	movwf	6
 11313  04C6  0187               	clrf	7
 11314  04C7  3F41               	moviw [1]fsr1
 11315  04C8  008A               	movwf	10
 11316  04C9  3F40               	moviw [0]fsr1
 11317  04CA  000A               	callw
 11318  04CB  3184               	pagesel	$
 11319  04CC  00F1               	movwf	??i1_do_I2C_TX+1
 11320  04CD  01F2               	clrf	??i1_do_I2C_TX+2
 11321                           
 11322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11323                           ; Switch size 1, requested type "simple"
 11324                           ; Number of cases is 1, Range of values is 0 to 0
 11325                           ; switch strategies available:
 11326                           ; Name         Instructions Cycles
 11327                           ; simple_byte            4     3 (average)
 11328                           ; direct_byte            8     6 (fixed)
 11329                           ; jumptable            260     6 (fixed)
 11330                           ;	Chosen strategy is simple_byte
 11331  04CE  0872               	movf	??i1_do_I2C_TX+2,w
 11332  04CF  3A00               	xorlw	0	; case 0
 11333  04D0  1903               	skipnz
 11334  04D1  2CD3               	goto	i1l6760
 11335  04D2  2CB9               	goto	i1l5896
 11336  04D3                     i1l6760:	
 11337                           
 11338                           ; Switch size 1, requested type "simple"
 11339                           ; Number of cases is 4, Range of values is 1 to 4
 11340                           ; switch strategies available:
 11341                           ; Name         Instructions Cycles
 11342                           ; simple_byte           13     7 (average)
 11343                           ; direct_byte           17     9 (fixed)
 11344                           ; jumptable            263     9 (fixed)
 11345                           ;	Chosen strategy is simple_byte
 11346  04D3  0871               	movf	??i1_do_I2C_TX+1,w
 11347  04D4  3A01               	xorlw	1	; case 1
 11348  04D5  1903               	skipnz
 11349  04D6  2CB9               	goto	i1l5896
 11350  04D7  3A03               	xorlw	3	; case 2
 11351  04D8  1903               	skipnz
 11352  04D9  2CB1               	goto	i1l5888
 11353  04DA  3A01               	xorlw	1	; case 3
 11354  04DB  1903               	skipnz
 11355  04DC  2CB5               	goto	i1l5892
 11356  04DD  3A07               	xorlw	7	; case 4
 11357  04DE  1903               	skipnz
 11358  04DF  2CB9               	goto	i1l5896
 11359  04E0  2CB9               	goto	i1l5896
 11360  04E1                     i1l157:	
 11361                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 11362                           
 11363                           
 11364                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 11365  04E1  0021               	movlb	1	; select bank1
 11366  04E2  11A0               	bcf	_i2c_status^(0+128),3
 11367  04E3                     i1l5904:	
 11368                           
 11369                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c_driver_TXData(*i2c_status.da
      +                          ta_ptr++);
 11370  04E3  3002               	movlw	2
 11371  04E4  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 11372  04E5  0086               	movwf	6
 11373  04E6  0187               	clrf	7
 11374  04E7  3F40               	moviw [0]fsr1
 11375  04E8  0084               	movwf	4
 11376  04E9  0185               	clrf	5
 11377  04EA  0A81               	incf	1,f
 11378  04EB  0800               	movf	0,w
 11379  04EC  318A  2296  3184   	fcall	i1_i2c_driver_TXData
 11380  04EF                     i1l5906:	
 11381                           
 11382                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 11383  04EF  3001               	movlw	1
 11384  04F0  0021               	movlb	1	; select bank1
 11385  04F1  02A3               	subwf	(_i2c_status^(0+128)+3),f
 11386  04F2  3000               	movlw	0
 11387  04F3  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 11388  04F4  0823               	movf	(_i2c_status^(0+128)+3),w
 11389  04F5  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 11390  04F6  1D03               	btfss	3,2
 11391  04F7  2CF9               	goto	u376_21
 11392  04F8  2CFA               	goto	u376_20
 11393  04F9                     u376_21:	
 11394  04F9  2CFC               	goto	i1l5910
 11395  04FA                     u376_20:	
 11396  04FA                     i1l5908:	
 11397  04FA  3006               	movlw	6
 11398  04FB  2CFD               	goto	i1l160
 11399  04FC                     i1l5910:	
 11400  04FC  3003               	movlw	3
 11401  04FD                     i1l160:	
 11402  04FD  0008               	return
 11403  04FE                     __end_ofi1_do_I2C_TX:	
 11404                           
 11405                           	psect	text80
 11406  0EAB                     __ptext80:	
 11407 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 11408 ;; Defined at:
 11409 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;		None
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      enum E3411
 11416 ;; Registers used:
 11417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;Total ram usage:        3 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; Hardware stack levels required when called:    3
 11430 ;; This function calls:
 11431 ;;		Absolute function
 11432 ;;		i1_do_I2C_SEND_RESTART
 11433 ;;		i1_do_I2C_SEND_STOP
 11434 ;;		i1_i2c_restartWrite
 11435 ;;		i1_rd1RegCompleteHandler
 11436 ;;		i1_rd2RegCompleteHandler
 11437 ;;		i1_rdBlkRegCompleteHandler
 11438 ;;		i1_returnReset
 11439 ;;		i1_returnStop
 11440 ;;		i1_wr1RegCompleteHandler
 11441 ;;		i1_wr2RegCompleteHandler
 11442 ;; This function is called by:
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           
 11447                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 11448  0EAB                     i1_do_I2C_DO_ADDRESS_NACK:	
 11449  0EAB                     i1l5862:	
 11450                           ;incstack = 0
 11451                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11452                           
 11453                           
 11454                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 11455  0EAB  0021               	movlb	1	; select bank1
 11456  0EAC  11A0               	bcf	_i2c_status^(0+128),3
 11457  0EAD                     i1l5864:	
 11458                           
 11459                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 11460  0EAD  3002               	movlw	2
 11461  0EAE  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 11462  0EAF  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 11463  0EB0  00AA               	movwf	(_i2c_status^(0+128)+10)
 11464                           
 11465                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 11466  0EB1  2EBA               	goto	i1l5876
 11467  0EB2                     i1l5866:	
 11468                           
 11469                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 11470  0EB2  318A  22AA  318E   	fcall	i1_do_I2C_SEND_RESTART
 11471  0EB5  2ED7               	goto	i1l152
 11472  0EB6                     i1l5870:	
 11473                           
 11474                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 11475  0EB6  318A  22AF  318E   	fcall	i1_do_I2C_SEND_STOP
 11476  0EB9  2ED7               	goto	i1l152
 11477  0EBA                     i1l5876:	
 11478  0EBA  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 11479  0EBB  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 11480  0EBC  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 11481  0EBD  0020               	movlb	0	; select bank0
 11482  0EBE  00D4               	movwf	i1wr1RegCompleteHandler@p
 11483  0EBF  300F               	movlw	15
 11484  0EC0  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 11485  0EC1  0086               	movwf	6
 11486  0EC2  0187               	clrf	7
 11487  0EC3  3F41               	moviw [1]fsr1
 11488  0EC4  008A               	movwf	10
 11489  0EC5  3F40               	moviw [0]fsr1
 11490  0EC6  000A               	callw
 11491  0EC7  318E               	pagesel	$
 11492  0EC8  00F1               	movwf	??i1_do_I2C_DO_ADDRESS_NACK+1
 11493  0EC9  01F2               	clrf	??i1_do_I2C_DO_ADDRESS_NACK+2
 11494                           
 11495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11496                           ; Switch size 1, requested type "simple"
 11497                           ; Number of cases is 1, Range of values is 0 to 0
 11498                           ; switch strategies available:
 11499                           ; Name         Instructions Cycles
 11500                           ; simple_byte            4     3 (average)
 11501                           ; direct_byte            8     6 (fixed)
 11502                           ; jumptable            260     6 (fixed)
 11503                           ;	Chosen strategy is simple_byte
 11504  0ECA  0872               	movf	??i1_do_I2C_DO_ADDRESS_NACK+2,w
 11505  0ECB  3A00               	xorlw	0	; case 0
 11506  0ECC  1903               	skipnz
 11507  0ECD  2ECF               	goto	i1l6762
 11508  0ECE  2EB6               	goto	i1l5870
 11509  0ECF                     i1l6762:	
 11510                           
 11511                           ; Switch size 1, requested type "simple"
 11512                           ; Number of cases is 2, Range of values is 2 to 3
 11513                           ; switch strategies available:
 11514                           ; Name         Instructions Cycles
 11515                           ; simple_byte            7     4 (average)
 11516                           ; direct_byte           13     9 (fixed)
 11517                           ; jumptable            263     9 (fixed)
 11518                           ;	Chosen strategy is simple_byte
 11519  0ECF  0871               	movf	??i1_do_I2C_DO_ADDRESS_NACK+1,w
 11520  0ED0  3A02               	xorlw	2	; case 2
 11521  0ED1  1903               	skipnz
 11522  0ED2  2EB2               	goto	i1l5866
 11523  0ED3  3A01               	xorlw	1	; case 3
 11524  0ED4  1903               	skipnz
 11525  0ED5  2EB2               	goto	i1l5866
 11526  0ED6  2EB6               	goto	i1l5870
 11527  0ED7                     i1l152:	
 11528  0ED7  0008               	return
 11529  0ED8                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 11530                           
 11531                           	psect	text81
 11532  0ABE                     __ptext81:	
 11533 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 11534 ;; Defined at:
 11535 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;		None
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;		None
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  1    wreg      enum E3411
 11542 ;; Registers used:
 11543 ;;		wreg, status,2, status,0, pclath, cstack
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;Total ram usage:        0 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    1
 11556 ;; This function calls:
 11557 ;;		i1_i2c_driver_sendNACK
 11558 ;; This function is called by:
 11559 ;;		i1_do_I2C_RX
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           
 11564                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 11565  0ABE                     i1_do_I2C_DO_NACK_RESTART:	
 11566  0ABE                     i1l4076:	
 11567                           ;incstack = 0
 11568                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11569                           
 11570                           
 11571                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c_driver_sendNACK();
 11572  0ABE  318A  2282  318A   	fcall	i1_i2c_driver_sendNACK
 11573  0AC1                     i1l4078:	
 11574                           
 11575                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 11576  0AC1  3009               	movlw	9
 11577  0AC2                     i1l146:	
 11578  0AC2  0008               	return
 11579  0AC3                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 11580                           
 11581                           	psect	text82
 11582  0AB9                     __ptext82:	
 11583 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 11584 ;; Defined at:
 11585 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;		None
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      enum E3411
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0, pclath, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;Total ram usage:        0 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    1
 11606 ;; This function calls:
 11607 ;;		i1_i2c_driver_sendNACK
 11608 ;; This function is called by:
 11609 ;;		i1_do_I2C_RX
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           
 11614                           ;psect for function i1_do_I2C_DO_NACK_STOP
 11615  0AB9                     i1_do_I2C_DO_NACK_STOP:	
 11616  0AB9                     i1l4070:	
 11617                           ;incstack = 0
 11618                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11619                           
 11620                           
 11621                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c_driver_sendNACK();
 11622  0AB9  318A  2282  318A   	fcall	i1_i2c_driver_sendNACK
 11623  0ABC                     i1l4072:	
 11624                           
 11625                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 11626  0ABC  300A               	movlw	10
 11627  0ABD                     i1l143:	
 11628  0ABD  0008               	return
 11629  0ABE                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 11630                           
 11631                           	psect	text83
 11632  0AB4                     __ptext83:	
 11633 ;; *************** function i1_do_I2C_DO_ACK *****************
 11634 ;; Defined at:
 11635 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;		None
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;		None
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      enum E3411
 11642 ;; Registers used:
 11643 ;;		wreg, status,2, status,0, pclath, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;Total ram usage:        0 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:    1
 11656 ;; This function calls:
 11657 ;;		i1_i2c_driver_sendACK
 11658 ;; This function is called by:
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           
 11663                           ;psect for function i1_do_I2C_DO_ACK
 11664  0AB4                     i1_do_I2C_DO_ACK:	
 11665  0AB4                     i1l4338:	
 11666                           ;incstack = 0
 11667                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 11668                           
 11669                           
 11670                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c_driver_sendACK();
 11671  0AB4  318A  227E  318A   	fcall	i1_i2c_driver_sendACK
 11672  0AB7                     i1l4340:	
 11673                           
 11674                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 11675  0AB7  3005               	movlw	5
 11676  0AB8                     i1l140:	
 11677  0AB8  0008               	return
 11678  0AB9                     __end_ofi1_do_I2C_DO_ACK:	
 11679                           
 11680                           	psect	text84
 11681  0AFE                     __ptext84:	
 11682 ;; *************** function i1_do_I2C_RCEN *****************
 11683 ;; Defined at:
 11684 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      enum E3411
 11691 ;; Registers used:
 11692 ;;		wreg, status,2, status,0, pclath, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;Total ram usage:        0 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    1
 11705 ;; This function calls:
 11706 ;;		i1_i2c_driver_startRX
 11707 ;; This function is called by:
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function i1_do_I2C_RCEN
 11713  0AFE                     i1_do_I2C_RCEN:	
 11714  0AFE                     i1l4330:	
 11715                           ;incstack = 0
 11716                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11717                           
 11718                           
 11719                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 11720  0AFE  0021               	movlb	1	; select bank1
 11721  0AFF  11A0               	bcf	_i2c_status^(0+128),3
 11722  0B00                     i1l4332:	
 11723                           
 11724                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c_driver_startRX();
 11725  0B00  318A  2256  318A   	fcall	i1_i2c_driver_startRX
 11726  0B03                     i1l4334:	
 11727                           
 11728                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 11729  0B03  3004               	movlw	4
 11730  0B04                     i1l137:	
 11731  0B04  0008               	return
 11732  0B05                     __end_ofi1_do_I2C_RCEN:	
 11733                           
 11734                           	psect	text85
 11735  0B1D                     __ptext85:	
 11736 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 11737 ;; Defined at:
 11738 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1    wreg      enum E3411
 11745 ;; Registers used:
 11746 ;;		wreg, status,2, status,0, pclath, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;Total ram usage:        0 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    1
 11759 ;; This function calls:
 11760 ;;		i1_i2c_driver_TXData
 11761 ;; This function is called by:
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           
 11766                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 11767  0B1D                     i1_do_I2C_SEND_ADR_WRITE:	
 11768  0B1D                     i1l4322:	
 11769                           ;incstack = 0
 11770                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11771                           
 11772                           
 11773                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 11774  0B1D  0021               	movlb	1	; select bank1
 11775  0B1E  15A0               	bsf	_i2c_status^(0+128),3
 11776  0B1F                     i1l4324:	
 11777                           
 11778                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c_driver_TXData(i2c_status.address
      +                           << 1);
 11779  0B1F  3521               	lslf	(_i2c_status^(0+128)+1),w
 11780  0B20  318A  2296  318B   	fcall	i1_i2c_driver_TXData
 11781  0B23                     i1l4326:	
 11782                           
 11783                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 11784  0B23  3003               	movlw	3
 11785  0B24                     i1l134:	
 11786  0B24  0008               	return
 11787  0B25                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 11788                           
 11789                           	psect	text86
 11790  0B36                     __ptext86:	
 11791 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 11792 ;; Defined at:
 11793 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;		None
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;		None
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  1    wreg      enum E3411
 11800 ;; Registers used:
 11801 ;;		wreg, status,2, status,0, pclath, cstack
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/0
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;Total ram usage:        0 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:    1
 11814 ;; This function calls:
 11815 ;;		i1_i2c_driver_TXData
 11816 ;; This function is called by:
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           
 11821                           ;psect for function i1_do_I2C_SEND_ADR_READ
 11822  0B36                     i1_do_I2C_SEND_ADR_READ:	
 11823  0B36                     i1l4314:	
 11824                           ;incstack = 0
 11825                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 11826                           
 11827                           
 11828                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 11829  0B36  0021               	movlb	1	; select bank1
 11830  0B37  15A0               	bsf	_i2c_status^(0+128),3
 11831  0B38                     i1l4316:	
 11832                           
 11833                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c_driver_TXData(i2c_status.address
      +                           << 1 | 1);
 11834  0B38  1403               	setc
 11835  0B39  0D21               	rlf	(_i2c_status^(0+128)+1),w
 11836  0B3A  318A  2296  318B   	fcall	i1_i2c_driver_TXData
 11837  0B3D                     i1l4318:	
 11838                           
 11839                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 11840  0B3D  3005               	movlw	5
 11841  0B3E                     i1l131:	
 11842  0B3E  0008               	return
 11843  0B3F                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 11844                           
 11845                           	psect	text87
 11846  0AAF                     __ptext87:	
 11847 ;; *************** function i1_do_I2C_SEND_STOP *****************
 11848 ;; Defined at:
 11849 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;		None
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;		None
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  1    wreg      enum E3411
 11856 ;; Registers used:
 11857 ;;		wreg, status,2, status,0, pclath, cstack
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;Total ram usage:        0 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:    1
 11870 ;; This function calls:
 11871 ;;		i1_i2c_driver_stop
 11872 ;; This function is called by:
 11873 ;;		i1_do_I2C_DO_ADDRESS_NACK
 11874 ;;		i1_do_I2C_TX
 11875 ;;		i1_do_I2C_TX_EMPTY
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           
 11880                           ;psect for function i1_do_I2C_SEND_STOP
 11881  0AAF                     i1_do_I2C_SEND_STOP:	
 11882  0AAF                     i1l4064:	
 11883                           ;incstack = 0
 11884                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11885                           
 11886                           
 11887                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c_driver_stop();
 11888  0AAF  318A  2253  318A   	fcall	i1_i2c_driver_stop
 11889  0AB2                     i1l4066:	
 11890                           
 11891                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 11892  0AB2  3000               	movlw	0
 11893  0AB3                     i1l128:	
 11894  0AB3  0008               	return
 11895  0AB4                     __end_ofi1_do_I2C_SEND_STOP:	
 11896                           
 11897                           	psect	text88
 11898  0AAA                     __ptext88:	
 11899 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 11900 ;; Defined at:
 11901 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;		None
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;                  1    wreg      enum E3411
 11908 ;; Registers used:
 11909 ;;		wreg, status,2, status,0, pclath, cstack
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;Total ram usage:        0 bytes
 11920 ;; Hardware stack levels used:    1
 11921 ;; Hardware stack levels required when called:    1
 11922 ;; This function calls:
 11923 ;;		i1_i2c_driver_restart
 11924 ;; This function is called by:
 11925 ;;		i1_do_I2C_DO_ADDRESS_NACK
 11926 ;;		i1_do_I2C_TX_EMPTY
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           
 11931                           ;psect for function i1_do_I2C_SEND_RESTART
 11932  0AAA                     i1_do_I2C_SEND_RESTART:	
 11933  0AAA                     i1l4058:	
 11934                           ;incstack = 0
 11935                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11936                           
 11937                           
 11938                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c_driver_restart();
 11939  0AAA  318A  2250  318A   	fcall	i1_i2c_driver_restart
 11940  0AAD                     i1l4060:	
 11941                           
 11942                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 11943  0AAD  3001               	movlw	1
 11944  0AAE                     i1l125:	
 11945  0AAE  0008               	return
 11946  0AAF                     __end_ofi1_do_I2C_SEND_RESTART:	
 11947                           
 11948                           	psect	text89
 11949  0AA5                     __ptext89:	
 11950 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 11951 ;; Defined at:
 11952 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;		None
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;		None
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  1    wreg      enum E3411
 11959 ;; Registers used:
 11960 ;;		wreg, status,2, status,0, pclath, cstack
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;Total ram usage:        0 bytes
 11971 ;; Hardware stack levels used:    1
 11972 ;; Hardware stack levels required when called:    1
 11973 ;; This function calls:
 11974 ;;		i1_i2c_driver_restart
 11975 ;; This function is called by:
 11976 ;;		i1_do_I2C_TX
 11977 ;; This function uses a non-reentrant model
 11978 ;;
 11979                           
 11980                           
 11981                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 11982  0AA5                     i1_do_I2C_SEND_RESTART_WRITE:	
 11983  0AA5                     i1l4052:	
 11984                           ;incstack = 0
 11985                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11986                           
 11987                           
 11988                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c_driver_restart();
 11989  0AA5  318A  2250  318A   	fcall	i1_i2c_driver_restart
 11990  0AA8                     i1l4054:	
 11991                           
 11992                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 11993  0AA8  3002               	movlw	2
 11994  0AA9                     i1l122:	
 11995  0AA9  0008               	return
 11996  0AAA                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 11997                           
 11998                           	psect	text90
 11999  0AA0                     __ptext90:	
 12000 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 12001 ;; Defined at:
 12002 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;		None
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;		None
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      enum E3411
 12009 ;; Registers used:
 12010 ;;		wreg, status,2, status,0, pclath, cstack
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;Total ram usage:        0 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:    1
 12023 ;; This function calls:
 12024 ;;		i1_i2c_driver_restart
 12025 ;; This function is called by:
 12026 ;;		i1_do_I2C_TX
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           
 12031                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 12032  0AA0                     i1_do_I2C_SEND_RESTART_READ:	
 12033  0AA0                     i1l4046:	
 12034                           ;incstack = 0
 12035                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 12036                           
 12037                           
 12038                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c_driver_restart();
 12039  0AA0  318A  2250  318A   	fcall	i1_i2c_driver_restart
 12040  0AA3                     i1l4048:	
 12041                           
 12042                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 12043  0AA3  3001               	movlw	1
 12044  0AA4                     i1l119:	
 12045  0AA4  0008               	return
 12046  0AA5                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 12047                           
 12048                           	psect	text91
 12049  0A9B                     __ptext91:	
 12050 ;; *************** function i1_do_I2C_IDLE *****************
 12051 ;; Defined at:
 12052 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;		None
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  1    wreg      enum E3411
 12059 ;; Registers used:
 12060 ;;		wreg, status,2
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;Total ram usage:        0 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; This function calls:
 12073 ;;		Nothing
 12074 ;; This function is called by:
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           
 12079                           ;psect for function i1_do_I2C_IDLE
 12080  0A9B                     i1_do_I2C_IDLE:	
 12081  0A9B                     i1l4306:	
 12082                           ;incstack = 0
 12083                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 12084                           
 12085                           
 12086                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 12087  0A9B  0021               	movlb	1	; select bank1
 12088  0A9C  1020               	bcf	_i2c_status^(0+128),0
 12089  0A9D                     i1l4308:	
 12090                           
 12091                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 12092  0A9D  01AA               	clrf	(_i2c_status^(0+128)+10)
 12093  0A9E                     i1l4310:	
 12094                           
 12095                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 12096  0A9E  300E               	movlw	14
 12097  0A9F                     i1l116:	
 12098  0A9F  0008               	return
 12099  0AA0                     __end_ofi1_do_I2C_IDLE:	
 12100                           
 12101                           	psect	text92
 12102  0B15                     __ptext92:	
 12103 ;; *************** function i1_do_I2C_RESET *****************
 12104 ;; Defined at:
 12105 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      enum E3411
 12112 ;; Registers used:
 12113 ;;		wreg, status,2, status,0, pclath, cstack
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; Hardware stack levels required when called:    1
 12126 ;; This function calls:
 12127 ;;		i1_i2c_driver_resetBus
 12128 ;; This function is called by:
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           
 12133                           ;psect for function i1_do_I2C_RESET
 12134  0B15                     i1_do_I2C_RESET:	
 12135  0B15                     i1l4296:	
 12136                           ;incstack = 0
 12137                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 12138                           
 12139                           
 12140                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c_driver_resetBus();
 12141  0B15  318A  2247  318B   	fcall	i1_i2c_driver_resetBus
 12142  0B18                     i1l4298:	
 12143                           
 12144                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 12145  0B18  0021               	movlb	1	; select bank1
 12146  0B19  1020               	bcf	_i2c_status^(0+128),0
 12147  0B1A                     i1l4300:	
 12148                           
 12149                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 12150  0B1A  01AA               	clrf	(_i2c_status^(0+128)+10)
 12151  0B1B                     i1l4302:	
 12152                           
 12153                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 12154  0B1B  300E               	movlw	14
 12155  0B1C                     i1l113:	
 12156  0B1C  0008               	return
 12157  0B1D                     __end_ofi1_do_I2C_RESET:	
 12158                           
 12159                           	psect	text93
 12160  0F64                     __ptext93:	
 12161 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 12162 ;; Defined at:
 12163 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;		None
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;		None
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      enum E3411
 12170 ;; Registers used:
 12171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;Total ram usage:        3 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; Hardware stack levels required when called:    3
 12184 ;; This function calls:
 12185 ;;		Absolute function
 12186 ;;		i1_do_I2C_SEND_RESTART
 12187 ;;		i1_do_I2C_SEND_STOP
 12188 ;;		i1_i2c_restartWrite
 12189 ;;		i1_mssp_setIRQ
 12190 ;;		i1_rd1RegCompleteHandler
 12191 ;;		i1_rd2RegCompleteHandler
 12192 ;;		i1_rdBlkRegCompleteHandler
 12193 ;;		i1_returnReset
 12194 ;;		i1_returnStop
 12195 ;;		i1_wr1RegCompleteHandler
 12196 ;;		i1_wr2RegCompleteHandler
 12197 ;; This function is called by:
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           
 12202                           ;psect for function i1_do_I2C_TX_EMPTY
 12203  0F64                     i1_do_I2C_TX_EMPTY:	
 12204  0F64                     i1l5950:	
 12205                           ;incstack = 0
 12206                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12207                           
 12208                           
 12209                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 12210  0F64  0021               	movlb	1	; select bank1
 12211  0F65  1520               	bsf	_i2c_status^(0+128),2
 12212                           
 12213                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 12214  0F66  2F74               	goto	i1l5968
 12215  0F67                     i1l5952:	
 12216                           
 12217                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 12218  0F67  318A  22AA  318F   	fcall	i1_do_I2C_SEND_RESTART
 12219  0F6A  2F97               	goto	i1l188
 12220  0F6B                     i1l5956:	
 12221                           
 12222                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp_setIRQ();
 12223  0F6B  318A  225C  318F   	fcall	i1_mssp_setIRQ
 12224  0F6E                     i1l5958:	
 12225                           
 12226                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 12227  0F6E  3003               	movlw	3
 12228  0F6F  2F97               	goto	i1l188
 12229  0F70                     i1l5962:	
 12230                           
 12231                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 12232  0F70  318A  22AF  318F   	fcall	i1_do_I2C_SEND_STOP
 12233  0F73  2F97               	goto	i1l188
 12234  0F74                     i1l5968:	
 12235  0F74  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 12236  0F75  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 12237  0F76  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 12238  0F77  0020               	movlb	0	; select bank0
 12239  0F78  00D4               	movwf	i1wr1RegCompleteHandler@p
 12240  0F79  300B               	movlw	11
 12241  0F7A  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 12242  0F7B  0086               	movwf	6
 12243  0F7C  0187               	clrf	7
 12244  0F7D  3F41               	moviw [1]fsr1
 12245  0F7E  008A               	movwf	10
 12246  0F7F  3F40               	moviw [0]fsr1
 12247  0F80  000A               	callw
 12248  0F81  318F               	pagesel	$
 12249  0F82  00F1               	movwf	??i1_do_I2C_TX_EMPTY+1
 12250  0F83  01F2               	clrf	??i1_do_I2C_TX_EMPTY+2
 12251                           
 12252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12253                           ; Switch size 1, requested type "simple"
 12254                           ; Number of cases is 1, Range of values is 0 to 0
 12255                           ; switch strategies available:
 12256                           ; Name         Instructions Cycles
 12257                           ; simple_byte            4     3 (average)
 12258                           ; direct_byte            8     6 (fixed)
 12259                           ; jumptable            260     6 (fixed)
 12260                           ;	Chosen strategy is simple_byte
 12261  0F84  0872               	movf	??i1_do_I2C_TX_EMPTY+2,w
 12262  0F85  3A00               	xorlw	0	; case 0
 12263  0F86  1903               	skipnz
 12264  0F87  2F89               	goto	i1l6764
 12265  0F88  2F70               	goto	i1l5962
 12266  0F89                     i1l6764:	
 12267                           
 12268                           ; Switch size 1, requested type "simple"
 12269                           ; Number of cases is 4, Range of values is 1 to 4
 12270                           ; switch strategies available:
 12271                           ; Name         Instructions Cycles
 12272                           ; simple_byte           13     7 (average)
 12273                           ; direct_byte           17     9 (fixed)
 12274                           ; jumptable            263     9 (fixed)
 12275                           ;	Chosen strategy is simple_byte
 12276  0F89  0871               	movf	??i1_do_I2C_TX_EMPTY+1,w
 12277  0F8A  3A01               	xorlw	1	; case 1
 12278  0F8B  1903               	skipnz
 12279  0F8C  2F70               	goto	i1l5962
 12280  0F8D  3A03               	xorlw	3	; case 2
 12281  0F8E  1903               	skipnz
 12282  0F8F  2F67               	goto	i1l5952
 12283  0F90  3A01               	xorlw	1	; case 3
 12284  0F91  1903               	skipnz
 12285  0F92  2F67               	goto	i1l5952
 12286  0F93  3A07               	xorlw	7	; case 4
 12287  0F94  1903               	skipnz
 12288  0F95  2F6B               	goto	i1l5956
 12289  0F96  2F70               	goto	i1l5962
 12290  0F97                     i1l188:	
 12291  0F97  0008               	return
 12292  0F98                     __end_ofi1_do_I2C_TX_EMPTY:	
 12293                           
 12294                           	psect	text94
 12295  0A5C                     __ptext94:	
 12296 ;; *************** function i1_mssp_setIRQ *****************
 12297 ;; Defined at:
 12298 ;;		line 59 in file "mcc_generated_files/i2c_driver.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;		None
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;		None
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		None
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;Total ram usage:        0 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		i1_do_I2C_TX_EMPTY
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           
 12326                           ;psect for function i1_mssp_setIRQ
 12327  0A5C                     i1_mssp_setIRQ:	
 12328  0A5C                     i1l4132:	
 12329                           ;incstack = 0
 12330                           ; Regs used in i1_mssp_setIRQ: []
 12331                           
 12332                           
 12333                           ;mcc_generated_files/i2c_driver.c: 61:     else
 12334  0A5C  0020               	movlb	0	; select bank0
 12335  0A5D  1591               	bsf	17,3	;volatile
 12336  0A5E                     i1l600:	
 12337  0A5E  0008               	return
 12338  0A5F                     __end_ofi1_mssp_setIRQ:	
 12339                           
 12340                           	psect	text95
 12341  0B0D                     __ptext95:	
 12342 ;; *************** function i1_i2c_driver_isNACK *****************
 12343 ;; Defined at:
 12344 ;;		line 162 in file "mcc_generated_files/i2c_driver.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;		None
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;		None
 12349 ;; Return value:  Size  Location     Type
 12350 ;;		None               void
 12351 ;; Registers used:
 12352 ;;		wreg, status,2, status,0
 12353 ;; Tracked objects:
 12354 ;;		On entry : 0/0
 12355 ;;		On exit  : 0/0
 12356 ;;		Unchanged: 0/0
 12357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;Total ram usage:        1 bytes
 12363 ;; Hardware stack levels used:    1
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		i1_do_I2C_TX
 12368 ;;		i1_i2c_ISR
 12369 ;; This function uses a non-reentrant model
 12370 ;;
 12371                           
 12372                           
 12373                           ;psect for function i1_i2c_driver_isNACK
 12374  0B0D                     i1_i2c_driver_isNACK:	
 12375  0B0D                     i1l4134:	
 12376                           ;incstack = 0
 12377                           ; Regs used in i1_i2c_driver_isNACK: [wreg+status,2+status,0]
 12378                           
 12379                           
 12380                           ;mcc_generated_files/i2c_driver.c: 164:     return SSPCON2bits.ACKSTAT;
 12381  0B0D  0024               	movlb	4	; select bank4
 12382  0B0E  0E16               	swapf	22,w	;volatile
 12383  0B0F  0C89               	rrf	9,f
 12384  0B10  0C89               	rrf	9,f
 12385  0B11  3901               	andlw	1
 12386  0B12  00F0               	movwf	??i1_i2c_driver_isNACK
 12387  0B13  0C70               	rrf	??i1_i2c_driver_isNACK,w
 12388  0B14                     i1l635:	
 12389  0B14  0008               	return
 12390  0B15                     __end_ofi1_i2c_driver_isNACK:	
 12391                           
 12392                           	psect	text96
 12393  0A96                     __ptext96:	
 12394 ;; *************** function i1_i2c_driver_TXData *****************
 12395 ;; Defined at:
 12396 ;;		line 187 in file "mcc_generated_files/i2c_driver.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  d               1    wreg     unsigned char 
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;  d               1    0[COMMON] unsigned char 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		wreg
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;Total ram usage:        1 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; This function calls:
 12417 ;;		Nothing
 12418 ;; This function is called by:
 12419 ;;		i1_do_I2C_SEND_ADR_READ
 12420 ;;		i1_do_I2C_SEND_ADR_WRITE
 12421 ;;		i1_do_I2C_TX
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           
 12426                           ;psect for function i1_i2c_driver_TXData
 12427  0A96                     i1_i2c_driver_TXData:	
 12428                           
 12429                           ;incstack = 0
 12430                           ; Regs used in i1_i2c_driver_TXData: [wreg]
 12431                           ;i1i2c_driver_TXData@d stored from wreg
 12432  0A96  00F0               	movwf	i1i2c_driver_TXData@d
 12433  0A97                     i1l4144:	
 12434                           
 12435                           ;mcc_generated_files/i2c_driver.c: 187: __attribute__((inline)) void i2c_driver_TXData(c
      +                          har d);mcc_generated_files/i2c_driver.c: 188: {;mcc_generated_files/i2c_driver.c: 189:  
      +                             SSPBUF = d;
 12436  0A97  0870               	movf	i1i2c_driver_TXData@d,w
 12437  0A98  0024               	movlb	4	; select bank4
 12438  0A99  0091               	movwf	17	;volatile
 12439  0A9A                     i1l650:	
 12440  0A9A  0008               	return
 12441  0A9B                     __end_ofi1_i2c_driver_TXData:	
 12442                           
 12443                           	psect	text97
 12444  0A59                     __ptext97:	
 12445 ;; *************** function i1_i2c_driver_getRXData *****************
 12446 ;; Defined at:
 12447 ;;		line 172 in file "mcc_generated_files/i2c_driver.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;		None
 12450 ;; Auto vars:     Size  Location     Type
 12451 ;;		None
 12452 ;; Return value:  Size  Location     Type
 12453 ;;                  1    wreg      unsigned char 
 12454 ;; Registers used:
 12455 ;;		wreg
 12456 ;; Tracked objects:
 12457 ;;		On entry : 0/0
 12458 ;;		On exit  : 0/0
 12459 ;;		Unchanged: 0/0
 12460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;Total ram usage:        0 bytes
 12466 ;; Hardware stack levels used:    1
 12467 ;; This function calls:
 12468 ;;		Nothing
 12469 ;; This function is called by:
 12470 ;;		i1_do_I2C_RX
 12471 ;; This function uses a non-reentrant model
 12472 ;;
 12473                           
 12474                           
 12475                           ;psect for function i1_i2c_driver_getRXData
 12476  0A59                     i1_i2c_driver_getRXData:	
 12477  0A59                     i1l4140:	
 12478                           ;incstack = 0
 12479                           ; Regs used in i1_i2c_driver_getRXData: [wreg]
 12480                           
 12481                           
 12482                           ;mcc_generated_files/i2c_driver.c: 174:     return SSPBUF;
 12483  0A59  0024               	movlb	4	; select bank4
 12484  0A5A  0811               	movf	17,w	;volatile
 12485  0A5B                     i1l641:	
 12486  0A5B  0008               	return
 12487  0A5C                     __end_ofi1_i2c_driver_getRXData:	
 12488                           
 12489                           	psect	text98
 12490  0A82                     __ptext98:	
 12491 ;; *************** function i1_i2c_driver_sendNACK *****************
 12492 ;; Defined at:
 12493 ;;		line 203 in file "mcc_generated_files/i2c_driver.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;		None
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  1    wreg      void 
 12500 ;; Registers used:
 12501 ;;		None
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12511 ;;Total ram usage:        0 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; This function calls:
 12514 ;;		Nothing
 12515 ;; This function is called by:
 12516 ;;		i1_do_I2C_DO_NACK_STOP
 12517 ;;		i1_do_I2C_DO_NACK_RESTART
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           
 12522                           ;psect for function i1_i2c_driver_sendNACK
 12523  0A82                     i1_i2c_driver_sendNACK:	
 12524  0A82                     i1l3940:	
 12525                           ;incstack = 0
 12526                           ; Regs used in i1_i2c_driver_sendNACK: []
 12527                           
 12528                           
 12529                           ;mcc_generated_files/i2c_driver.c: 205:     SSPCON2bits.ACKDT = 1;
 12530  0A82  0024               	movlb	4	; select bank4
 12531  0A83  1696               	bsf	22,5	;volatile
 12532                           
 12533                           ;mcc_generated_files/i2c_driver.c: 206:     SSPCON2bits.ACKEN = 1;
 12534  0A84  1616               	bsf	22,4	;volatile
 12535  0A85                     i1l659:	
 12536  0A85  0008               	return
 12537  0A86                     __end_ofi1_i2c_driver_sendNACK:	
 12538                           
 12539                           	psect	text99
 12540  0A47                     __ptext99:	
 12541 ;; *************** function i1_i2c_driver_resetBus *****************
 12542 ;; Defined at:
 12543 ;;		line 142 in file "mcc_generated_files/i2c_driver.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;		None
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      void 
 12550 ;; Registers used:
 12551 ;;		None
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;Total ram usage:        0 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		i1_do_I2C_RESET
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           
 12571                           ;psect for function i1_i2c_driver_resetBus
 12572  0A47                     i1_i2c_driver_resetBus:	
 12573  0A47                     i1l623:	
 12574                           ;incstack = 0
 12575                           ; Regs used in i1_i2c_driver_resetBus: []
 12576                           
 12577  0A47  0008               	return
 12578  0A48                     __end_ofi1_i2c_driver_resetBus:	
 12579                           
 12580                           	psect	text100
 12581  0A56                     __ptext100:	
 12582 ;; *************** function i1_i2c_driver_startRX *****************
 12583 ;; Defined at:
 12584 ;;		line 167 in file "mcc_generated_files/i2c_driver.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;		None
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;		None
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		None
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;Total ram usage:        0 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; This function calls:
 12605 ;;		Nothing
 12606 ;; This function is called by:
 12607 ;;		i1_do_I2C_RCEN
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           
 12612                           ;psect for function i1_i2c_driver_startRX
 12613  0A56                     i1_i2c_driver_startRX:	
 12614  0A56                     i1l4138:	
 12615                           ;incstack = 0
 12616                           ; Regs used in i1_i2c_driver_startRX: []
 12617                           
 12618                           
 12619                           ;mcc_generated_files/i2c_driver.c: 169:     SSPCON2bits.RCEN = 1;
 12620  0A56  0024               	movlb	4	; select bank4
 12621  0A57  1596               	bsf	22,3	;volatile
 12622  0A58                     i1l638:	
 12623  0A58  0008               	return
 12624  0A59                     __end_ofi1_i2c_driver_startRX:	
 12625                           
 12626                           	psect	text101
 12627  0002                     __ptext101:	
 12628 ;; *************** function i1_i2c_restartWrite *****************
 12629 ;; Defined at:
 12630 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  p               1    1[BANK0 ] PTR void 
 12633 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12634 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      enum E358
 12639 ;; Registers used:
 12640 ;;		wreg
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12646 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;Total ram usage:        1 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; This function calls:
 12653 ;;		Nothing
 12654 ;; This function is called by:
 12655 ;;		_do_I2C_DO_ADDRESS_NACK
 12656 ;;		_do_I2C_TX
 12657 ;;		_do_I2C_RX
 12658 ;;		_do_I2C_TX_EMPTY
 12659 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12660 ;;		i1_do_I2C_TX
 12661 ;;		i1_do_I2C_RX
 12662 ;;		i1_do_I2C_TX_EMPTY
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           
 12667                           ;psect for function i1_i2c_restartWrite
 12668  0002                     i1_i2c_restartWrite:	
 12669  0002                     i1l5722:	
 12670                           ;incstack = 0
 12671                           ; Regs used in i1_i2c_restartWrite: [wreg]
 12672                           
 12673                           
 12674                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 12675  0002  3003               	movlw	3
 12676  0003                     i1l318:	
 12677  0003  0008               	return
 12678  0004                     __end_ofi1_i2c_restartWrite:	
 12679                           
 12680                           	psect	text102
 12681  0D3A                     __ptext102:	
 12682 ;; *************** function i1_rdBlkRegCompleteHandler *****************
 12683 ;; Defined at:
 12684 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;  p               1    1[BANK0 ] PTR void 
 12687 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12688 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;		None
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  1    wreg      enum E358
 12693 ;; Registers used:
 12694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12695 ;; Tracked objects:
 12696 ;;		On entry : 0/0
 12697 ;;		On exit  : 0/0
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12700 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;Total ram usage:        1 bytes
 12705 ;; Hardware stack levels used:    1
 12706 ;; Hardware stack levels required when called:    2
 12707 ;; This function calls:
 12708 ;;		i1_i2c_setBuffer
 12709 ;;		i1_i2c_setDataCompleteCallback
 12710 ;; This function is called by:
 12711 ;;		_do_I2C_DO_ADDRESS_NACK
 12712 ;;		_do_I2C_TX
 12713 ;;		_do_I2C_RX
 12714 ;;		_do_I2C_TX_EMPTY
 12715 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12716 ;;		i1_do_I2C_TX
 12717 ;;		i1_do_I2C_RX
 12718 ;;		i1_do_I2C_TX_EMPTY
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           
 12723                           ;psect for function i1_rdBlkRegCompleteHandler
 12724  0D3A                     i1_rdBlkRegCompleteHandler:	
 12725  0D3A                     i1l5716:	
 12726                           ;incstack = 0
 12727                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12728                           
 12729                           
 12730                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 12731  0D3A  0020               	movlb	0	; select bank0
 12732  0D3B  0854               	movf	i1rdBlkRegCompleteHandler@p,w
 12733  0D3C  0086               	movwf	6
 12734  0D3D  0187               	clrf	7
 12735  0D3E  3F40               	moviw [0]fsr1
 12736  0D3F  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12737  0D40  3F41               	moviw [1]fsr1
 12738  0D41  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12739  0D42  0854               	movf	i1rdBlkRegCompleteHandler@p,w
 12740  0D43  3E02               	addlw	2
 12741  0D44  0086               	movwf	6
 12742  0D45  0187               	clrf	7
 12743  0D46  0801               	movf	1,w
 12744  0D47  318C  2435  318D   	fcall	i1_i2c_setBuffer
 12745                           
 12746                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12747  0D4A  3000               	movlw	0
 12748  0D4B  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12749  0D4C  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12750  0D4D  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12751  0D4E  318B  23EE  318D   	fcall	i1_i2c_setDataCompleteCallback
 12752  0D51                     i1l5718:	
 12753                           
 12754                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 12755  0D51  3002               	movlw	2
 12756  0D52                     i1l291:	
 12757  0D52  0008               	return
 12758  0D53                     __end_ofi1_rdBlkRegCompleteHandler:	
 12759                           
 12760                           	psect	text103
 12761  0C8C                     __ptext103:	
 12762 ;; *************** function i1_rd2RegCompleteHandler *****************
 12763 ;; Defined at:
 12764 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;  p               1    1[BANK0 ] PTR void 
 12767 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12768 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12769 ;; Auto vars:     Size  Location     Type
 12770 ;;		None
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  1    wreg      enum E358
 12773 ;; Registers used:
 12774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12780 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;Total ram usage:        1 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:    2
 12787 ;; This function calls:
 12788 ;;		i1_i2c_setBuffer
 12789 ;;		i1_i2c_setDataCompleteCallback
 12790 ;; This function is called by:
 12791 ;;		_do_I2C_DO_ADDRESS_NACK
 12792 ;;		_do_I2C_TX
 12793 ;;		_do_I2C_RX
 12794 ;;		_do_I2C_TX_EMPTY
 12795 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12796 ;;		i1_do_I2C_TX
 12797 ;;		i1_do_I2C_RX
 12798 ;;		i1_do_I2C_TX_EMPTY
 12799 ;; This function uses a non-reentrant model
 12800 ;;
 12801                           
 12802                           
 12803                           ;psect for function i1_rd2RegCompleteHandler
 12804  0C8C                     i1_rd2RegCompleteHandler:	
 12805  0C8C                     i1l5700:	
 12806                           ;incstack = 0
 12807                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12808                           
 12809                           
 12810                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 12811  0C8C  3002               	movlw	2
 12812  0C8D  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12813  0C8E  3000               	movlw	0
 12814  0C8F  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12815  0C90  0020               	movlb	0	; select bank0
 12816  0C91  0854               	movf	i1rd2RegCompleteHandler@p,w
 12817  0C92  318C  2435  318C   	fcall	i1_i2c_setBuffer
 12818  0C95                     i1l5702:	
 12819                           
 12820                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 12821  0C95  3000               	movlw	0
 12822  0C96  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12823  0C97  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12824  0C98  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12825  0C99  318B  23EE  318C   	fcall	i1_i2c_setDataCompleteCallback
 12826  0C9C                     i1l5704:	
 12827                           
 12828                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 12829  0C9C  3002               	movlw	2
 12830  0C9D                     i1l267:	
 12831  0C9D  0008               	return
 12832  0C9E                     __end_ofi1_rd2RegCompleteHandler:	
 12833                           
 12834                           	psect	text104
 12835  0C7A                     __ptext104:	
 12836 ;; *************** function i1_rd1RegCompleteHandler *****************
 12837 ;; Defined at:
 12838 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;  p               1    1[BANK0 ] PTR void 
 12841 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12842 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  1    wreg      enum E358
 12847 ;; Registers used:
 12848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12854 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;Total ram usage:        1 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; Hardware stack levels required when called:    2
 12861 ;; This function calls:
 12862 ;;		i1_i2c_setBuffer
 12863 ;;		i1_i2c_setDataCompleteCallback
 12864 ;; This function is called by:
 12865 ;;		_do_I2C_DO_ADDRESS_NACK
 12866 ;;		_do_I2C_TX
 12867 ;;		_do_I2C_RX
 12868 ;;		_do_I2C_TX_EMPTY
 12869 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12870 ;;		i1_do_I2C_TX
 12871 ;;		i1_do_I2C_RX
 12872 ;;		i1_do_I2C_TX_EMPTY
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           
 12877                           ;psect for function i1_rd1RegCompleteHandler
 12878  0C7A                     i1_rd1RegCompleteHandler:	
 12879  0C7A                     i1l5692:	
 12880                           ;incstack = 0
 12881                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12882                           
 12883                           
 12884                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 12885  0C7A  3001               	movlw	1
 12886  0C7B  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12887  0C7C  3000               	movlw	0
 12888  0C7D  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12889  0C7E  0020               	movlb	0	; select bank0
 12890  0C7F  0854               	movf	i1rd1RegCompleteHandler@p,w
 12891  0C80  318C  2435  318C   	fcall	i1_i2c_setBuffer
 12892  0C83                     i1l5694:	
 12893                           
 12894                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 12895  0C83  3000               	movlw	0
 12896  0C84  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12897  0C85  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12898  0C86  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12899  0C87  318B  23EE  318C   	fcall	i1_i2c_setDataCompleteCallback
 12900  0C8A                     i1l5696:	
 12901                           
 12902                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 12903  0C8A  3002               	movlw	2
 12904  0C8B                     i1l252:	
 12905  0C8B  0008               	return
 12906  0C8C                     __end_ofi1_rd1RegCompleteHandler:	
 12907                           
 12908                           	psect	text105
 12909  0C68                     __ptext105:	
 12910 ;; *************** function i1_wr1RegCompleteHandler *****************
 12911 ;; Defined at:
 12912 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  p               1    1[BANK0 ] PTR void 
 12915 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12916 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      enum E358
 12921 ;; Registers used:
 12922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12928 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;Total ram usage:        1 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; Hardware stack levels required when called:    2
 12935 ;; This function calls:
 12936 ;;		i1_i2c_setBuffer
 12937 ;;		i1_i2c_setDataCompleteCallback
 12938 ;; This function is called by:
 12939 ;;		_do_I2C_DO_ADDRESS_NACK
 12940 ;;		_do_I2C_TX
 12941 ;;		_do_I2C_RX
 12942 ;;		_do_I2C_TX_EMPTY
 12943 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12944 ;;		i1_do_I2C_TX
 12945 ;;		i1_do_I2C_RX
 12946 ;;		i1_do_I2C_TX_EMPTY
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           
 12950                           
 12951                           ;psect for function i1_wr1RegCompleteHandler
 12952  0C68                     i1_wr1RegCompleteHandler:	
 12953  0C68                     i1l5684:	
 12954                           ;incstack = 0
 12955                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12956                           
 12957                           
 12958                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 12959  0C68  3001               	movlw	1
 12960  0C69  00F0               	movwf	i1i2c_setBuffer@bufferSize
 12961  0C6A  3000               	movlw	0
 12962  0C6B  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 12963  0C6C  0020               	movlb	0	; select bank0
 12964  0C6D  0854               	movf	i1wr1RegCompleteHandler@p,w
 12965  0C6E  318C  2435  318C   	fcall	i1_i2c_setBuffer
 12966  0C71                     i1l5686:	
 12967                           
 12968                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 12969  0C71  3000               	movlw	0
 12970  0C72  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 12971  0C73  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 12972  0C74  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 12973  0C75  318B  23EE  318C   	fcall	i1_i2c_setDataCompleteCallback
 12974  0C78                     i1l5688:	
 12975                           
 12976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 12977  0C78  3004               	movlw	4
 12978  0C79                     i1l231:	
 12979  0C79  0008               	return
 12980  0C7A                     __end_ofi1_wr1RegCompleteHandler:	
 12981                           
 12982                           	psect	text106
 12983  0A4B                     __ptext106:	
 12984 ;; *************** function i1_returnReset *****************
 12985 ;; Defined at:
 12986 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;  p               1    1[BANK0 ] PTR void 
 12989 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12990 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;		None
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      enum E3257
 12995 ;; Registers used:
 12996 ;;		wreg
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13002 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13006 ;;Total ram usage:        1 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; This function calls:
 13009 ;;		Nothing
 13010 ;; This function is called by:
 13011 ;;		_do_I2C_DO_ADDRESS_NACK
 13012 ;;		_do_I2C_TX
 13013 ;;		_do_I2C_RX
 13014 ;;		_do_I2C_TX_EMPTY
 13015 ;;		i1_do_I2C_DO_ADDRESS_NACK
 13016 ;;		i1_do_I2C_TX
 13017 ;;		i1_do_I2C_RX
 13018 ;;		i1_do_I2C_TX_EMPTY
 13019 ;; This function uses a non-reentrant model
 13020 ;;
 13021                           
 13022                           
 13023                           ;psect for function i1_returnReset
 13024  0A4B                     i1_returnReset:	
 13025  0A4B                     i1l5680:	
 13026                           ;incstack = 0
 13027                           ; Regs used in i1_returnReset: [wreg]
 13028                           
 13029                           
 13030                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 13031  0A4B  3005               	movlw	5
 13032  0A4C                     i1l207:	
 13033  0A4C  0008               	return
 13034  0A4D                     __end_ofi1_returnReset:	
 13035                           
 13036                           	psect	text107
 13037  0A49                     __ptext107:	
 13038 ;; *************** function i1_returnStop *****************
 13039 ;; Defined at:
 13040 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  p               1    1[BANK0 ] PTR void 
 13043 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 13044 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;		None
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      enum E3257
 13049 ;; Registers used:
 13050 ;;		wreg
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13056 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;Total ram usage:        1 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		i1_setCallBack
 13066 ;;		_do_I2C_DO_ADDRESS_NACK
 13067 ;;		_do_I2C_TX
 13068 ;;		_do_I2C_RX
 13069 ;;		_do_I2C_TX_EMPTY
 13070 ;;		i1_do_I2C_DO_ADDRESS_NACK
 13071 ;;		i1_do_I2C_TX
 13072 ;;		i1_do_I2C_RX
 13073 ;;		i1_do_I2C_TX_EMPTY
 13074 ;; This function uses a non-reentrant model
 13075 ;;
 13076                           
 13077                           
 13078                           ;psect for function i1_returnStop
 13079  0A49                     i1_returnStop:	
 13080  0A49                     i1l5676:	
 13081                           ;incstack = 0
 13082                           ; Regs used in i1_returnStop: [wreg]
 13083                           
 13084                           
 13085                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 13086  0A49  3001               	movlw	1
 13087  0A4A                     i1l204:	
 13088  0A4A  0008               	return
 13089  0A4B                     __end_ofi1_returnStop:	
 13090                           
 13091                           	psect	text108
 13092  0C56                     __ptext108:	
 13093 ;; *************** function i1_wr2RegCompleteHandler *****************
 13094 ;; Defined at:
 13095 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13096 ;; Parameters:    Size  Location     Type
 13097 ;;  p               1    1[BANK0 ] PTR void 
 13098 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 13099 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;		None
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      enum E358
 13104 ;; Registers used:
 13105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13111 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;Total ram usage:        1 bytes
 13116 ;; Hardware stack levels used:    1
 13117 ;; Hardware stack levels required when called:    2
 13118 ;; This function calls:
 13119 ;;		i1_i2c_setBuffer
 13120 ;;		i1_i2c_setDataCompleteCallback
 13121 ;; This function is called by:
 13122 ;;		_do_I2C_DO_ADDRESS_NACK
 13123 ;;		_do_I2C_TX
 13124 ;;		_do_I2C_RX
 13125 ;;		_do_I2C_TX_EMPTY
 13126 ;;		i1_do_I2C_DO_ADDRESS_NACK
 13127 ;;		i1_do_I2C_TX
 13128 ;;		i1_do_I2C_RX
 13129 ;;		i1_do_I2C_TX_EMPTY
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           
 13134                           ;psect for function i1_wr2RegCompleteHandler
 13135  0C56                     i1_wr2RegCompleteHandler:	
 13136  0C56                     i1l5708:	
 13137                           ;incstack = 0
 13138                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13139                           
 13140                           
 13141                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 13142  0C56  3002               	movlw	2
 13143  0C57  00F0               	movwf	i1i2c_setBuffer@bufferSize
 13144  0C58  3000               	movlw	0
 13145  0C59  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 13146  0C5A  0020               	movlb	0	; select bank0
 13147  0C5B  0854               	movf	i1wr2RegCompleteHandler@p,w
 13148  0C5C  318C  2435  318C   	fcall	i1_i2c_setBuffer
 13149  0C5F                     i1l5710:	
 13150                           
 13151                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 13152  0C5F  3000               	movlw	0
 13153  0C60  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 13154  0C61  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 13155  0C62  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 13156  0C63  318B  23EE  318C   	fcall	i1_i2c_setDataCompleteCallback
 13157  0C66                     i1l5712:	
 13158                           
 13159                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 13160  0C66  3004               	movlw	4
 13161  0C67                     i1l279:	
 13162  0C67  0008               	return
 13163  0C68                     __end_ofi1_wr2RegCompleteHandler:	
 13164                           
 13165                           	psect	text109
 13166  0BEE                     __ptext109:	
 13167 ;; *************** function i1_i2c_setDataCompleteCallback *****************
 13168 ;; Defined at:
 13169 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 13172 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13173 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 13174 ;;  p               1    7[COMMON] PTR void 
 13175 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 13176 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13188 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;Total ram usage:        4 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    1
 13195 ;; This function calls:
 13196 ;;		i1_setCallBack
 13197 ;; This function is called by:
 13198 ;;		i1_wr1RegCompleteHandler
 13199 ;;		i1_rd1RegCompleteHandler
 13200 ;;		i1_rd2RegCompleteHandler
 13201 ;;		i1_wr2RegCompleteHandler
 13202 ;;		i1_rdBlkRegCompleteHandler
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function i1_i2c_setDataCompleteCallback
 13208  0BEE                     i1_i2c_setDataCompleteCallback:	
 13209  0BEE                     i1l5616:	
 13210                           ;incstack = 0
 13211                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 13212                           
 13213                           
 13214                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 13215  0BEE  0876               	movf	i1i2c_setDataCompleteCallback@cb+1,w
 13216  0BEF  00F1               	movwf	i1setCallBack@cb+1
 13217  0BF0  0875               	movf	i1i2c_setDataCompleteCallback@cb,w
 13218  0BF1  00F0               	movwf	i1setCallBack@cb
 13219  0BF2  0877               	movf	i1i2c_setDataCompleteCallback@p,w
 13220  0BF3  0020               	movlb	0	; select bank0
 13221  0BF4  00D3               	movwf	??i1_i2c_setDataCompleteCallback
 13222  0BF5  0853               	movf	??i1_i2c_setDataCompleteCallback,w
 13223  0BF6  00F2               	movwf	i1setCallBack@p
 13224  0BF7  3000               	movlw	0
 13225  0BF8  318E  2607  318B   	fcall	i1_setCallBack
 13226  0BFB                     i1l61:	
 13227  0BFB  0008               	return
 13228  0BFC                     __end_ofi1_i2c_setDataCompleteCallback:	
 13229                           
 13230                           	psect	text110
 13231  0E07                     __ptext110:	
 13232 ;; *************** function i1_setCallBack *****************
 13233 ;; Defined at:
 13234 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;  idx             1    wreg     enum E3429
 13237 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 13238 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13239 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 13240 ;;  p               1    2[COMMON] PTR void 
 13241 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 13242 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;  idx             1    4[COMMON] enum E3429
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1    wreg      void 
 13247 ;; Registers used:
 13248 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13249 ;; Tracked objects:
 13250 ;;		On entry : 0/0
 13251 ;;		On exit  : 0/0
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13254 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;Total ram usage:        5 bytes
 13259 ;; Hardware stack levels used:    1
 13260 ;; This function calls:
 13261 ;;		Nothing
 13262 ;; This function is called by:
 13263 ;;		i1_i2c_setDataCompleteCallback
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           
 13268                           ;psect for function i1_setCallBack
 13269  0E07                     i1_setCallBack:	
 13270                           
 13271                           ;incstack = 0
 13272                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 13273                           ;i1setCallBack@idx stored from wreg
 13274  0E07  00F4               	movwf	i1setCallBack@idx
 13275  0E08                     i1l5572:	
 13276                           
 13277                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 13278  0E08  0870               	movf	i1setCallBack@cb,w
 13279  0E09  0471               	iorwf	i1setCallBack@cb+1,w
 13280  0E0A  1903               	btfsc	3,2
 13281  0E0B  2E0D               	goto	u350_21
 13282  0E0C  2E0E               	goto	u350_20
 13283  0E0D                     u350_21:	
 13284  0E0D  2E1F               	goto	i1l5576
 13285  0E0E                     u350_20:	
 13286  0E0E                     i1l5574:	
 13287                           
 13288                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 13289  0E0E  3574               	lslf	i1setCallBack@idx,w
 13290  0E0F  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 13291  0E10  0086               	movwf	6
 13292  0E11  0187               	clrf	7
 13293  0E12  0870               	movf	i1setCallBack@cb,w
 13294  0E13  3FC0               	movwi [0]fsr1
 13295  0E14  0871               	movf	i1setCallBack@cb+1,w
 13296  0E15  3FC1               	movwi [1]fsr1
 13297                           
 13298                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 13299  0E16  0872               	movf	i1setCallBack@p,w
 13300  0E17  00F3               	movwf	??i1_setCallBack
 13301  0E18  0874               	movf	i1setCallBack@idx,w
 13302  0E19  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 13303  0E1A  0086               	movwf	6
 13304  0E1B  0187               	clrf	7
 13305  0E1C  0873               	movf	??i1_setCallBack,w
 13306  0E1D  0081               	movwf	1
 13307                           
 13308                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 13309  0E1E  2E2C               	goto	i1l212
 13310  0E1F                     i1l5576:	
 13311                           
 13312                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 13313  0E1F  3574               	lslf	i1setCallBack@idx,w
 13314  0E20  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 13315  0E21  0086               	movwf	6
 13316  0E22  0187               	clrf	7
 13317  0E23  30D4               	movlw	low _returnStop
 13318  0E24  3FC0               	movwi [0]fsr1
 13319  0E25  300A               	movlw	high _returnStop
 13320  0E26  3FC1               	movwi [1]fsr1
 13321                           
 13322                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 13323  0E27  0874               	movf	i1setCallBack@idx,w
 13324  0E28  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 13325  0E29  0086               	movwf	6
 13326  0E2A  0187               	clrf	7
 13327  0E2B  0181               	clrf	1
 13328  0E2C                     i1l212:	
 13329  0E2C  0008               	return
 13330  0E2D                     __end_ofi1_setCallBack:	
 13331                           
 13332                           	psect	text111
 13333  0C35                     __ptext111:	
 13334 ;; *************** function i1_i2c_setBuffer *****************
 13335 ;; Defined at:
 13336 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  buffer          1    wreg     PTR void 
 13339 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
 13340 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 13341 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13342 ;;  bufferSize      2    0[COMMON] unsigned int 
 13343 ;; Auto vars:     Size  Location     Type
 13344 ;;  buffer          1    3[COMMON] PTR void 
 13345 ;;		 -> rtcData(9), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), 
 13346 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 13347 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  1    wreg      void 
 13350 ;; Registers used:
 13351 ;;		wreg
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;Total ram usage:        4 bytes
 13362 ;; Hardware stack levels used:    1
 13363 ;; This function calls:
 13364 ;;		Nothing
 13365 ;; This function is called by:
 13366 ;;		i1_wr1RegCompleteHandler
 13367 ;;		i1_rd1RegCompleteHandler
 13368 ;;		i1_rd2RegCompleteHandler
 13369 ;;		i1_wr2RegCompleteHandler
 13370 ;;		i1_rdBlkRegCompleteHandler
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           
 13375                           ;psect for function i1_i2c_setBuffer
 13376  0C35                     i1_i2c_setBuffer:	
 13377                           
 13378                           ;incstack = 0
 13379                           ; Regs used in i1_i2c_setBuffer: [wreg]
 13380                           ;i1i2c_setBuffer@buffer stored from wreg
 13381  0C35  00F3               	movwf	i1i2c_setBuffer@buffer
 13382  0C36                     i1l3930:	
 13383                           
 13384                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 13385  0C36  0021               	movlb	1	; select bank1
 13386  0C37  1D20               	btfss	_i2c_status^(0+128),2
 13387  0C38  2C3A               	goto	u193_21
 13388  0C39  2C3B               	goto	u193_20
 13389  0C3A                     u193_21:	
 13390  0C3A  2C44               	goto	i1l91
 13391  0C3B                     u193_20:	
 13392  0C3B                     i1l3932:	
 13393                           
 13394                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 13395  0C3B  0873               	movf	i1i2c_setBuffer@buffer,w
 13396  0C3C  00F2               	movwf	??i1_i2c_setBuffer
 13397  0C3D  0872               	movf	??i1_i2c_setBuffer,w
 13398  0C3E  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 13399                           
 13400                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 13401  0C3F  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
 13402  0C40  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 13403  0C41  0870               	movf	i1i2c_setBuffer@bufferSize,w
 13404  0C42  00A3               	movwf	(_i2c_status^(0+128)+3)
 13405  0C43                     i1l3934:	
 13406                           
 13407                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 13408  0C43  1120               	bcf	_i2c_status^(0+128),2
 13409  0C44                     i1l91:	
 13410  0C44  0008               	return
 13411  0C45                     __end_ofi1_i2c_setBuffer:	
 13412                           
 13413                           	psect	text112
 13414  0A53                     __ptext112:	
 13415 ;; *************** function i1_i2c_driver_stop *****************
 13416 ;; Defined at:
 13417 ;;		line 157 in file "mcc_generated_files/i2c_driver.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;		None
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;		None
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		None
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;Total ram usage:        0 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		i1_do_I2C_SEND_STOP
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function i1_i2c_driver_stop
 13446  0A53                     i1_i2c_driver_stop:	
 13447  0A53                     i1l3938:	
 13448                           ;incstack = 0
 13449                           ; Regs used in i1_i2c_driver_stop: []
 13450                           
 13451                           
 13452                           ;mcc_generated_files/i2c_driver.c: 159:     SSPCON2bits.PEN = 1;
 13453  0A53  0024               	movlb	4	; select bank4
 13454  0A54  1516               	bsf	22,2	;volatile
 13455  0A55                     i1l632:	
 13456  0A55  0008               	return
 13457  0A56                     __end_ofi1_i2c_driver_stop:	
 13458                           
 13459                           	psect	text113
 13460  0A50                     __ptext113:	
 13461 ;; *************** function i1_i2c_driver_restart *****************
 13462 ;; Defined at:
 13463 ;;		line 152 in file "mcc_generated_files/i2c_driver.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;		None
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;		None
 13468 ;; Return value:  Size  Location     Type
 13469 ;;                  1    wreg      void 
 13470 ;; Registers used:
 13471 ;;		None
 13472 ;; Tracked objects:
 13473 ;;		On entry : 0/0
 13474 ;;		On exit  : 0/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;Total ram usage:        0 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; This function calls:
 13484 ;;		Nothing
 13485 ;; This function is called by:
 13486 ;;		i1_do_I2C_SEND_RESTART_READ
 13487 ;;		i1_do_I2C_SEND_RESTART_WRITE
 13488 ;;		i1_do_I2C_SEND_RESTART
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           
 13493                           ;psect for function i1_i2c_driver_restart
 13494  0A50                     i1_i2c_driver_restart:	
 13495  0A50                     i1l3936:	
 13496                           ;incstack = 0
 13497                           ; Regs used in i1_i2c_driver_restart: []
 13498                           
 13499                           
 13500                           ;mcc_generated_files/i2c_driver.c: 154:     SSPCON2bits.RSEN = 1;
 13501  0A50  0024               	movlb	4	; select bank4
 13502  0A51  1496               	bsf	22,1	;volatile
 13503  0A52                     i1l629:	
 13504  0A52  0008               	return
 13505  0A53                     __end_ofi1_i2c_driver_restart:	
 13506                           
 13507                           	psect	text114
 13508  0A7E                     __ptext114:	
 13509 ;; *************** function i1_i2c_driver_sendACK *****************
 13510 ;; Defined at:
 13511 ;;		line 197 in file "mcc_generated_files/i2c_driver.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;		None
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;		None
 13516 ;; Return value:  Size  Location     Type
 13517 ;;                  1    wreg      void 
 13518 ;; Registers used:
 13519 ;;		None
 13520 ;; Tracked objects:
 13521 ;;		On entry : 0/0
 13522 ;;		On exit  : 0/0
 13523 ;;		Unchanged: 0/0
 13524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;Total ram usage:        0 bytes
 13530 ;; Hardware stack levels used:    1
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		i1_do_I2C_DO_ACK
 13535 ;;		i1_do_I2C_RX
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           
 13540                           ;psect for function i1_i2c_driver_sendACK
 13541  0A7E                     i1_i2c_driver_sendACK:	
 13542  0A7E                     i1l4146:	
 13543                           ;incstack = 0
 13544                           ; Regs used in i1_i2c_driver_sendACK: []
 13545                           
 13546                           
 13547                           ;mcc_generated_files/i2c_driver.c: 199:     SSPCON2bits.ACKDT = 0;
 13548  0A7E  0024               	movlb	4	; select bank4
 13549  0A7F  1296               	bcf	22,5	;volatile
 13550                           
 13551                           ;mcc_generated_files/i2c_driver.c: 200:     SSPCON2bits.ACKEN = 1;
 13552  0A80  1616               	bsf	22,4	;volatile
 13553  0A81                     i1l656:	
 13554  0A81  0008               	return
 13555  0A82                     __end_ofi1_i2c_driver_sendACK:	
 13556                           
 13557                           	psect	text115
 13558  0A7A                     __ptext115:	
 13559 ;; *************** function _i2c_busCollisionISR *****************
 13560 ;; Defined at:
 13561 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13562 ;; Parameters:    Size  Location     Type
 13563 ;;		None
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;		None
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  1    wreg      void 
 13568 ;; Registers used:
 13569 ;;		status,2, status,0, pclath, cstack
 13570 ;; Tracked objects:
 13571 ;;		On entry : 0/0
 13572 ;;		On exit  : 0/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13579 ;;Total ram usage:        0 bytes
 13580 ;; Hardware stack levels used:    1
 13581 ;; Hardware stack levels required when called:    1
 13582 ;; This function calls:
 13583 ;;		_i2c_driver_clearBusCollision
 13584 ;; This function is called by:
 13585 ;;		_i2c_open
 13586 ;;		_INTERRUPT_InterruptManager
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           
 13591                           ;psect for function _i2c_busCollisionISR
 13592  0A7A                     _i2c_busCollisionISR:	
 13593  0A7A                     i1l4464:	
 13594                           ;incstack = 0
 13595                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13596                           
 13597                           
 13598                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c_driver_clearBusCollision();
 13599  0A7A  318A  224D  318A   	fcall	_i2c_driver_clearBusCollision
 13600  0A7D                     i1l201:	
 13601  0A7D  0008               	return
 13602  0A7E                     __end_of_i2c_busCollisionISR:	
 13603                           
 13604                           	psect	text116
 13605  0A4D                     __ptext116:	
 13606 ;; *************** function _i2c_driver_clearBusCollision *****************
 13607 ;; Defined at:
 13608 ;;		line 254 in file "mcc_generated_files/i2c_driver.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;		None
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;		None
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  1    wreg      void 
 13615 ;; Registers used:
 13616 ;;		None
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:        0 bytes
 13627 ;; Hardware stack levels used:    1
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_i2c_busCollisionISR
 13632 ;; This function uses a non-reentrant model
 13633 ;;
 13634                           
 13635                           
 13636                           ;psect for function _i2c_driver_clearBusCollision
 13637  0A4D                     _i2c_driver_clearBusCollision:	
 13638  0A4D                     i1l4148:	
 13639                           ;incstack = 0
 13640                           ; Regs used in _i2c_driver_clearBusCollision: []
 13641                           
 13642                           
 13643                           ;mcc_generated_files/i2c_driver.c: 256:     PIR2bits.BCLIF = 0;
 13644  0A4D  0020               	movlb	0	; select bank0
 13645  0A4E  1192               	bcf	18,3	;volatile
 13646  0A4F                     i1l693:	
 13647  0A4F  0008               	return
 13648  0A50                     __end_of_i2c_driver_clearBusCollision:	
 13649                           
 13650                           	psect	text117
 13651  0B05                     __ptext117:	
 13652 ;; *************** function _TMR0_ISR *****************
 13653 ;; Defined at:
 13654 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;		None
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;		None
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      void 
 13661 ;; Registers used:
 13662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13672 ;;Total ram usage:        0 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    2
 13675 ;; This function calls:
 13676 ;;		_TMR0_CallBack
 13677 ;; This function is called by:
 13678 ;;		_INTERRUPT_InterruptManager
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           
 13683                           ;psect for function _TMR0_ISR
 13684  0B05                     _TMR0_ISR:	
 13685  0B05                     i1l4466:	
 13686                           ;incstack = 0
 13687                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13688                           
 13689                           
 13690                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 13691  0B05  110B               	bcf	11,2	;volatile
 13692  0B06                     i1l4468:	
 13693                           
 13694                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 13695  0B06  087D               	movf	_timer0ReloadVal,w	;volatile
 13696  0B07  0020               	movlb	0	; select bank0
 13697  0B08  0095               	movwf	21	;volatile
 13698  0B09                     i1l4470:	
 13699                           
 13700                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
 13701  0B09  318B  23A5  318B   	fcall	_TMR0_CallBack
 13702  0B0C                     i1l542:	
 13703  0B0C  0008               	return
 13704  0B0D                     __end_of_TMR0_ISR:	
 13705                           
 13706                           	psect	text118
 13707  0BA5                     __ptext118:	
 13708 ;; *************** function _TMR0_CallBack *****************
 13709 ;; Defined at:
 13710 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;		None
 13713 ;; Auto vars:     Size  Location     Type
 13714 ;;		None
 13715 ;; Return value:  Size  Location     Type
 13716 ;;                  1    wreg      void 
 13717 ;; Registers used:
 13718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13719 ;; Tracked objects:
 13720 ;;		On entry : 0/0
 13721 ;;		On exit  : 0/0
 13722 ;;		Unchanged: 0/0
 13723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;Total ram usage:        0 bytes
 13729 ;; Hardware stack levels used:    1
 13730 ;; Hardware stack levels required when called:    1
 13731 ;; This function calls:
 13732 ;;		Absolute function
 13733 ;;		_TMR0_DefaultInterruptHandler
 13734 ;;		_displayRefreshISR
 13735 ;; This function is called by:
 13736 ;;		_TMR0_ISR
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           
 13741                           ;psect for function _TMR0_CallBack
 13742  0BA5                     _TMR0_CallBack:	
 13743  0BA5                     i1l4244:	
 13744                           ;incstack = 0
 13745                           ; Regs used in _TMR0_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13746                           
 13747                           
 13748                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 13749  0BA5  0878               	movf	_TMR0_InterruptHandler,w
 13750  0BA6  0479               	iorwf	_TMR0_InterruptHandler+1,w
 13751  0BA7  1903               	btfsc	3,2
 13752  0BA8  2BAA               	goto	u216_21
 13753  0BA9  2BAB               	goto	u216_20
 13754  0BAA                     u216_21:	
 13755  0BAA  2BB0               	goto	i1l546
 13756  0BAB                     u216_20:	
 13757  0BAB                     i1l4246:	
 13758                           
 13759                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 13760  0BAB  0879               	movf	_TMR0_InterruptHandler+1,w
 13761  0BAC  008A               	movwf	10
 13762  0BAD  0878               	movf	_TMR0_InterruptHandler,w
 13763  0BAE  000A               	callw
 13764  0BAF  318B               	pagesel	$
 13765  0BB0                     i1l546:	
 13766  0BB0  0008               	return
 13767  0BB1                     __end_of_TMR0_CallBack:	
 13768                           
 13769                           	psect	text119
 13770  0A46                     __ptext119:	
 13771 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13772 ;; Defined at:
 13773 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;		None
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      void 
 13780 ;; Registers used:
 13781 ;;		None
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; This function calls:
 13794 ;;		Nothing
 13795 ;; This function is called by:
 13796 ;;		_TMR0_Initialize
 13797 ;;		_TMR0_CallBack
 13798 ;; This function uses a non-reentrant model
 13799 ;;
 13800                           
 13801                           
 13802                           ;psect for function _TMR0_DefaultInterruptHandler
 13803  0A46                     _TMR0_DefaultInterruptHandler:	
 13804  0A46                     i1l552:	
 13805                           ;incstack = 0
 13806                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 13807                           
 13808  0A46  0008               	return
 13809  0A47                     __end_of_TMR0_DefaultInterruptHandler:	
 13810                           
 13811                           	psect	text120
 13812  03DF                     __ptext120:	
 13813 ;; *************** function _displayRefreshISR *****************
 13814 ;; Defined at:
 13815 ;;		line 476 in file "main.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;		None
 13818 ;; Auto vars:     Size  Location     Type
 13819 ;;		None
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  1    wreg      void 
 13822 ;; Registers used:
 13823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;Total ram usage:        2 bytes
 13834 ;; Hardware stack levels used:    1
 13835 ;; This function calls:
 13836 ;;		Nothing
 13837 ;; This function is called by:
 13838 ;;		_main
 13839 ;;		_TMR0_CallBack
 13840 ;; This function uses a non-reentrant model
 13841 ;;
 13842                           
 13843                           
 13844                           ;psect for function _displayRefreshISR
 13845  03DF                     _displayRefreshISR:	
 13846  03DF                     i1l4016:	
 13847                           ;incstack = 0
 13848                           ; Regs used in _displayRefreshISR: [wreg-fsr1h+status,2+status,0]
 13849                           
 13850                           
 13851                           ;main.c: 477:     static uint8_t i;;main.c: 478:     i &= 0x03;
 13852  03DF  3003               	movlw	3
 13853  03E0  00F0               	movwf	??_displayRefreshISR
 13854  03E1  0870               	movf	??_displayRefreshISR,w
 13855  03E2  05FC               	andwf	displayRefreshISR@i,f
 13856  03E3                     i1l4018:	
 13857                           
 13858                           ;main.c: 479:     LATD = displayBuff[i];
 13859  03E3  087C               	movf	displayRefreshISR@i,w
 13860  03E4  3E3C               	addlw	(low (_displayBuff| 0))& (0+255)
 13861  03E5  0086               	movwf	6
 13862  03E6  0187               	clrf	7
 13863  03E7  0801               	movf	1,w
 13864  03E8  0022               	movlb	2	; select bank2
 13865  03E9  008F               	movwf	15	;volatile
 13866                           
 13867                           ;main.c: 480:     switch(i){
 13868  03EA  2BF7               	goto	i1l4022
 13869  03EB                     i1l988:	
 13870                           ;main.c: 482:             do { LATAbits.LATA3 = 0; } while(0);
 13871                           
 13872  03EB  118C               	bcf	12,3	;volatile
 13873  03EC                     i1l990:	
 13874                           ;main.c: 483:             do { LATEbits.LATE1 = 1; } while(0);
 13875                           
 13876  03EC  1490               	bsf	16,1	;volatile
 13877  03ED  2C0D               	goto	i1l4024
 13878  03EE                     i1l994:	
 13879                           ;main.c: 486:             do { LATEbits.LATE1 = 0; } while(0);
 13880                           
 13881  03EE  1090               	bcf	16,1	;volatile
 13882  03EF                     i1l996:	
 13883                           ;main.c: 487:             do { LATCbits.LATC1 = 1; } while(0);
 13884                           
 13885  03EF  148E               	bsf	14,1	;volatile
 13886  03F0  2C0D               	goto	i1l4024
 13887  03F1                     i1l999:	
 13888                           ;main.c: 490:             do { LATCbits.LATC1 = 0; } while(0);
 13889                           
 13890  03F1  108E               	bcf	14,1	;volatile
 13891  03F2                     i1l1001:	
 13892                           ;main.c: 491:             do { LATAbits.LATA4 = 1; } while(0);
 13893                           
 13894  03F2  160C               	bsf	12,4	;volatile
 13895  03F3  2C0D               	goto	i1l4024
 13896  03F4                     i1l1004:	
 13897                           ;main.c: 494:             do { LATAbits.LATA4 = 0; } while(0);
 13898                           
 13899  03F4  120C               	bcf	12,4	;volatile
 13900  03F5                     i1l1006:	
 13901                           ;main.c: 495:             do { LATAbits.LATA3 = 1; } while(0);
 13902                           
 13903  03F5  158C               	bsf	12,3	;volatile
 13904  03F6  2C0D               	goto	i1l4024
 13905  03F7                     i1l4022:	
 13906  03F7  087C               	movf	displayRefreshISR@i,w
 13907  03F8  00F0               	movwf	??_displayRefreshISR
 13908  03F9  01F1               	clrf	??_displayRefreshISR+1
 13909                           
 13910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13911                           ; Switch size 1, requested type "simple"
 13912                           ; Number of cases is 1, Range of values is 0 to 0
 13913                           ; switch strategies available:
 13914                           ; Name         Instructions Cycles
 13915                           ; simple_byte            4     3 (average)
 13916                           ; direct_byte            8     6 (fixed)
 13917                           ; jumptable            260     6 (fixed)
 13918                           ;	Chosen strategy is simple_byte
 13919  03FA  0871               	movf	??_displayRefreshISR+1,w
 13920  03FB  3A00               	xorlw	0	; case 0
 13921  03FC  1903               	skipnz
 13922  03FD  2BFF               	goto	i1l6766
 13923  03FE  2C0D               	goto	i1l4024
 13924  03FF                     i1l6766:	
 13925                           
 13926                           ; Switch size 1, requested type "simple"
 13927                           ; Number of cases is 4, Range of values is 0 to 3
 13928                           ; switch strategies available:
 13929                           ; Name         Instructions Cycles
 13930                           ; simple_byte           13     7 (average)
 13931                           ; direct_byte           14     6 (fixed)
 13932                           ; jumptable            260     6 (fixed)
 13933                           ;	Chosen strategy is simple_byte
 13934  03FF  0870               	movf	??_displayRefreshISR,w
 13935  0400  3A00               	xorlw	0	; case 0
 13936  0401  1903               	skipnz
 13937  0402  2BEB               	goto	i1l988
 13938  0403  3A01               	xorlw	1	; case 1
 13939  0404  1903               	skipnz
 13940  0405  2BEE               	goto	i1l994
 13941  0406  3A03               	xorlw	3	; case 2
 13942  0407  1903               	skipnz
 13943  0408  2BF1               	goto	i1l999
 13944  0409  3A01               	xorlw	1	; case 3
 13945  040A  1903               	skipnz
 13946  040B  2BF4               	goto	i1l1004
 13947  040C  2C0D               	goto	i1l4024
 13948  040D                     i1l4024:	
 13949                           
 13950                           ;main.c: 499:     i++;
 13951  040D  3001               	movlw	1
 13952  040E  00F0               	movwf	??_displayRefreshISR
 13953  040F  0870               	movf	??_displayRefreshISR,w
 13954  0410  07FC               	addwf	displayRefreshISR@i,f
 13955                           
 13956                           ;main.c: 502:     if(flag_button_press_count[0] != 0){
 13957  0411  0020               	movlb	0	; select bank0
 13958  0412  0838               	movf	_flag_button_press_count,w
 13959  0413  1903               	btfsc	3,2
 13960  0414  2C16               	goto	u202_21
 13961  0415  2C17               	goto	u202_20
 13962  0416                     u202_21:	
 13963  0416  2C21               	goto	i1l1008
 13964  0417                     u202_20:	
 13965  0417                     i1l4026:	
 13966                           
 13967                           ;main.c: 503:   if(button_press_count[0] < 200) button_press_count[0]++;
 13968  0417  30C8               	movlw	200
 13969  0418  0234               	subwf	_button_press_count,w
 13970  0419  1803               	skipnc
 13971  041A  2C1C               	goto	u203_21
 13972  041B  2C1D               	goto	u203_20
 13973  041C                     u203_21:	
 13974  041C  2C21               	goto	i1l1008
 13975  041D                     u203_20:	
 13976  041D                     i1l4028:	
 13977  041D  3001               	movlw	1
 13978  041E  00F0               	movwf	??_displayRefreshISR
 13979  041F  0870               	movf	??_displayRefreshISR,w
 13980  0420  07B4               	addwf	_button_press_count,f
 13981  0421                     i1l1008:	
 13982                           ;main.c: 504:  }
 13983                           
 13984                           
 13985                           ;main.c: 505:     if(flag_button_press_count[1] != 0){
 13986  0421  0839               	movf	_flag_button_press_count+1,w
 13987  0422  1903               	btfsc	3,2
 13988  0423  2C25               	goto	u204_21
 13989  0424  2C26               	goto	u204_20
 13990  0425                     u204_21:	
 13991  0425  2C30               	goto	i1l1010
 13992  0426                     u204_20:	
 13993  0426                     i1l4030:	
 13994                           
 13995                           ;main.c: 506:   if(button_press_count[1] < 200) button_press_count[1]++;
 13996  0426  30C8               	movlw	200
 13997  0427  0235               	subwf	_button_press_count+1,w
 13998  0428  1803               	skipnc
 13999  0429  2C2B               	goto	u205_21
 14000  042A  2C2C               	goto	u205_20
 14001  042B                     u205_21:	
 14002  042B  2C30               	goto	i1l1010
 14003  042C                     u205_20:	
 14004  042C                     i1l4032:	
 14005  042C  3001               	movlw	1
 14006  042D  00F0               	movwf	??_displayRefreshISR
 14007  042E  0870               	movf	??_displayRefreshISR,w
 14008  042F  07B5               	addwf	_button_press_count+1,f
 14009  0430                     i1l1010:	
 14010                           ;main.c: 507:  }
 14011                           
 14012                           
 14013                           ;main.c: 508:     if(flag_button_press_count[2] != 0){
 14014  0430  083A               	movf	_flag_button_press_count+2,w
 14015  0431  1903               	btfsc	3,2
 14016  0432  2C34               	goto	u206_21
 14017  0433  2C35               	goto	u206_20
 14018  0434                     u206_21:	
 14019  0434  2C3F               	goto	i1l1012
 14020  0435                     u206_20:	
 14021  0435                     i1l4034:	
 14022                           
 14023                           ;main.c: 509:   if(button_press_count[2] < 200) button_press_count[2]++;
 14024  0435  30C8               	movlw	200
 14025  0436  0236               	subwf	_button_press_count+2,w
 14026  0437  1803               	skipnc
 14027  0438  2C3A               	goto	u207_21
 14028  0439  2C3B               	goto	u207_20
 14029  043A                     u207_21:	
 14030  043A  2C3F               	goto	i1l1012
 14031  043B                     u207_20:	
 14032  043B                     i1l4036:	
 14033  043B  3001               	movlw	1
 14034  043C  00F0               	movwf	??_displayRefreshISR
 14035  043D  0870               	movf	??_displayRefreshISR,w
 14036  043E  07B6               	addwf	_button_press_count+2,f
 14037  043F                     i1l1012:	
 14038                           ;main.c: 510:  }
 14039                           
 14040                           
 14041                           ;main.c: 511:     if(flag_button_press_count[3] != 0){
 14042  043F  083B               	movf	_flag_button_press_count+3,w
 14043  0440  1903               	btfsc	3,2
 14044  0441  2C43               	goto	u208_21
 14045  0442  2C44               	goto	u208_20
 14046  0443                     u208_21:	
 14047  0443  2C4E               	goto	i1l1016
 14048  0444                     u208_20:	
 14049  0444                     i1l4038:	
 14050                           
 14051                           ;main.c: 512:   if(button_press_count[3] < 200) button_press_count[3]++;
 14052  0444  30C8               	movlw	200
 14053  0445  0237               	subwf	_button_press_count+3,w
 14054  0446  1803               	skipnc
 14055  0447  2C49               	goto	u209_21
 14056  0448  2C4A               	goto	u209_20
 14057  0449                     u209_21:	
 14058  0449  2C4E               	goto	i1l1016
 14059  044A                     u209_20:	
 14060  044A                     i1l4040:	
 14061  044A  3001               	movlw	1
 14062  044B  00F0               	movwf	??_displayRefreshISR
 14063  044C  0870               	movf	??_displayRefreshISR,w
 14064  044D  07B7               	addwf	_button_press_count+3,f
 14065  044E                     i1l1016:	
 14066  044E  0008               	return
 14067  044F                     __end_of_displayRefreshISR:	
 14068                           
 14069                           	psect	text121
 14070  0B2D                     __ptext121:	
 14071 ;; *************** function _PIN_MANAGER_IOC *****************
 14072 ;; Defined at:
 14073 ;;		line 118 in file "mcc_generated_files/pin_manager.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;		None
 14076 ;; Auto vars:     Size  Location     Type
 14077 ;;		None
 14078 ;; Return value:  Size  Location     Type
 14079 ;;                  1    wreg      void 
 14080 ;; Registers used:
 14081 ;;		wreg, status,2, status,0, pclath, cstack
 14082 ;; Tracked objects:
 14083 ;;		On entry : 0/0
 14084 ;;		On exit  : 0/0
 14085 ;;		Unchanged: 0/0
 14086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;Total ram usage:        0 bytes
 14092 ;; Hardware stack levels used:    1
 14093 ;; Hardware stack levels required when called:    2
 14094 ;; This function calls:
 14095 ;;		_IOCBF4_ISR
 14096 ;; This function is called by:
 14097 ;;		_INTERRUPT_InterruptManager
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           
 14102                           ;psect for function _PIN_MANAGER_IOC
 14103  0B2D                     _PIN_MANAGER_IOC:	
 14104  0B2D                     i1l4472:	
 14105                           ;incstack = 0
 14106                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 14107                           
 14108                           
 14109                           ;mcc_generated_files/pin_manager.c: 121:     if(IOCBFbits.IOCBF4 == 1)
 14110  0B2D  0027               	movlb	7	; select bank7
 14111  0B2E  1E16               	btfss	22,4	;volatile
 14112  0B2F  2B31               	goto	u233_21
 14113  0B30  2B32               	goto	u233_20
 14114  0B31                     u233_21:	
 14115  0B31  2B35               	goto	i1l501
 14116  0B32                     u233_20:	
 14117  0B32                     i1l4474:	
 14118                           
 14119                           ;mcc_generated_files/pin_manager.c: 122:     {;mcc_generated_files/pin_manager.c: 123:  
      +                                 IOCBF4_ISR();
 14120  0B32  318C  2426  318B   	fcall	_IOCBF4_ISR
 14121  0B35                     i1l501:	
 14122  0B35  0008               	return
 14123  0B36                     __end_of_PIN_MANAGER_IOC:	
 14124                           
 14125                           	psect	text122
 14126  0C26                     __ptext122:	
 14127 ;; *************** function _IOCBF4_ISR *****************
 14128 ;; Defined at:
 14129 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;		None
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;		None
 14134 ;; Return value:  Size  Location     Type
 14135 ;;                  1    wreg      void 
 14136 ;; Registers used:
 14137 ;;		wreg, status,2, status,0, pclath, cstack
 14138 ;; Tracked objects:
 14139 ;;		On entry : 0/0
 14140 ;;		On exit  : 0/0
 14141 ;;		Unchanged: 0/0
 14142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14147 ;;Total ram usage:        0 bytes
 14148 ;; Hardware stack levels used:    1
 14149 ;; Hardware stack levels required when called:    1
 14150 ;; This function calls:
 14151 ;;		Absolute function
 14152 ;;		_IOCBF4_DefaultInterruptHandler
 14153 ;;		_secondISR
 14154 ;; This function is called by:
 14155 ;;		_PIN_MANAGER_IOC
 14156 ;; This function uses a non-reentrant model
 14157 ;;
 14158                           
 14159                           
 14160                           ;psect for function _IOCBF4_ISR
 14161  0C26                     _IOCBF4_ISR:	
 14162  0C26                     i1l4238:	
 14163                           ;incstack = 0
 14164                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 14165                           
 14166                           
 14167                           ;mcc_generated_files/pin_manager.c: 135:     if(IOCBF4_InterruptHandler)
 14168  0C26  0020               	movlb	0	; select bank0
 14169  0C27  086D               	movf	_IOCBF4_InterruptHandler,w
 14170  0C28  046E               	iorwf	_IOCBF4_InterruptHandler+1,w
 14171  0C29  1903               	btfsc	3,2
 14172  0C2A  2C2C               	goto	u215_21
 14173  0C2B  2C2D               	goto	u215_20
 14174  0C2C                     u215_21:	
 14175  0C2C  2C32               	goto	i1l4242
 14176  0C2D                     u215_20:	
 14177  0C2D                     i1l4240:	
 14178                           
 14179                           ;mcc_generated_files/pin_manager.c: 136:     {;mcc_generated_files/pin_manager.c: 137:  
      +                                 IOCBF4_InterruptHandler();
 14180  0C2D  086E               	movf	_IOCBF4_InterruptHandler+1,w
 14181  0C2E  008A               	movwf	10
 14182  0C2F  086D               	movf	_IOCBF4_InterruptHandler,w
 14183  0C30  000A               	callw
 14184  0C31  318C               	pagesel	$
 14185  0C32                     i1l4242:	
 14186                           
 14187                           ;mcc_generated_files/pin_manager.c: 139:     IOCBFbits.IOCBF4 = 0;
 14188  0C32  0027               	movlb	7	; select bank7
 14189  0C33  1216               	bcf	22,4	;volatile
 14190  0C34                     i1l505:	
 14191  0C34  0008               	return
 14192  0C35                     __end_of_IOCBF4_ISR:	
 14193                           
 14194                           	psect	text123
 14195  0A45                     __ptext123:	
 14196 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 14197 ;; Defined at:
 14198 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;		None
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      void 
 14205 ;; Registers used:
 14206 ;;		None
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;Total ram usage:        0 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		_PIN_MANAGER_Initialize
 14222 ;;		_IOCBF4_ISR
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           
 14227                           ;psect for function _IOCBF4_DefaultInterruptHandler
 14228  0A45                     _IOCBF4_DefaultInterruptHandler:	
 14229  0A45                     i1l511:	
 14230                           ;incstack = 0
 14231                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 14232                           
 14233  0A45  0008               	return
 14234  0A46                     __end_of_IOCBF4_DefaultInterruptHandler:	
 14235                           
 14236                           	psect	text124
 14237  0F05                     __ptext124:	
 14238 ;; *************** function _secondISR *****************
 14239 ;; Defined at:
 14240 ;;		line 457 in file "main.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;		None
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;		None
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  1    wreg      void 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14258 ;;Total ram usage:        0 bytes
 14259 ;; Hardware stack levels used:    1
 14260 ;; This function calls:
 14261 ;;		Nothing
 14262 ;; This function is called by:
 14263 ;;		_main
 14264 ;;		_IOCBF4_ISR
 14265 ;; This function uses a non-reentrant model
 14266 ;;
 14267                           
 14268                           
 14269                           ;psect for function _secondISR
 14270  0F05                     _secondISR:	
 14271  0F05                     i1l4000:	
 14272                           ;incstack = 0
 14273                           ; Regs used in _secondISR: [wreg+status,2+status,0]
 14274                           
 14275                           
 14276                           ;main.c: 459:     if(mode == MODE_NORMAL){
 14277  0F05  0020               	movlb	0	; select bank0
 14278  0F06  0847               	movf	_mode,w
 14279  0F07  1D03               	btfss	3,2
 14280  0F08  2F0A               	goto	u196_21
 14281  0F09  2F0B               	goto	u196_20
 14282  0F0A                     u196_21:	
 14283  0F0A  2F1B               	goto	i1l4006
 14284  0F0B                     u196_20:	
 14285  0F0B                     i1l4002:	
 14286  0F0B  1003               	clrc
 14287  0F0C  0022               	movlb	2	; select bank2
 14288  0F0D  1F8C               	btfss	12,7	;volatile
 14289  0F0E  1403               	setc
 14290  0F0F  1803               	btfsc	3,0
 14291  0F10  2F12               	goto	u197_21
 14292  0F11  2F15               	goto	u197_20
 14293  0F12                     u197_21:	
 14294  0F12  0022               	movlb	2	; select bank2
 14295  0F13  178C               	bsf	12,7	;volatile
 14296  0F14  2F17               	goto	u198_24
 14297  0F15                     u197_20:	
 14298  0F15  0022               	movlb	2	; select bank2
 14299  0F16  138C               	bcf	12,7	;volatile
 14300  0F17                     u198_24:	
 14301  0F17                     i1l4004:	
 14302                           
 14303                           ;main.c: 461:         flag_time_display_update = 1;
 14304  0F17  0020               	movlb	0	; select bank0
 14305  0F18  01C9               	clrf	_flag_time_display_update
 14306  0F19  0AC9               	incf	_flag_time_display_update,f
 14307                           
 14308                           ;main.c: 462:     } else {
 14309  0F1A  2F25               	goto	i1l4010
 14310  0F1B                     i1l4006:	
 14311                           
 14312                           ;main.c: 463:         if(flag_dot_blink) flag_dot_blink = 0;
 14313  0F1B  0848               	movf	_flag_dot_blink,w
 14314  0F1C  1903               	btfsc	3,2
 14315  0F1D  2F1F               	goto	u199_21
 14316  0F1E  2F20               	goto	u199_20
 14317  0F1F                     u199_21:	
 14318  0F1F  2F22               	goto	i1l977
 14319  0F20                     u199_20:	
 14320  0F20                     i1l4008:	
 14321  0F20  01C8               	clrf	_flag_dot_blink
 14322  0F21  2F17               	goto	i1l4004
 14323  0F22                     i1l977:	
 14324                           ;main.c: 464:         else flag_dot_blink = 1;
 14325                           
 14326  0F22  01C8               	clrf	_flag_dot_blink
 14327  0F23  0AC8               	incf	_flag_dot_blink,f
 14328  0F24  2F17               	goto	i1l4004
 14329  0F25                     i1l4010:	
 14330                           
 14331                           ;main.c: 468:     if(mode_timeout_count) {
 14332  0F25  0846               	movf	_mode_timeout_count,w
 14333  0F26  1903               	btfsc	3,2
 14334  0F27  2F29               	goto	u200_21
 14335  0F28  2F2A               	goto	u200_20
 14336  0F29                     u200_21:	
 14337  0F29  2F32               	goto	i1l981
 14338  0F2A                     u200_20:	
 14339  0F2A                     i1l4012:	
 14340                           
 14341                           ;main.c: 469:         mode_timeout_count--;
 14342  0F2A  3001               	movlw	1
 14343  0F2B  02C6               	subwf	_mode_timeout_count,f
 14344                           
 14345                           ;main.c: 470:         if(mode_timeout_count == 0){
 14346  0F2C  0846               	movf	_mode_timeout_count,w
 14347  0F2D  1D03               	btfss	3,2
 14348  0F2E  2F30               	goto	u201_21
 14349  0F2F  2F31               	goto	u201_20
 14350  0F30                     u201_21:	
 14351  0F30  2F32               	goto	i1l981
 14352  0F31                     u201_20:	
 14353  0F31                     i1l4014:	
 14354                           
 14355                           ;main.c: 471:             mode = MODE_NORMAL;
 14356  0F31  01C7               	clrf	_mode
 14357  0F32                     i1l981:	
 14358  0F32  0008               	return
 14359  0F33                     __end_of_secondISR:	
 14360  007E                     btemp	set	126	;btemp
 14361  007E                     int$flags	set	126
 14362  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    42
    Data        0
    BSS         86
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      79
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    do_I2C_TX$2376$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2382	const PTR FTN()enum E3411 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$2381	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2376	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S52$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    mssp_waitForEvent@timeout	PTR unsigned short  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_driver_setI2cISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c_driver_setBusCollisionISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayRefreshISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayRefreshISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondISR(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondISR(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i1_i2c_ISR(), Absolute function(), i2c_ISR(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    i2c_readDataBlock@data	PTR void  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    d.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    S373$data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E3411[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E3257 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S52$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S52$callbackTable	PTR FTN(PTR void ,)enum E3257[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E3257[6] size(2) Largest target is 1
		 -> i1_wr1RegCompleteHandler(), i1_i2c_restartWrite(), i1_rd1RegCompleteHandler(), i1_rd2RegCompleteHandler(), 
		 -> i1_wr2RegCompleteHandler(), i1_rdBlkRegCompleteHandler(), i1_returnReset(), i1_returnStop(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S52$data_ptr	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 9
		 -> rtcData(BANK0[9]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[3]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_i2c_ISR
    i1_i2c_ISR->i1_do_I2C_DO_ADDRESS_NACK
    i1_i2c_ISR->i1_do_I2C_RX
    i1_i2c_ISR->i1_do_I2C_TX
    i1_i2c_ISR->i1_do_I2C_TX_EMPTY
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack
    _TMR0_CallBack->_displayRefreshISR

Critical Paths under _main in BANK0

    _main->_initRTC
    _main->_intToBCD
    _updateRTC->_i2c_writeNBytes
    _intToBCD->_FIR_filter
    _initRTC->_i2c_readDataBlock
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c_driver_setBusCollisionISR
    _i2c_open->_i2c_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c_driver_TXData
    _do_I2C_TX->_i2c_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _FIR_filter->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  400312
                                             21 BANK0      5     5      0
                  _ADC_GetConversion
                         _FIR_filter
         _IOCBF4_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _bcdHourDecr
                        _bcdHourIncr
                      _bcdMinuteDecr
                      _bcdMinuteIncr
                  _i2c_readDataBlock
                            _initRTC
                           _intToBCD
                          _updateRTC
 ---------------------------------------------------------------------------------
 (1) _updateRTC                                            3     2      1   97845
                                             14 BANK0      3     2      1
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _intToBCD                                             9     7      2    1093
                                             12 BANK0      9     7      2
                  _ADC_GetConversion (ARG)
                         _FIR_filter (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initRTC                                              2     2      0  198695
                                             19 BANK0      2     2      0
                  _i2c_readDataBlock
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _i2c_writeNBytes                                      4     1      3   97693
                                             10 BANK0      4     1      3
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_readDataBlock                                    9     5      4  101002
                                             10 BANK0      9     5      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddressNACKCallback                           4     1      3    2259
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     310
                                              2 BANK0      3     3      0
                    _i2c_driver_open
      _i2c_driver_setBusCollisionISR
               _i2c_driver_setI2cISR
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_setI2cISR                                 2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_setBusCollisionISR                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_open                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_masterWrite                                      0     0      0   93060
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0   93060
                                              7 BANK0      3     3      0
                   _i2c_driver_start
                         _i2c_poller
                  _mssp_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp_IRQisEnabled                                    2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0   92992
                            _i2c_ISR
                  _mssp_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp_waitForEvent                                    1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   92937
                                              4 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                  _i2c_driver_isNACK
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   23211
                                              0 BANK0      3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                        _mssp_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp_setIRQ                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   23242
                                              1 BANK0      3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                  _i2c_driver_TXData
                  _i2c_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c_driver_isNACK                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_TXData                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   23211
                                              0 BANK0      3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
               _i2c_driver_getRXData
                 _i2c_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_getRXData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c_driver_sendNACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
                _i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_resetBus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                 _i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_startRX                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   23211
                                              0 BANK0      3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4692
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1      32
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4735
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2979
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (4) _setCallBack                                          5     2      3    1117
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _i2c_setBuffer                                        4     2      2    1574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                    _i2c_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c_driver_stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c_driver_restart                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                 _i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c_driver_sendACK                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_driver_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_close                                            2     2      0      37
                                              0 BANK0      2     2      0
                      _mssp_clearIRQ
                    _mssp_disableIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp_disableIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mssp_clearIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bcdMinuteIncr                                        1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcdMinuteDecr                                        1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcdHourIncr                                          1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcdHourDecr                                          1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     422
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCBF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FIR_filter                                           8     6      2     120
                                              4 BANK0      8     6      2
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0   18830
                   Absolute function *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (12) i1_i2c_ISR                                           3     3      0   18830
                                              3 COMMON     3     3      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
                i1_i2c_driver_isNACK
                    i1_mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (13) i1_mssp_clearIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_TX_EMPTY                                   3     3      0    4691
                                              0 COMMON     3     3      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                      i1_mssp_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) i1_mssp_setIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_TX                                         3     3      0    4713
                                              0 COMMON     3     3      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
                i1_i2c_driver_TXData
                i1_i2c_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_driver_isNACK                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
               i1_i2c_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
               i1_i2c_driver_restart
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
                i1_i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
                i1_i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_TXData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RX                                         3     3      0    4691
                                              0 COMMON     3     3      0
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
             i1_i2c_driver_getRXData
               i1_i2c_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_getRXData                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
              i1_i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
              i1_i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c_driver_sendNACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RESET                                      0     0      0       0
              i1_i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_resetBus                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RCEN                                       0     0      0       0
               i1_i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_startRX                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_DO_ADDRESS_NACK                            3     3      0    4691
                                              0 COMMON     3     3      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) i1_wr2RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_wr1RegCompleteHandler                             1     0      1    1044
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_returnStop                                        1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_returnReset                                       1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_rdBlkRegCompleteHandler                           1     0      1     935
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_rd2RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i1_rd1RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (15) i1_i2c_setDataCompleteCallback                       4     1      3     699
                                              5 COMMON     3     0      3
                                              0 BANK0      1     1      0
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (16) i1_setCallBack                                       5     2      3     287
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (15) i1_i2c_setBuffer                                     4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) i1_i2c_restartWrite                                  1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_STOP                                  0     0      0       0
                  i1_i2c_driver_stop
 ---------------------------------------------------------------------------------
 (15) i1_i2c_driver_stop                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART                               0     0      0       0
               i1_i2c_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_i2c_driver_restart                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_DO_ACK                                     0     0      0       0
               i1_i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (14) i1_i2c_driver_sendACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_busCollisionISR                                 0     0      0       0
       _i2c_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                  _displayRefreshISR *
 ---------------------------------------------------------------------------------
 (14) _displayRefreshISR                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCBF4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCBF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                          _secondISR *
 ---------------------------------------------------------------------------------
 (14) _secondISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IOCBF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _FIR_filter
     _ADC_GetConversion (ARG)
   _IOCBF4_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF4_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _bcdHourDecr
   _bcdHourIncr
   _bcdMinuteDecr
   _bcdMinuteIncr
   _i2c_readDataBlock
     _i2c_close
       _mssp_clearIRQ
       _mssp_disableIRQ
     _i2c_masterWrite
       _i2c_masterOperation
         _i2c_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c_driver_startRX
             _do_I2C_RESET *
               _i2c_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _i2c_driver_getRXData *
               _i2c_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c_driver_restart
             _do_I2C_SEND_STOP *
               _i2c_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _i2c_driver_TXData *
               _i2c_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _i2c_restartWrite *
               _mssp_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c_driver_isNACK *
             _mssp_clearIRQ *
           _mssp_waitForEvent
         _mssp_IRQisEnabled
     _i2c_open
       _i2c_driver_open
       _i2c_driver_setBusCollisionISR
       _i2c_driver_setI2cISR
       _mssp_clearIRQ
     _i2c_setAddressNACKCallback
       _setCallBack
     _i2c_setBuffer
     _i2c_setDataCompleteCallback
       _setCallBack
   _initRTC
     _i2c_readDataBlock
       _i2c_close
         _mssp_clearIRQ
         _mssp_disableIRQ
       _i2c_masterWrite
         _i2c_masterOperation
           _i2c_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c_driver_startRX
               _do_I2C_RESET *
                 _i2c_driver_resetBus
               _do_I2C_RX *
                 Absolute function(Fake) *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c_driver_sendNACK
                 _i2c_driver_getRXData *
                 _i2c_driver_sendACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_SEND_ADR_READ *
                 _i2c_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _do_I2C_TX *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART_READ *
                   _i2c_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_driver_TXData *
                 _i2c_driver_isNACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_TX_EMPTY *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _mssp_setIRQ *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _i2c_driver_isNACK *
               _mssp_clearIRQ *
             _mssp_waitForEvent
           _mssp_IRQisEnabled
       _i2c_open
         _i2c_driver_open
         _i2c_driver_setBusCollisionISR
         _i2c_driver_setI2cISR
         _mssp_clearIRQ
       _i2c_setAddressNACKCallback
         _setCallBack
       _i2c_setBuffer
       _i2c_setDataCompleteCallback
         _setCallBack
     _i2c_writeNBytes
       _i2c_close
         _mssp_clearIRQ
         _mssp_disableIRQ
       _i2c_masterWrite
         _i2c_masterOperation
           _i2c_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c_driver_startRX
               _do_I2C_RESET *
                 _i2c_driver_resetBus
               _do_I2C_RX *
                 Absolute function(Fake) *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c_driver_sendNACK
                 _i2c_driver_getRXData *
                 _i2c_driver_sendACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_SEND_ADR_READ *
                 _i2c_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _do_I2C_TX *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART_READ *
                   _i2c_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_driver_TXData *
                 _i2c_driver_isNACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_TX_EMPTY *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _mssp_setIRQ *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _i2c_driver_isNACK *
               _mssp_clearIRQ *
             _mssp_waitForEvent
           _mssp_IRQisEnabled
       _i2c_open
         _i2c_driver_open
         _i2c_driver_setBusCollisionISR
         _i2c_driver_setI2cISR
         _mssp_clearIRQ
       _i2c_setAddressNACKCallback
         _setCallBack
       _i2c_setBuffer
   _intToBCD
     _ADC_GetConversion (ARG)
     _FIR_filter (ARG)
       _ADC_GetConversion (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _updateRTC
     _i2c_writeNBytes
       _i2c_close
         _mssp_clearIRQ
         _mssp_disableIRQ
       _i2c_masterWrite
         _i2c_masterOperation
           _i2c_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_DO_NACK_RESTART *
                 _i2c_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c_driver_startRX
               _do_I2C_RESET *
                 _i2c_driver_resetBus
               _do_I2C_RX *
                 Absolute function(Fake) *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c_driver_sendNACK
                 _i2c_driver_getRXData *
                 _i2c_driver_sendACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_SEND_ADR_READ *
                 _i2c_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c_driver_stop
               _do_I2C_TX *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART_READ *
                   _i2c_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_driver_TXData *
                 _i2c_driver_isNACK *
                 _i2c_restartWrite *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _do_I2C_TX_EMPTY *
                 Absolute function(Fake) *
                 _do_I2C_SEND_RESTART *
                   _i2c_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c_driver_stop
                 _i2c_restartWrite *
                 _mssp_setIRQ *
                 _rd1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rd2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _rdBlkRegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _returnReset *
                 _returnStop *
                 _wr1RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
                 _wr2RegCompleteHandler *
                   _i2c_setBuffer
                   _i2c_setDataCompleteCallback
                     _setCallBack
               _i2c_driver_isNACK *
               _mssp_clearIRQ *
             _mssp_waitForEvent
           _mssp_IRQisEnabled
       _i2c_open
         _i2c_driver_open
         _i2c_driver_setBusCollisionISR
         _i2c_driver_setI2cISR
         _mssp_clearIRQ
       _i2c_setAddressNACKCallback
         _setCallBack
       _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _PIN_MANAGER_IOC *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _secondISR *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _displayRefreshISR *
   _i2c_busCollisionISR *
     _i2c_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c_driver_sendNACK
       i1_i2c_driver_getRXData *
       i1_i2c_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c_driver_stop
       i1_i2c_driver_TXData *
       i1_i2c_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c_driver_stop
       i1_i2c_restartWrite *
       i1_mssp_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c_driver_isNACK *
     i1_mssp_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul  8 18:20:51 2020

                __end_of_i2c_driver_restart 0A6E                         i1_i2c_driver_isNACK 0B0D  
                              returnReset@p 005C                                  __CFG_CP$ON 0000  
                __end_of_i2c_driver_startRX 0A74                      __size_of_bcdMinuteDecr 0034  
             _do_I2C_SEND_RESTART$intlevel0 0B67                                 _SSPSTATbits 0214  
                    __size_of_bcdMinuteIncr 0035                                          l61 0C09  
                                        l83 0DC2                                          l91 0CDD  
                                        l67 0C25                                          l84 0DC4  
                                        l76 059F                                          l77 05A1  
                                        l98 0E80                             i1_mssp_clearIRQ 0A5F  
                      __size_of_do_I2C_IDLE 0009                      __end_of_FVR_Initialize 0A8A  
                       _do_I2C_SEND_RESTART 0B63                        __size_of_do_I2C_RCEN 000B  
                           _timer0ReloadVal 007D                        __end_ofi1_returnStop 0A4B  
                      ?i1_i2c_driver_TXData 0070                                 i1_do_I2C_RX 05A2  
                               i1_do_I2C_TX 04A9                                 __CFG_LVP$ON 0000  
                      i1_i2c_driver_sendACK 0A7E                                         l110 0C17  
                                       l104 0AC7                                         l113 0BC8  
                                       l122 0B62                                         l131 0BED  
                                       l212 07FF                                         l204 0AD9  
                                       l116 0B50                                         l140 0B7D  
                                       l300 06F8                                         l125 0B6B  
                                       l134 0BD4                                         l207 0ADF  
                                       l231 0D0B                                         l119 0B59  
                                       l143 0B86                                         l128 0B74  
                                       l152 0FFF                                         l160 04A8  
                                       l137 0BA4                                         l146 0B8F  
                                       l252 0D22                                         l157 048C  
                                       l173 0522                                         l318 0AE5  
                                       l174 0550                                         l600 0A79  
                                       l433 0CB0                                         l249 0EAA  
                                       l530 0CC6                                         l442 0A8D  
                                       l267 0D39                                         l291 0DE2  
                                       l611 0C55                                         l436 0BB7  
                                       l508 0ACD                                         l188 076E  
                                       l198 0F63                                         l439 0BBC  
                                       l279 0CF4                                         l623 0A48  
                                       l607 0C4A                                         l615 0BE0  
                                       l632 0A70                                         l641 0A76  
                                       l706 0A89                                         l810 0DA6  
                                       l626 0A6A                                         l650 0AEB  
                                       l635 0B47                                         l803 06BA  
                                       l740 0DF9                                         l724 0B2C  
                                       l549 0AD3                                         l629 0A6D  
                                       l742 0E06                                         l822 07D8  
                                       l638 0A73                                         l806 0D6D  
                                       l831 0FCB                                         l591 0B99  
                                       l816 0D89                                         l656 0A91  
                                       l497 0F04                                         l921 0194  
                                       l594 0A67                                         l739 0DFA  
                                       l659 0A95                                         l597 0A64  
                                       l942 0273                                         l934 03DC  
                                       l696 0AF1                                         l960 0365  
                                       l937 0206                                         l866 067C  
                                       l954 0315                                         l890 0087  
                                       l699 0AF7                                         l876 0635  
                                       l948 02C4                                         l892 008E  
                                       l893 0197                                         l966 03B5  
                                       l894 0095                                         l889 007E  
                                       l899 00FA                                __CFG_CPD$OFF 0000  
                  i1_do_I2C_DO_NACK_RESTART 0ABE                __size_of_i2c_masterOperation 002A  
                      _returnStop$intlevel0 0AD8                                 ?_FIR_filter 0057  
                      i1_i2c_driver_restart 0A50               i2c_setDataCompleteCallback@cb 0058  
                  ?i1_rd2RegCompleteHandler 0054                       __size_of_do_I2C_RESET 000C  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_IESO$ON 0000                        i1_i2c_driver_startRX 0A56  
                     __end_ofi1_returnReset 0A4D          __end_of_IOCBF4_SetInterruptHandler 0ACE  
                _IOCBF4_SetInterruptHandler 0AC8                        ?i1_i2c_driver_isNACK 0070  
                  ?i1_wr2RegCompleteHandler 0054             ??i1_i2c_setDataCompleteCallback 0053  
                    i1_i2c_driver_getRXData 0A59                       __end_ofi1_mssp_setIRQ 0A5F  
                   ??_rd2RegCompleteHandler 005D                       i1_i2c_driver_sendNACK 0A82  
                                      l1446 0735                                        l1456 07A3  
                                      l6000 069C                                        l6010 06AA  
                                      l6002 06A0                               i1returnStop@p 0054  
                                      l5300 0B70                                        l6012 06AE  
                                      l6004 06A2                                        l6020 0D61  
                                      l6030 0D9A                                        l6022 0D8C  
                                      l6102 07D6                                        l5310 0A8E  
                                      l5302 0B73                                        l6006 06A4  
                                      l6014 0D55                                        l6040 0DA4  
                                      l6024 0D92                                        l6120 0FAF  
                                      l6112 0FA1                                        l5400 0B4F  
                                      l5312 0B82                                        l5320 0B8E  
                                      l6008 06A6                                        l6016 0D57  
                                      l6050 0D77                                        l6034 0D9C  
                                      l6130 0FB9                                        l6114 0FA7  
                                      l6106 0F9A                                        l5306 0AE8  
                                      l5314 0B85                                        l6018 0D5C  
                                      l6052 0D7D                                        l6044 0D70  
                                      l6036 0DA2                                        l6028 0D94  
                                      l6132 0FBF                                        l6124 0FB1  
                                      l6108 0F9F                                        l5308 0A71  
                                      l5324 0B3F                                        l5332 0A77  
                                      l5404 0BE5                                        l5412 0BCD  
                                      l5420 0B9E                                        l6300 007B  
                                      l6062 0D87                                        l6046 0D75  
                                      l6142 0FC9                                        l6126 0FB7  
                                      l6118 0FA9                                        l5270 0CC9  
                                      l5262 07DB                                        l5334 0AD8  
                                      l5342 0CF9                                        l5350 0D10  
                                      l5406 0BE7                                        l5414 0BCF  
                                      l5422 0BA0                                        l5430 0B7C  
                                      l5318 0B8B                                        l5502 0524  
                                      l6150 065E                                        l6310 0099  
                                      l6302 007F                                        l6056 0D7F  
                                      l6136 0FC1                                        l6080 07BC  
                                      l6072 07AE                                        l5272 0CCE  
                                      l5264 07E1                                        l5344 0D02  
                                      l5352 0D19                                        l5360 0D30  
                                      l5280 0A92                                        l5328 0A74  
                                      l5520 073D                                        l5408 0BEC  
                                      l5416 0BD3                                        l5424 0BA3  
                                      l5512 052C                                        l5600 0E61  
                                      l6152 0662                                        l6400 0169  
                                      l6320 00B2                                        l6312 009C  
                                      l6304 0084                                        l6058 0D85  
                                      l6138 0FC7                                        l6090 07C6  
                                      l6074 07B4                                        l6066 07A6  
                                      l5274 0CDC                                        l5266 07F2  
                                      l5370 0CF3                                        l5338 0ADE  
                                      l5346 0D0A                                        l5354 0D21  
                                      l5362 0D38                                        l5530 0746  
                                      l5282 0B55                                        l5290 0B61  
                                      l5442 0FDD                                        l5434 0FD0  
                                      l5506 0528                                        l5610 0E7B  
                                      l5602 0E63                                        l6154 0672  
                                      l6146 0636                                        l6410 0181  
                                      l6402 016A                                        l6330 00CC  
                                      l6322 00BA                                        l6314 00A1  
                                      l6306 008B                                        l4660 060B  
                                      l6092 07CC                                        l6084 07BE  
                                      l6068 07AC                                        l5276 0A6B  
                                      l5268 0BFC                                        l5380 0AE4  
                                      l5524 0741                                        l5284 0B58  
                                      l5428 0B79                                        l5436 0FD2  
                                      l5604 0E68                                        l5612 0E7E  
                                      l5620 0553                                        l6156 0678  
                                      l6148 063C                                        l6500 032A  
                                      l6420 0190                                        l6412 0187  
                                      l6404 016F                                        l6332 00D2  
                                      l6324 00BD                                        l6316 00A7  
                                      l6308 0092                                        l4662 0620  
                                      l6086 07C4                                        l6078 07B6  
                                      l5278 0A6E                                        l5366 0CE2  
                                      l5358 0D27                                        l5374 0DC9  
                                      l5526 0744                                        l5518 073A  
                                      l5390 0BC6                                        l5294 0B67  
                                      l5438 0FD9                                        l5462 045F  
                                      l5454 0453                                        l5550 0F3A  
                                      l5542 0C45                                        l5606 0E6C  
                                      l5630 056D                                        l5622 055A  
                                      l6502 0336                                        l6510 035A  
                                      l6430 01AE                                        l6422 0192  
                                      l6414 0190                                        l6406 0175  
                                      l6342 00EA                                        l6326 00C3  
                                      l6318 00AD                                        l6350 00FC  
                                      l4664 0622                                        l4656 05ED  
                                      l5800 0CB9                                        l6096 07CE  
                                      l5384 0A62                                        l5368 0CEB  
                                      l5376 0DE1                                        l5536 074A  
                                      l5392 0BC7                                        l5288 0B5E  
                                      l5296 0B6A                                        l5448 0FE1  
                                      l5480 04A7                                        l5472 0467  
                                      l5552 0F3F                                        l5560 0B90  
                                      l5608 0E71                                        l5640 0581  
                                      l5632 0572                                        l5624 0560  
                                      l6520 03A4                                        l6512 0360  
                                      l6504 0354                                        l6440 01EC  
                                      l6432 01C1                                        l6408 017B  
                                      l6360 011B                                        l6352 0101  
                                      l6344 00F0                                        l6336 00DB  
                                      l6424 0197                                        l6280 0060  
                                      l4658 0604                                        l5810 0B2A  
                                      l5802 0CBD                                        l6098 07D4  
                                      l5386 0BC1                                        l5474 048E  
                                      l5466 0463                                        l5458 045B  
                                      l5490 050E                                        l5554 0F46  
                                      l5546 0C50                                        l5570 0C12  
                                      l5650 0595                                        l5642 0582  
                                      l5634 0573                                        l5626 0561  
                                      l5618 0C18                                        l5730 0E8D  
                                      l6530 03B7                                        l6514 0367  
                                      l6450 0208                                        l6442 01F5  
                                      l6434 01CD                                        l6426 019C  
                                      l6362 011F                                        l6354 0107  
                                      l6338 00E1                                        l6290 0068  
                                      l6282 0063                                        l5812 0B2B  
                                      l5804 0CBE                                        l5660 0DB0  
                                      l5388 0BC4                                        l5396 0B4C  
                                      l5476 049A                                        l5492 0513  
                                      l5556 0F4C                                        l5548 0F37  
                                      l5564 0C0A                                        l5580 0BDA  
                                      l5652 059D                                        l5644 0587  
                                      l5636 0578                                        l5628 0562  
                                      l5740 06C5                                        l5732 0E96  
                                      l5820 0705                                        l6532 03BC  
                                      l6516 037A                                        l6460 0266  
                                      l6452 0221                                        l6444 01F7  
                                      l6436 01DF                                        l6428 01A1  
                                      l6380 013E                                        l6364 0122  
                                      l6356 010D                                        l6372 0131  
                                      l6348 00F9                                        l6292 006A  
                                      l6284 0065                                        l5806 0CBF  
                                      l5662 0DB6                                        l5558 0A68  
                                      l5398 0B4E                                        l5478 04A5  
                                      l5494 051D                                        l5566 0C0B  
                                      l5582 0BDB                                        l5590 0AEC  
                                      l5646 058A                                        l5638 057C  
                                      l5750 06F0                                        l5742 06CF  
                                      l5734 0E9F                                        l5726 0E83  
                                      l5830 0725                                        l5822 070A  
                                      l5814 06F9                                        l6534 03BD  
                                      l6518 0386                                        l6526 03AA  
                                      l6470 0294                                        l6454 0238  
                                      l6462 0268                                        l6438 01EB  
                                      l6446 01FC                                        l6390 0159  
                                      l6382 0144                                        l6374 0132  
                                      l6366 0128                                        l6358 0113  
                                      l6294 0071                                        l6286 0066  
                                      l5808 0B25                                        l5672 0AC8  
                                      l5760 0EE5                                        l5752 0ED8  
                                      l5664 0DB9                                        l5656 0DA7  
                                      l5496 0520                                        l5488 0502  
                                      l5568 0C0F                                        l5584 0BDD  
                                      l5592 0AF2                                        l5648 058D  
                                      l5744 06DB                                        l5736 0EA2  
                                      l5728 0E83                                        l5832 0726  
                                      l5824 070E                                        l5816 06FC  
                                      l5840 076F                                        l6536 03CF  
                                      l6528 03B0                                        l6480 02BF  
                                      l6472 02B2                                        l6464 026E  
                                      l6456 0252                                        l6448 0201  
                                      l6392 015F                                        l6384 014A  
                                      l6376 0133                                        l6296 0079  
                                      l6288 0067                                        l5770 0EF2  
                                      l5762 0EEA                                        l5754 0EDE  
                                      l5674 0ACE                                        l5594 0A65  
                                      l5658 0DAF                                        l5578 0BD5  
                                      l5746 06E4                                        l5738 06BD  
                                      l5834 072B                                        l5826 0712  
                                      l5818 0702                                        l5850 0786  
                                      l5842 0776                                        l6490 0308  
                                      l6482 02C6                                        l6474 02B7  
                                      l6466 0275                                        l6458 0262  
                                      l6386 0152                                        l6378 0138  
                                      l6298 007A                                        l5780 0EFA  
                                      l5772 0EF3                                        l5764 0EEC  
                                      l5756 0EE1                                        l5596 0E59  
                                      l5668 0AC3                                        l5748 06ED  
                                      l5828 0721                                        l5836 0731  
                                      l5852 0790                                        l5844 0779  
                                      l6484 02D9                                        l6468 0288  
                                      l6388 0156                                        l5790 0BB5  
                                      l5782 0EFB                                        l5774 0EF5  
                                      l5766 0EEE                                        l5758 0EE3  
                                      l6750 0542                                        l5598 0E60  
                                      l5854 0794                                        l5846 077E  
                                      l6486 02E5                                        l6494 030A  
                                      l6478 02B9                                        l6398 0168  
                                      l5784 0F03                                        l5776 0EF7  
                                      l5768 0EF0                                        l5792 0A8A  
                                      l6752 047E                                        l5856 0799  
                                      l5848 0782                                        l6496 0310  
                                      l6488 0303                                        l5794 0A86  
                                      l5786 0BB1                                        l5778 0EF9  
                                      l6754 0FF7                                        l5858 079F  
                                      l6498 0317                                        l5788 0BB4  
                                      l5796 0CB1                                        l5980 0C9E  
                                      l6756 0760                                        l5990 0DFF  
                                      l5982 0DE5                                        l5798 0CB6  
                                      l5984 0DF1                                        l5986 0DF2  
                                      l5994 067D                                        l5988 0DF6  
                                      l5996 0689                                        l5998 0697  
                              __CFG_WDTE$ON 0000                                        _LATA 010C  
                                      _LATB 010D                                        _LATC 010E  
                                      u4000 0678                                        _LATD 010F  
                                      u4001 0677                                        _LATE 0110  
                                      u3400 07E1                                        u3401 07E0  
                                      u3410 0CCE                                        u3411 0CCD  
                                      u3420 045A                                        u4300 00AD  
                                      u3421 0459                                        u4301 00AC  
                                      u3430 04A5                                        u3510 0BDA  
                                      u4310 00B2                                        u3431 04A4  
                                      u3511 0BD9                                        u4311 00B1  
                                      u3440 051D                                        u3520 0E60  
                                      u3600 06F8                                        u4400 0128  
                                      u4320 00C3                                        u4240 0084  
                                      u3441 051C                                        u3521 0E5F  
                                      u3601 06F7                                        u4401 0127  
                                      u4321 00C2                                        u4241 0083  
                                      u2570 0620                                        u3610 0BBC  
                                      u3450 0C4A                                        u3530 0E68  
                                      u4410 0138                                        u4330 00D2  
                                      u4250 008B                                        u2571 061F  
                                      u3611 0BBB                                        u3451 0C49  
                                      u3531 0E67                                        u4411 0137  
                                      u4331 00D1                                        u4251 008A  
                                      u2580 062F                                        u3460 0C4F  
                                      u3540 0E7B                                        u3620 0702  
                                      u4500 0187                                        u4420 013E  
                                      u4340 00E1                                        u4260 0092  
                                      u3461 0C4E                                        u3541 0E7A  
                                      u3621 0701                                        u4501 0186  
                                      u4421 013D                                        u4341 00E0  
                                      u4261 0091                                        u3470 0F3F  
                                      u3550 055A                                        u3710 0786  
                                      u4510 019C                                        u4430 0144  
                                      u4350 00F0                                        u4270 0099  
                                      u3471 0F3E                                        u3551 0559  
                                      u3711 0785                                        u4511 019B  
                                      u4431 0143                                        u4351 00EF  
                                      u4271 0098                                        u3800 0D92  
                                      u3560 0DAF                                        u3480 0F46  
                                      u3640 0712                                        u3720 0790  
                                      u4600 0273                                        u4520 01A1  
                                      u4440 014A                                        u4360 0101  
                                      u4280 00A1                                        u2585 062B  
                                      u3801 0D91                                        u3561 0DAE  
                                      u3481 0F45                                        u3641 0711  
                                      u3721 078F                                        u3705 077A  
                                      u4601 0272                                        u4521 01A0  
                                      u4441 0149                                        u4361 0100  
                                      u4281 00A0                                        u3810 0D9A  
                                      u3490 0C17                                        u3570 0E8D  
                                      u4450 015F                                        u4370 0107  
                                      u4290 00A7                                        u3811 0D99  
                                      u3491 0C16                                        u3571 0E8C  
                                      u3635 0706                                        u4451 015E  
                                      u4371 0106                                        u4291 00A6  
                                      u3820 0DA2                                        u3900 07CC  
                                      u3580 0EAA                                        u3660 0721  
                                      u3740 079F                                        u4700 0315  
                                      u4460 016F                                        u4380 010D  
                                      u3821 0DA1                                        u3901 07CB  
                                      u3581 0EA9                                        u3661 0720  
                                      u3741 079E                                        u3725 078C  
                                      u4701 0314                                        u4461 016E  
                                      u4381 010C                                        u3830 0D75  
                                      u3910 07D4                                        u3590 06CF  
                                      u4630 02B7                                        u4550 01F5  
                                      u4470 0175                                        u4390 0113  
                                      u3831 0D74                                        u3911 07D3  
                                      u3591 06CE                                        u3655 0713  
                                      u3735 0795                                        u4631 02B6  
                                      u4615 0279                                        u4551 01F4  
                                      u4535 01B2                                        u4471 0174  
                                      u4391 0112                                        u3840 0D7D  
                                      u3920 0F9F                                        u3680 0731  
                                      u4800 03B5                                        u4640 02BF  
                                      u4560 0201                                        u4480 017B  
                                      u3841 0D7C                                        u3921 0F9E  
                                      u3681 0730                                        u3665 071D  
                                      u4801 03B4                                        u4641 02BE  
                                      u4625 0297                                        u4561 0200  
                                      u4545 01D0                                        u4481 017A  
                                      u3850 0D85                                        u3930 0FA7  
                                      u3690 0776                                        u4730 0359  
                                      u4650 02C4                                        u4570 0206  
                                      u4490 0181                                        u3851 0D84  
                                      u3931 0FA6                                        u3675 0727  
                                      u3691 0775                                        u4731 0358  
                                      u4715 031B                                        u4651 02C3  
                                      u4571 0205                                        u4491 0180  
                                      u3780 0DFF                                        u3940 0FAF  
                                      u3860 07AC                                        u4740 0360  
                                      i1l61 0BFB                                        u3781 0DFE  
                                      u3941 0FAE                                        u3861 07AB  
                                      u4741 035F                                        u4725 0339  
                                      u3950 0FB7                                        u3870 07B4  
                                      u3790 069C                                        u4750 0365  
                                      u4590 026E                                        u3951 0FB6  
                                      u3871 07B3                                        u3791 069B  
                                      u4815 03C0                                        u4751 0364  
                                      u4591 026D                                        u3960 0FBF  
                                      u3880 07BC                                        u4680 0308  
                                      u3961 0FBE                                        u3881 07BB  
                                      u4681 0307                                        u4665 02CA  
                                      u4585 023D                                        u3970 0FC7  
                                      u3890 07C4                                        u4690 0310  
                                      i1l91 0C44                                        u3971 0FC6  
                                      u3891 07C3                                        u4827 0683  
                                      u4691 030F                                        u4675 02E8  
                                      u4780 03A9                                        u4837 0C51  
                                      u4781 03A8                                        u4765 036B  
                                      u4790 03B0                                        u4847 0DF3  
                                      u4791 03AF                                        u4775 0389  
                                      u3985 064F                                        u3994 0658  
                                      u3995 0656                        ?_do_I2C_SEND_RESTART 0070  
                                      _PLLR 04D6                                        _TMR0 0015  
                                      _WPUB 020D                                        _WPUE 0210  
                   ??_wr2RegCompleteHandler 005D                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                       i1_i2c_driver_resetBus 0A47  
         __size_of_do_I2C_SEND_RESTART_READ 0009                   ?_do_I2C_SEND_RESTART_READ 0070  
                           ??_mssp_clearIRQ 0053                                        _main 0060  
                                      _mode 0047                   __size_of_do_I2C_SEND_STOP 0009  
                    __size_of_do_I2C_DO_ACK 0009                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                         ??i1_do_I2C_DO_ACK 0070                               __CFG_BOREN$ON 0000  
                     ?_do_I2C_SEND_ADR_READ 0070                    __size_of_i2c_writeNBytes 002A  
                                      start 0044                               _i2c_setBuffer 0CC7  
                             __CFG_MCLRE$ON 0000                             __end_of_i2c_ISR 0F64  
          __size_of_rdBlkRegCompleteHandler 001E                    ??_do_I2C_DO_NACK_RESTART 0053  
                             i1_do_I2C_IDLE 0A9B                               i1_do_I2C_RCEN 0AFE  
                   __end_of_TMR0_Initialize 0CC7                                _do_I2C_RESET 0BBD  
                            i1returnReset@p 0054                               __CFG_PLLEN$ON 0000  
            ??_TMR0_DefaultInterruptHandler 0070                             ?_FVR_Initialize 0070  
            __size_of_OSCILLATOR_Initialize 000C                 i2c_setAddressNACKCallback@p 005A  
                     ??i1_i2c_driver_TXData 0070               __end_of_OSCILLATOR_Initialize 0BBD  
                       __size_of_IOCBF4_ISR 000F                       ?i1_i2c_driver_sendACK 0070  
                                     ?_main 0070                    __size_of_mssp_disableIRQ 0003  
               i2c_driver_setI2cISR@handler 0053                             __end_of___lwdiv 0736  
                                     i1l201 0A7D                                       i1l113 0B1C  
                                     i1l122 0AA9                                       i1l131 0B3E  
                                     i1l212 0E2C                                       i1l204 0A4A  
                                     i1l116 0A9F                                       i1l140 0AB8  
                                     i1l125 0AAE                                       i1l134 0B24  
                                     i1l207 0A4C                                       i1l231 0C79  
                                     i1l119 0AA4                                       i1l143 0ABD  
                                     i1l128 0AB3                                       i1l152 0ED7  
                                     i1l160 04FD                                       i1l137 0B04  
                                     i1l146 0AC2                                       i1l403 0042  
                                     i1l252 0C8B                                       i1l404 0042  
                                     i1l501 0B35                                       i1l157 04E1  
                                     i1l173 05BF                                       i1l318 0003  
                                     i1l174 05EC                                       i1l511 0A45  
                                     i1l600 0A5E                                       i1l505 0C34  
                           __end_of___lwmod 07A4                                       i1l267 0C9D  
                                     i1l291 0D52                                       i1l188 0F97  
                                     i1l542 0B0C                                       i1l198 0E56  
                                     i1l279 0C67                                       i1l623 0A47  
                                     i1l552 0A46                                       i1l632 0A55  
                                     i1l641 0A5B                                       i1l546 0BB0  
                                     i1l650 0A9A                                       i1l394 0012  
                                     i1l635 0B14                                       i1l396 001E  
                                     i1l629 0A52                                       i1l638 0A58  
                                     i1l399 0032                                       i1l656 0A81  
                                     i1l659 0A85                                       i1l693 0A4F  
                                     i1l597 0A61                                       i1l981 0F32  
                                     i1l990 03EC                                       i1l977 0F22  
                                     i1l994 03EE                                       i1l996 03EF  
                                     i1l988 03EB                                       i1l999 03F1  
                     ?i1_i2c_driver_restart 0070                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
                                     _TRISD 008F                                       _TRISE 0090  
                     ?i1_i2c_driver_startRX 0070           __size_of_TMR0_SetInterruptHandler 0006  
                 ?_TMR0_SetInterruptHandler 0053                               __CFG_PWRTE$ON 0000  
                     ??i1_i2c_driver_isNACK 0070                                 i2c_open@ret 0057  
                          __end_of_TMR0_ISR 0B0D                          __size_ofi1_i2c_ISR 002A  
                           __end_of_initRTC 06BB                     __end_of_PIN_MANAGER_IOC 0B36  
                            _WDT_Initialize 0A8A                               _bcdMinuteDecr 0F98  
                      _i2c_driver_getRXData 0A74                ?i1_do_I2C_SEND_RESTART_WRITE 0070  
                ?_do_I2C_SEND_RESTART_WRITE 0070                               _bcdMinuteIncr 07A4  
                     ??_do_I2C_SEND_RESTART 0053                                       pclath 000A  
                _i2c_driver_busCollisionISR 007A                      ?_do_I2C_SEND_ADR_WRITE 0070  
                                     status 0003                                       wtemp0 007E  
                        i2c_driver_TXData@d 0053                   __size_of_i2c_driver_start 0003  
                            ?_i2c_setBuffer 0053                                ?_setCallBack 0053  
                   __end_ofi1_mssp_clearIRQ 0A62                         __size_of_FIR_filter 0049  
                             _fsmStateTable 1000                             __initialization 0046  
            __size_ofi1_do_I2C_SEND_RESTART 0005                                  _i2c_poller 0C0A  
             __end_ofi1_do_I2C_SEND_RESTART 0AAF                                  _i2c_status 00A0  
                            ?i1_do_I2C_IDLE 0070                                __end_of_main 03DF  
                            ?i1_do_I2C_RCEN 0070                  __end_ofi1_do_I2C_SEND_STOP 0AB4  
                          __end_of_i2c_open 05A2                        _i2c_driver_setI2cISR 0AF2  
               ?_INTERRUPT_InterruptManager 0070             __end_ofi1_rd2RegCompleteHandler 0C9E  
                             setCallBack@cb 0053                              i1_do_I2C_RESET 0B15  
                             _do_I2C_DO_ACK 0B75                                      ??_main 0068  
                         ?_i2c_restartWrite 005C             __end_ofi1_wr2RegCompleteHandler 0C68  
                              i2c_close@ret 0054                             _i2c_driver_open 0BD5  
                        ??_i2c_restartWrite 005D                             _i2c_driver_stop 0A6E  
                    __end_of_WDT_Initialize 0A8E                     ?_do_I2C_DO_ADDRESS_NACK 0070  
                    ?i1_i2c_driver_sendNACK 0070                              ?_bcdMinuteDecr 0070  
                                    _ADCON0 009D                                      _ADCON1 009E  
                     ?_i2c_driver_getRXData 0070                              ?_bcdMinuteIncr 0070  
                                    _ADRESH 009C                                      _EEADRH 0192  
                                    _ADRESL 009B                                      _EEADRL 0191  
                                    _EEDATH 0194                                      _EEDATL 0193  
                                    _EECON2 0196                                      _APFCON 011D  
           i1i2c_setDataCompleteCallback@cb 0075                                      _ANSELA 018C  
                                    _ANSELB 018D                                      _ANSELD 018F  
                                    _ANSELE 0190                                      _BORCON 0116  
                   ?i1_do_I2C_SEND_ADR_READ 0070                      ?i1_i2c_driver_resetBus 0070  
                                    i1l1001 03F2                                      i1l1010 0430  
                                    i1l1012 043F                                      i1l1004 03F4  
                                    i1l1006 03F5                                      i1l1016 044E  
                                    i1l1008 0421                                      u200_20 0F2A  
                                    i1l4000 0F05                                      u200_21 0F29  
                                    i1l4010 0F25                                      i1l4002 0F0B  
                                    i1l4012 0F2A                                      i1l4004 0F17  
                                    i1l4014 0F31                                      i1l4006 0F1B  
                                    i1l4030 0426                                      i1l4022 03F7  
                                    u201_20 0F31                                      i1l4008 0F20  
                                    i1l4040 044A                                      i1l4032 042C  
                                    i1l4024 040D                                      i1l4016 03DF  
                                    u201_21 0F30                                      i1l4034 0435  
                                    i1l4026 0417                                      i1l4018 03E3  
                                    i1l4036 043B                                      i1l4028 041D  
                                    i1l4140 0A59                                      i1l4132 0A5C  
                                    i1l4300 0B1A                                      i1l4052 0AA5  
                                    i1l4060 0AAD                                      i1l4038 0444  
                                    i1l4134 0B0D                                      i1l4302 0B1B  
                                    i1l4310 0A9E                                      i1l4046 0AA0  
                                    i1l4054 0AA8                                      i1l4070 0AB9  
                                    i1l4240 0C2D                                      u202_20 0417  
                                    i1l4144 0A97                                      i1l4048 0AA3  
                                    i1l4064 0AAF                                      i1l4072 0ABC  
                                    u202_21 0416                                      i1l4242 0C32  
                                    i1l4146 0A7E                                      i1l4138 0A56  
                                    i1l4306 0A9B                                      i1l4058 0AAA  
                                    i1l4066 0AB2                                      i1l4314 0B36  
                                    i1l4322 0B1D                                      i1l4330 0AFE  
                                    i1l4244 0BA5                                      i1l4148 0A4D  
                                    i1l4308 0A9D                                      i1l4316 0B38  
                                    i1l4324 0B1F                                      i1l4332 0B00  
                                    i1l4340 0AB7                                      i1l4076 0ABE  
                                    i1l4238 0C26                                      i1l4246 0BAB  
                                    i1l4318 0B3D                                      i1l4326 0B23  
                                    i1l4334 0B03                                      i1l4078 0AC1  
                                    u203_20 041D                                      u203_21 041C  
                                    i1l4338 0AB4                                      i1l4470 0B09  
                                    i1l4472 0B2D                                      u204_20 0426  
                                    i1l4464 0A7A                                      i1l4296 0B15  
                                    i1l6160 0E2D                                      u204_21 0425  
                                    i1l4474 0B32                                      i1l4466 0B05  
                                    i1l3930 0C36                                      i1l4298 0B18  
                                    i1l4458 0A5F                                      i1l6162 0E30  
                                    i1l4468 0B06                                      i1l3932 0C3B  
                                    i1l5700 0C8C                                      i1l3940 0A82  
                                    i1l6164 0E35                                      i1l6260 0006  
                                    i1l3934 0C43                                      i1l5710 0C5F  
                                    i1l5702 0C95                                      i1l6166 0E3C  
                                    i1l6270 0022                                      i1l6262 000A  
                                    u205_20 042C                                      i1l3936 0A50  
                                    i1l5616 0BEE                                      i1l5712 0C66  
                                    i1l5704 0C9C                                      i1l6168 0E41  
                                    i1l6272 0027                                      i1l6264 000E  
                                    u205_21 042B                                      i1l3938 0A53  
                                    i1l5722 0002                                      i1l6274 002C  
                                    i1l6266 0016                                      i1l5572 0E08  
                                    i1l5708 0C56                                      i1l5716 0D3A  
                                    i1l6276 0037                                      i1l6268 001A  
                                    i1l5574 0E0E                                      i1l5718 0D51  
                                    i1l5910 04FC                                      i1l5902 04BD  
                                    i1l6278 003C                                      u206_20 0435  
                                    i1l5576 0E1F                                      i1l5680 0A4B  
                                    i1l5904 04E3                                      i1l5920 05AC  
                                    u206_21 0434                                      i1l5906 04EF  
                                    i1l5922 05B0                                      i1l5676 0A49  
                                    i1l5684 0C68                                      i1l5692 0C7A  
                                    i1l5908 04FA                                      i1l5932 05C1  
                                    i1l5924 05BA                                      i1l5686 0C71  
                                    i1l5694 0C83                                      i1l5950 0F64  
                                    i1l5870 0EB6                                      i1l5862 0EAB  
                                    i1l5942 05C9                                      i1l5926 05BD  
                                    i1l5918 05A2                                      u215_20 0C2D  
                                    u207_20 043B                                      i1l5688 0C78  
                                    i1l5696 0C8A                                      i1l5952 0F67  
                                    i1l5864 0EAD                                      i1l6760 04D3  
                                    i1l5936 05C5                                      u215_21 0C2C  
                                    u207_21 043A                                      i1l5962 0F70  
                                    i1l6762 0ECF                                      i1l5866 0EB2  
                                    i1l6764 0F89                                      i1l5956 0F6B  
                                    i1l5876 0EBA                                      i1l5892 04B5  
                                    i1l5884 04A9                                      i1l6766 03FF  
                                    i1l5958 0F6E                                      i1l6758 05DE  
                                    u208_20 0444                                      u216_20 0BAB  
                                    i1l5968 0F74                                      i1l5896 04B9  
                                    i1l5888 04B1                                      u208_21 0443  
                                    u216_21 0BAA                                      u233_20 0B32  
                                    u209_20 044A                                      u401_20 0E35  
                                    u233_21 0B31                                      u209_21 0449  
                                    u401_21 0E34                                      u402_20 0E3C  
                                    u402_21 0E3B                                      _FVRCON 0117  
                                    u420_20 0027                                      u420_21 0026  
                                    u421_20 002C                                      u421_21 002B  
                                    u350_20 0E0E                                      u422_20 0037  
                                    u350_21 0E0D                                      u422_21 0036  
                                    u423_20 003C                                      u415_20 000A  
                                    u423_21 003B                                      u415_21 0009  
                                    u416_20 000E                                      u416_21 000D  
                                    u193_20 0C3B                                      u417_20 0016  
                                    u193_21 0C3A                                      u417_21 0015  
             ??i1_do_I2C_SEND_RESTART_WRITE 0070                                      u418_20 001A  
                                    u418_21 0019                                      u419_20 0022  
                                    u419_21 0021                                      u196_20 0F0B  
                                    u196_21 0F0A                                      u197_20 0F15  
                                    u197_21 0F12                                      u198_24 0F17  
                                    u199_20 0F20                                      u375_20 04B0  
                                    u199_21 0F1F                                      u375_21 04AF  
                                    u376_20 04FA                                      u376_21 04F9  
                                    u377_20 05BA                          __size_of_i2c_close 001E  
                                    u377_21 05B9                                      _OSCCON 0099  
                   i1_rd1RegCompleteHandler 0C7A                      ??_do_I2C_SEND_ADR_READ 0053  
                                    _WDTCON 0097                                      _SSPADD 0212  
                                    _SSPBUF 0211                    rdBlkRegCompleteHandler@p 005C  
                                    _SSPMSK 0213                                   ??_i2c_ISR 0057  
                   i1_wr1RegCompleteHandler 0C68                 ??i1_rdBlkRegCompleteHandler 0078  
                       _do_I2C_RX$intlevel0 0502                       __size_ofi1_returnStop 0002  
               __end_of_do_I2C_DO_NACK_STOP 0B87                           __end_ofi1_i2c_ISR 0E57  
       __end_of_i2c_setDataCompleteCallback 0C0A                 _i2c_setDataCompleteCallback 0BFC  
                           _i2c_masterWrite 0AC3                              __CFG_STVREN$ON 0000  
                          __end_of_intToBCD 067D             __size_of_do_I2C_DO_NACK_RESTART 0009  
                     ?_i2c_driver_setI2cISR 0053                                   ??___lwdiv 0057  
                         ??_i2c_writeNBytes 0060                                   ??___lwmod 0057  
                    __end_ofi1_do_I2C_RESET 0B1D                             i1_i2c_setBuffer 0C35  
                    ??i1_i2c_driver_sendACK 0070                            ?_TMR0_Initialize 0070  
                            ?_do_I2C_DO_ACK 0070                 __size_ofi1_i2c_restartWrite 0002  
                    ??i1_i2c_driver_restart 0070                      ??i1_i2c_driver_startRX 0070  
                                 ??_initRTC 0066              __end_of_do_I2C_DO_ADDRESS_NACK 1000  
               ?_i2c_setAddressNACKCallback 0058                             ?_WDT_Initialize 0070  
                              ?_returnReset 005C               _do_I2C_DO_NACK_STOP$intlevel0 0B82  
                  ADC_GetConversion@channel 0056                  i1rdBlkRegCompleteHandler@p 0054  
                     __end_of_TMR0_CallBack 0BB1           __size_ofi1_do_I2C_DO_ADDRESS_NACK 002D  
                              ?_mssp_setIRQ 0070              __end_ofi1_do_I2C_SEND_ADR_READ 0B3F  
                         ??_mssp_disableIRQ 0053    TMR0_SetInterruptHandler@InterruptHandler 0053  
IOCBF4_SetInterruptHandler@InterruptHandler 0053                   ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                          ?_PIN_MANAGER_IOC 0070                                ??_IOCBF4_ISR 0070  
                         i1_do_I2C_TX_EMPTY 0F64                           _SYSTEM_Initialize 0C9E  
                   __end_of__initialization 005C                             ??_i2c_setBuffer 0055  
            _do_I2C_SEND_ADR_READ$intlevel0 0BE5                            _do_I2C_SEND_STOP 0B6C  
                              i1_returnStop 0A49                       i1_do_I2C_DO_NACK_STOP 0AB9  
                        __size_of_do_I2C_RX 0053                          __size_of_do_I2C_TX 005A  
                        ?i1_do_I2C_TX_EMPTY 0070                          ?_SYSTEM_Initialize 0070  
         _rdBlkRegCompleteHandler$intlevel0 0DC9                         _i2c_masterOperation 0E57  
                  __size_of_do_I2C_TX_EMPTY 0039                            ?i1_mssp_clearIRQ 0070  
                           ??i1_do_I2C_IDLE 0070                             ??i1_do_I2C_RCEN 0070  
                   _rdBlkRegCompleteHandler 0DC5                                 ?_i2c_poller 0070  
                            __pcstackCOMMON 0070                  ??i1_do_I2C_DO_NACK_RESTART 0070  
                       _do_I2C_TX$intlevel0 0453                         ??i1_do_I2C_TX_EMPTY 0070  
                       ??_SYSTEM_Initialize 0056                                   ?_TMR0_ISR 0070  
                           ?i1_do_I2C_RESET 0070                     __end_of_i2c_driver_open 0BE1  
                   __end_of_i2c_driver_stop 0A71                           __end_of_i2c_close 0DC5  
                              ?i1_do_I2C_RX 0070                                ?i1_do_I2C_TX 0070  
                        __end_of_IOCBF4_ISR 0C35                         i1i2c_restartWrite@p 0054  
                        _i2c_driver_sendACK 0A8E                   i1_rdBlkRegCompleteHandler 0D3A  
                      ?_i2c_masterOperation 0070                                ??_FIR_filter 0059  
            i1i2c_setDataCompleteCallback@p 0077                     ?i1_i2c_driver_getRXData 0070  
                            _OPTION_REGbits 0095                ??i1_do_I2C_SEND_RESTART_READ 0070  
                        _i2c_driver_restart 0A6B                             ??_bcdMinuteDecr 0053  
                           ??_bcdMinuteIncr 0053                      __size_ofi1_setCallBack 0026  
                        _i2c_driver_startRX 0A71                      ??_i2c_driver_getRXData 0053  
                           i1setCallBack@cb 0070                    i1rd1RegCompleteHandler@p 0054  
                           i1_do_I2C_DO_ACK 0AB4                 ?_IOCBF4_SetInterruptHandler 0053  
                       ?_i2c_driver_sendACK 0070                              setCallBack@idx 0057  
                 __end_ofi1_do_I2C_TX_EMPTY 0F98                      _do_I2C_DO_NACK_RESTART 0B87  
                 __end_of_SYSTEM_Initialize 0CB1                   ??i1_rd1RegCompleteHandler 0078  
                       ?_i2c_driver_restart 0070                                  __pbssBANK0 0020  
                                __pbssBANK1 00A0                   ??i1_wr1RegCompleteHandler 0078  
                       ?_i2c_driver_startRX 0070              __size_of_rd2RegCompleteHandler 0017  
                                 ?_i2c_open 0070               __end_of_rd2RegCompleteHandler 0D3A  
                             ??_bcdHourDecr 0053                               ??_bcdHourIncr 0053  
                           __CFG_VCAPEN$RA0 0000              __size_of_wr2RegCompleteHandler 0017  
          __size_ofi1_rd2RegCompleteHandler 0012               __end_of_wr2RegCompleteHandler 0CF5  
                   __end_of_i2c_masterWrite 0AC8                    i1wr1RegCompleteHandler@p 0054  
                          _i2c_driver_start 0A68                       _rd1RegCompleteHandler 0D0C  
                   __end_ofi1_i2c_setBuffer 0C45            __size_ofi1_wr2RegCompleteHandler 0012  
                     _do_I2C_IDLE$intlevel0 0B4C                       _wr1RegCompleteHandler 0CF5  
              __size_of_i2c_busCollisionISR 0004                            ??_FVR_Initialize 0053  
           _wr1RegCompleteHandler$intlevel0 0CF9             _rd1RegCompleteHandler$intlevel0 0D10  
                                __pmaintext 0060                               ??_do_I2C_IDLE 0053  
                        __end_of_FIR_filter 0636                        __size_of_setCallBack 0027  
                             ??_do_I2C_RCEN 0053                        ??_i2c_driver_sendACK 0053  
                    ??_i2c_driver_setI2cISR 0055            __end_of_TMR0_SetInterruptHandler 0AD4  
                        __size_of_secondISR 002E                                  ??_TMR0_ISR 0072  
                           ??_do_I2C_DO_ACK 0053                                  __pintentry 0004  
                      ??_i2c_driver_restart 0053                __size_of_i2c_driver_sendNACK 0004  
                      ??_i2c_driver_startRX 0053                         intToBCD@binaryInput 005F  
          ??_IOCBF4_DefaultInterruptHandler 0070             ?_IOCBF4_DefaultInterruptHandler 0070  
                       i2c_setBuffer@buffer 0056                __size_of_i2c_driver_resetBus 0001  
            __end_ofi1_i2c_driver_getRXData 0A5C              ?_i2c_driver_setBusCollisionISR 0053  
                   __size_of_ADC_Initialize 0008                       ??_i2c_masterOperation 005A  
                         __end_of_do_I2C_RX 0551                           __end_of_do_I2C_TX 04A9  
                     i2c_readDataBlock@data 005E                    ?i1_do_I2C_SEND_ADR_WRITE 0070  
                        __size_of_updateRTC 001B                                     _OSCTUNE 0098  
                                _displayNum 1020                         __size_of_i2c_poller 000E  
                                   _SSPCON1 0215                                     _SSPCON2 0216  
                   ??_do_I2C_SEND_ADR_WRITE 0054         _do_I2C_SEND_RESTART_WRITE$intlevel0 0B5E  
                                   _SSPSTAT 0214                 ??_do_I2C_SEND_RESTART_WRITE 0053  
                                 ?_intToBCD 005F                      ?i1_do_I2C_DO_NACK_STOP 0070  
                         _mssp_IRQisEnabled 0B90                                  ??_i2c_open 0055  
                                   _i2c_ISR 0F33                   ??_rdBlkRegCompleteHandler 005D  
                         _mssp_waitForEvent 0C45                          ?_mssp_IRQisEnabled 0070  
                     __end_of_mssp_clearIRQ 0A65                       _returnReset$intlevel0 0ADE  
                     _do_I2C_RCEN$intlevel0 0B9E                               i1_setCallBack 0E07  
                        ?_mssp_waitForEvent 0070            _do_I2C_DO_ADDRESS_NACK$intlevel0 0FD0  
               __end_ofi1_i2c_driver_TXData 0A9B                         __end_of_bcdHourDecr 0D8A  
                       __end_of_bcdHourIncr 0DA7         __size_of_i2c_setAddressNACKCallback 000E  
                    __size_ofi1_returnReset 0002                         ??_mssp_IRQisEnabled 0053  
                                   ___lwdiv 06F9                                     ___lwmod 076F  
                    __size_ofi1_mssp_setIRQ 0003                           ??_do_I2C_TX_EMPTY 0053  
                          ?_i2c_driver_open 0070                         ??_mssp_waitForEvent 0053  
                          ?_i2c_driver_stop 0070                      i2c_writeNBytes@address 0060  
               __end_ofi1_i2c_driver_isNACK 0B15                     __end_ofi1_do_I2C_DO_ACK 0AB9  
                                   __ptext1 0D53                                     __ptext2 0636  
                                   __ptext3 076F                                     __ptext4 06F9  
                                   __ptext5 067D                                     __ptext6 0E81  
                                   __ptext7 06BB                                     __ptext8 0C18  
                                   __ptext9 0551                          i2c_readDataBlock@d 0063  
                       __end_of_do_I2C_IDLE 0B51                         __end_of_do_I2C_RCEN 0BA5  
                                   _initRTC 067D                       _OSCILLATOR_Initialize 0BB1  
                   ??i1_i2c_driver_sendNACK 0070                 __end_of_do_I2C_SEND_RESTART 0B6C  
                  ??_PIN_MANAGER_Initialize 0055                                     _rtcData 004A  
                                 _IOCBFbits 0396                               bcdHourDecr@hr 0053  
                    i2c_masterOperation@ret 005C                                   _IOCBNbits 0395  
                   ??i1_i2c_driver_resetBus 0070                                   _IOCBPbits 0394  
                        i1_do_I2C_SEND_STOP 0AAF                  _do_I2C_SEND_STOP$intlevel0 0B70  
                __size_ofi1_do_I2C_TX_EMPTY 0034                    _do_I2C_SEND_RESTART_READ 0B51  
                __size_of_SYSTEM_Initialize 0013                                     clrloop0 0AF9  
                 __end_of_mssp_IRQisEnabled 0B9A                           __end_of_secondISR 0F33  
                             bcdHourIncr@hr 0053                        __size_of_returnReset 0006  
                      end_of_initialization 005C                        __size_of_mssp_setIRQ 0003  
                                ??_intToBCD 0061                   __end_of_mssp_waitForEvent 0C56  
                 __size_of_i2c_restartWrite 0006                         ?i1_do_I2C_SEND_STOP 0070  
                    ?_rd1RegCompleteHandler 005C                             _i2c_writeNBytes 0E81  
                          ?_i2c_masterWrite 0070                      ?_wr1RegCompleteHandler 005C  
                            ?i1_setCallBack 0070                            ?i1_i2c_setBuffer 0070  
                         __end_of_updateRTC 0D6E                   _do_I2C_SEND_RESTART_WRITE 0B5A  
                     i1_do_I2C_SEND_RESTART 0AAA            __end_ofi1_do_I2C_DO_ADDRESS_NACK 0ED8  
                        _button_press_count 0034             __end_ofi1_do_I2C_SEND_ADR_WRITE 0B25  
                           _mssp_disableIRQ 0A65                            ??_WDT_Initialize 0053  
                                 i1_i2c_ISR 0E2D                        ??i1_do_I2C_SEND_STOP 0070  
                                _returnStop 0AD4                    _TMR0_SetInterruptHandler 0ACE  
                                 _PORTBbits 000D             __end_of_rdBlkRegCompleteHandler 0DE3  
                  __end_of_do_I2C_SEND_STOP 0B75          __end_ofi1_do_I2C_SEND_RESTART_READ 0AA5  
                i1_do_I2C_SEND_RESTART_READ 0AA0                            __CFG_FOSC$INTOSC 0000  
                      __size_ofi1_do_I2C_RX 004B                        __size_ofi1_do_I2C_TX 0055  
      __size_of_i2c_setDataCompleteCallback 000E                               i1_returnReset 0A4B  
                               returnStop@p 005C                               i1_mssp_setIRQ 0A5C  
        __size_ofi1_rdBlkRegCompleteHandler 0019                i2c_setDataCompleteCallback@p 005A  
                   i1_rd2RegCompleteHandler 0C8C                                 _bcdHourDecr 0D6E  
                               _bcdHourIncr 0D8A                     i1_wr2RegCompleteHandler 0C56  
             __size_of_do_I2C_SEND_ADR_READ 000D                            ??i1_do_I2C_RESET 0070  
                  _flag_time_display_update 0049                                ??_i2c_poller 005A  
                               _do_I2C_IDLE 0B48                                 _do_I2C_RCEN 0B9A  
                __end_ofi1_i2c_restartWrite 0004                               intToBCD@shift 0066  
      __end_of_i2c_driver_clearBusCollision 0A50       __size_of_i2c_driver_clearBusCollision 0003  
              _i2c_driver_clearBusCollision 0A4D                          _mode_timeout_count 0046  
                         __size_of_TMR0_ISR 0008                                  ?i1_i2c_ISR 0070  
                            _ADC_Initialize 0B25                            ?i1_do_I2C_DO_ACK 0070  
                    ?_OSCILLATOR_Initialize 0070               __size_ofi1_i2c_driver_sendACK 0004  
                         intToBCD@bcdResult 0064                __size_of_do_I2C_DO_NACK_STOP 0009  
                  __end_of_i2c_driver_start 0A6B               __size_ofi1_i2c_driver_restart 0003  
                   ?_do_I2C_DO_NACK_RESTART 0070                         start_initialization 0046  
                        updateRTC@bcdMinute 0061                                   _i2c_close 0DA7  
             __size_ofi1_i2c_driver_startRX 0003                         _i2c_busCollisionISR 0A7A  
                  __size_of_TMR0_Initialize 0016             __size_of_PIN_MANAGER_Initialize 002D  
                            ?i1_returnReset 0054                            FIR_filter@buffer 0020  
                   __end_of_i2c_writeNBytes 0EAB         __end_ofi1_do_I2C_SEND_RESTART_WRITE 0AAA  
               i1_do_I2C_SEND_RESTART_WRITE 0AA5                              ?i1_mssp_setIRQ 0070  
                            _flag_dot_blink 0048                               FIR_filter@sum 0030  
                __size_of_mssp_IRQisEnabled 000A                            FIR_filter@oldest 0040  
                          FIR_filter@sample 0057                                setCallBack@p 0055  
                        __end_of_i2c_poller 0C18                           _displayRefreshISR 03DF  
                       _i2c_driver_sendNACK 0A92                             i2c_open@address 0056  
                   i2c_setBuffer@bufferSize 0053                  __size_of_mssp_waitForEvent 0011  
                    rd1RegCompleteHandler@p 005C                          ?_displayRefreshISR 0070  
                       _i2c_driver_resetBus 0A48                             ??i1_setCallBack 0073  
                   _flag_button_press_count 0038                       __end_of_i2c_setBuffer 0CDE  
                         __size_of_i2c_open 0051                    __size_of_PIN_MANAGER_IOC 0009  
     __end_ofi1_i2c_setDataCompleteCallback 0BFC      __size_ofi1_i2c_setDataCompleteCallback 000E  
             i1_i2c_setDataCompleteCallback 0BEE                        ?_i2c_busCollisionISR 0070  
                   __end_of_mssp_disableIRQ 0A68                            i1setCallBack@idx 0074  
                       ??_displayRefreshISR 0070                       __end_ofi1_do_I2C_IDLE 0AA0  
                     __end_ofi1_do_I2C_RCEN 0B05                   i1i2c_setBuffer@bufferSize 0070  
                    ?i1_do_I2C_SEND_RESTART 0070                      wr1RegCompleteHandler@p 005C  
                    __size_of_TMR0_CallBack 000C                      __end_of_ADC_Initialize 0B2D  
                      ?_i2c_driver_sendNACK 0070                               ?_do_I2C_RESET 0070  
                 _do_I2C_TX_EMPTY$intlevel0 073A                    __size_ofi1_mssp_clearIRQ 0003  
                               ?_returnStop 005C                        ?_i2c_driver_resetBus 0070  
                         _i2c_driver_TXData 0AE6              __end_of_do_I2C_DO_NACK_RESTART 0B90  
             ?_i2c_driver_clearBusCollision 0070                           _i2c_driver_i2cISR 0044  
                  i1_do_I2C_DO_ADDRESS_NACK 0EAB                          ?_i2c_driver_TXData 0070  
                               __pbssCOMMON 0078                                  ?_i2c_close 0070  
                                 ___latbits 0003                               __pcstackBANK0 0053  
         __size_ofi1_do_I2C_DO_NACK_RESTART 0005                    i1rd2RegCompleteHandler@p 0054  
                                 _do_I2C_RX 04FE                   ?i1_do_I2C_DO_NACK_RESTART 0070  
                                 _do_I2C_TX 044F                   __end_of_displayRefreshISR 044F  
                         _i2c_driver_isNACK 0B3F                       __end_of_bcdMinuteDecr 0FCC  
                   ??i1_do_I2C_DO_NACK_STOP 0070                       __end_of_bcdMinuteIncr 07D9  
                          updateRTC@bcdHour 0063                   ??i1_rd2RegCompleteHandler 0078  
             __size_of_i2c_driver_getRXData 0003      __end_of_IOCBF4_DefaultInterruptHandler 0A46  
   __size_of_IOCBF4_DefaultInterruptHandler 0001              _IOCBF4_DefaultInterruptHandler 0A45  
                        ?_i2c_driver_isNACK 0070                         ??_i2c_driver_TXData 0053  
            __size_of_do_I2C_SEND_ADR_WRITE 000C                   ??i1_wr2RegCompleteHandler 0078  
             __end_of_do_I2C_SEND_ADR_WRITE 0BD5             ??_i2c_driver_setBusCollisionISR 0055  
                            i1setCallBack@p 0072                            _i2c_restartWrite 0AE0  
                _i2c_restartWrite$intlevel0 0AE4                                    ?_i2c_ISR 0070  
           _do_I2C_SEND_ADR_WRITE$intlevel0 0BCD            __size_ofi1_do_I2C_SEND_ADR_WRITE 0008  
                           _do_I2C_TX_EMPTY 0736                       _TMR0_InterruptHandler 0078  
                         __size_of_intToBCD 0047                               ??_setCallBack 0056  
                                 __pnvBANK0 006D                    i1wr2RegCompleteHandler@p 0054  
                     _rd2RegCompleteHandler 0D23                         ??_i2c_driver_isNACK 0053  
                     ??_i2c_busCollisionISR 0070                       __end_of_fsmStateTable 1020  
                          ___lwdiv@dividend 0055                      _PIN_MANAGER_Initialize 0ED8  
                     _wr2RegCompleteHandler 0CDE                 __size_of_i2c_driver_sendACK 0004  
                            ??_do_I2C_RESET 0053                                   __ptext100 0A56  
                                 __ptext101 0002                                   __ptext110 0E07  
                                 __ptext102 0D3A                                   __ptext111 0C35  
                                 __ptext103 0C8C                                   __ptext120 03DF  
                                 __ptext112 0A53                                   __ptext104 0C7A  
                                 __ptext121 0B2D                                   __ptext113 0A50  
                                 __ptext105 0C68                                   __ptext122 0C26  
                                 __ptext114 0A7E                                   __ptext106 0A4B  
                                 __ptext123 0A45                                   __ptext115 0A7A  
                                 __ptext107 0A49                                   __ptext124 0F05  
                                 __ptext116 0A4D                                   __ptext108 0C56  
                     ??_i2c_driver_sendNACK 0053                                   __ptext117 0B05  
                                 __ptext109 0BEE                                   __ptext118 0BA5  
                                 __ptext119 0A46                 __end_of_i2c_masterOperation 0E81  
                                  ?___lwdiv 0053                    ??_do_I2C_DO_ADDRESS_NACK 0053  
                                  ?___lwmod 0053                             ?_ADC_Initialize 0070  
             __size_of_i2c_driver_setI2cISR 0006                 __size_of_i2c_driver_restart 0003  
                      i2c_readDataBlock@len 005F                   __end_of_i2c_driver_TXData 0AEC  
                      i2c_readDataBlock@reg 005D                       __end_of_do_I2C_DO_ACK 0B7E  
                     ??_i2c_driver_resetBus 0053                 __size_of_i2c_driver_startRX 0003  
                               ??i1_i2c_ISR 0073                ??_INTERRUPT_InterruptManager 0076  
                ??_do_I2C_SEND_RESTART_READ 0053                    ??i1_do_I2C_SEND_ADR_READ 0070  
                                  ?_initRTC 0070                             ??i1_returnReset 0078  
                         _i2c_readDataBlock 06BB                   __end_of_i2c_driver_isNACK 0B48  
                  ?i1_rd1RegCompleteHandler 0054          __size_of_do_I2C_SEND_RESTART_WRITE 0009  
                           ??i1_mssp_setIRQ 0070              __size_ofi1_i2c_driver_sendNACK 0004  
             __end_ofi1_i2c_driver_sendNACK 0A86                    ?i1_wr1RegCompleteHandler 0054  
                                ?_do_I2C_RX 0070                                  ?_do_I2C_TX 0070  
                        ?_i2c_readDataBlock 005D                            ___lwdiv@quotient 0059  
                          ?_i2c_writeNBytes 005D              __size_ofi1_i2c_driver_resetBus 0001  
                             _TMR0_CallBack 0BA5               __end_ofi1_i2c_driver_resetBus 0A48  
                   ??_rd1RegCompleteHandler 005D                           _i2c_ISR$intlevel0 0F37  
                   ??_wr1RegCompleteHandler 005D                           ??_TMR0_Initialize 0055  
                       ??_i2c_readDataBlock 0061                                    _LATAbits 010C  
                                 _secondISR 0F05                                    _LATCbits 010E  
                                  _LATEbits 0110                         __size_of_returnStop 0006  
                                 clear_ram0 0AF8                                    _PIE1bits 0091  
                                  _PIE2bits 0092         __size_of_INTERRUPT_InterruptManager 0040  
                ??_TMR0_SetInterruptHandler 0055                                    _PIR1bits 0011  
                                  _PIR2bits 0012                            ?_mssp_disableIRQ 0070  
                                  _TMR0_ISR 0B05                ?_i2c_setDataCompleteCallback 0058  
            ?i1_i2c_setDataCompleteCallback 0075                                 _displayBuff 003C  
                       __end_of_setCallBack 0800                           ??_PIN_MANAGER_IOC 0070  
                                 _updateRTC 0D53                                  _ADCON0bits 009D  
                 __end_of_i2c_readDataBlock 06F9                __size_ofi1_i2c_driver_TXData 0005  
                         i1_i2c_driver_stop 0A53                i2c_setAddressNACKCallback@cb 0058  
                         ?_do_I2C_SEND_STOP 0070                 ?i1_do_I2C_SEND_RESTART_READ 0070  
                   __size_of_FVR_Initialize 0004                          ?i1_i2c_driver_stop 0070  
                               ??_i2c_close 0053                               ??_returnReset 005D  
                        ??_do_I2C_SEND_STOP 0053                      __size_of_mssp_clearIRQ 0003  
                  __size_of_i2c_driver_open 000C                           ??i1_mssp_clearIRQ 0070  
              ??_i2c_setAddressNACKCallback 005B                    __size_of_i2c_driver_stop 0003  
                __size_of_displayRefreshISR 0070           __end_of_do_I2C_SEND_RESTART_WRITE 0B63  
              __size_ofi1_i2c_driver_isNACK 0008                               ??_mssp_setIRQ 0053  
            ??_i2c_driver_clearBusCollision 0070                              ?_TMR0_CallBack 0070  
                   __end_of_do_I2C_TX_EMPTY 076F                    ?_rdBlkRegCompleteHandler 005C  
                       ??i1_i2c_driver_stop 0070                __size_of_do_I2C_SEND_RESTART 0009  
                   _do_I2C_DO_ACK$intlevel0 0B79                                    _i2c_open 0551  
                             ?i1_returnStop 0054                                ?_bcdHourDecr 0070  
                    ?_rd2RegCompleteHandler 005C                                  ?_secondISR 0070  
                              ?_bcdHourIncr 0070                         _do_I2C_DO_NACK_STOP 0B7E  
                                _EECON1bits 0195                            __size_of_i2c_ISR 0031  
                    ?_wr2RegCompleteHandler 005C             _wr2RegCompleteHandler$intlevel0 0CE2  
           _rd2RegCompleteHandler$intlevel0 0D27       __end_of_i2c_driver_setBusCollisionISR 0AF2  
    __size_of_i2c_driver_setBusCollisionISR 0006               _i2c_driver_setBusCollisionISR 0AEC  
                         _ADC_GetConversion 0DE3                         i2c_writeNBytes@data 005D  
                              ?_do_I2C_IDLE 0070                    ??i1_i2c_driver_getRXData 0070  
                              ?_do_I2C_RCEN 0070                     ??_OSCILLATOR_Initialize 0053  
                        ?_ADC_GetConversion 0053                    __size_of_i2c_masterWrite 0005  
                __size_of_i2c_driver_TXData 0006             __size_of_do_I2C_DO_ADDRESS_NACK 0034  
                 __end_ofi1_i2c_driver_stop 0A56                          __end_of_displayNum 102A  
                     i1i2c_setBuffer@buffer 0073                            __size_of___lwdiv 003D  
                                ?_updateRTC 0061                            __size_of___lwmod 0035  
             ??_i2c_setDataCompleteCallback 005B             __end_ofi1_rd1RegCompleteHandler 0C8C  
                  __size_ofi1_i2c_setBuffer 0010                               ??i1_do_I2C_RX 0070  
                             ??i1_do_I2C_TX 0070          _do_I2C_SEND_RESTART_READ$intlevel0 0B55  
               __size_ofi1_do_I2C_SEND_STOP 0005                                    _bcd_temp 0042  
           __end_ofi1_wr1RegCompleteHandler 0C7A                        ?_do_I2C_DO_NACK_STOP 0070  
              __end_of_do_I2C_SEND_ADR_READ 0BEE                         ??_ADC_GetConversion 0055  
           __size_ofi1_do_I2C_SEND_ADR_READ 0009                  __size_of_i2c_driver_isNACK 0009  
                   _IOCBF4_InterruptHandler 006D                           ?_i2c_driver_start 0070  
                          __size_of_initRTC 003E                          i1_i2c_restartWrite 0002  
                           ___lwdiv@divisor 0053                                 ??_do_I2C_RX 0053  
                               ??_do_I2C_TX 0054                             ___lwdiv@counter 0058  
                        ??_i2c_driver_start 0053                                    __ptext10 0AF2  
                                  __ptext11 0AEC                                    __ptext20 044F  
                                  __ptext12 0BD5                                    __ptext21 0FCC  
                                  __ptext13 0AC3                                    __ptext30 0B5A  
                                  __ptext22 0B87                                    __ptext14 0E57  
                                  __ptext31 0B51                                    __ptext23 0B7E  
                                  __ptext15 0B90                                    __ptext40 0A48  
                                  __ptext32 0B48                                    __ptext24 0B75  
                                  __ptext16 0C0A                                    __ptext41 0A71  
                                  __ptext33 0BBD                                    __ptext25 0B9A  
                                  __ptext17 0C45                                    __ptext50 0BFC  
                                  __ptext42 0DC5                                    __ptext34 0736  
                                  __ptext26 0BC9                                    __ptext18 0F33  
                                  __ptext51 07D9                                    __ptext43 0D23  
                                  __ptext35 0A77                                    __ptext27 0BE1  
                                  __ptext19 04FE                                    __ptext60 07A4  
                                  __ptext52 0CC7                                    __ptext44 0D0C  
                                  __ptext36 0B3F                                    __ptext28 0B6C  
                                  __ptext61 0F98                                    __ptext53 0A6E  
                                  __ptext45 0CF5                                    __ptext37 0AE6  
                                  __ptext29 0B63                                    __ptext70 0BB1  
                                  __ptext62 0D8A                                    __ptext54 0A6B  
                                  __ptext46 0AE0                                    __ptext38 0A74  
                                  __ptext71 0A86                                    __ptext63 0D6E  
                                  __ptext55 0A8E                                    __ptext47 0ADA  
                                  __ptext39 0A92                                    __ptext80 0EAB  
                                  __ptext72 0B25                                    __ptext64 0C9E  
                                  __ptext56 0A68                                    __ptext48 0AD4  
                                  __ptext81 0ABE                                    __ptext73 05ED  
                                  __ptext65 0A8A                                    __ptext57 0DA7  
                                  __ptext49 0CDE                                    __ptext90 0AA0  
                                  __ptext82 0AB9                                    __ptext74 0DE3  
                                  __ptext66 0CB1                                    __ptext58 0A65  
                                  __ptext91 0A9B                                    __ptext83 0AB4  
                                  __ptext67 0ACE                                    __ptext59 0A62  
                                  __ptext92 0B15                                    __ptext84 0AFE  
                                  __ptext76 0E2D                                    __ptext68 0ED8  
                                  __ptext93 0F64                                    __ptext85 0B1D  
                                  __ptext77 0A5F                                    __ptext69 0AC8  
                                  __ptext94 0A5C                                    __ptext86 0B36  
                                  __ptext78 05A2                                    __ptext95 0B0D  
                                  __ptext87 0AAF                                    __ptext79 04A9  
                                  __ptext96 0A96                                    __ptext88 0AAA  
                                  __ptext97 0A59                                    __ptext89 0AA5  
                                  __ptext98 0A82                                    __ptext99 0A47  
              ??_IOCBF4_SetInterruptHandler 0055                        __end_of_do_I2C_RESET 0BC9  
                                _IOCBF4_ISR 0C26                              ??i1_returnStop 0078  
                                  _intToBCD 0636                     i1_do_I2C_SEND_ADR_WRITE 0B1D  
                       ?i1_i2c_restartWrite 0054                __end_ofi1_i2c_driver_sendACK 0A82  
                       __end_of_returnReset 0AE0                               __size_of_main 037F  
                       __end_of_mssp_setIRQ 0A7A                __end_ofi1_i2c_driver_restart 0A53  
                      i1i2c_driver_TXData@d 0070        __end_of_TMR0_DefaultInterruptHandler 0A47  
     __size_of_TMR0_DefaultInterruptHandler 0001                _TMR0_DefaultInterruptHandler 0A46  
                 __end_of_ADC_GetConversion 0E07                __end_ofi1_i2c_driver_startRX 0A59  
                  i2c_readDataBlock@address 0062                                 _setCallBack 07D9  
                   ??i1_do_I2C_SEND_RESTART 0070                               _mssp_clearIRQ 0A62  
                   i2c_masterOperation@read 005B        __size_ofi1_do_I2C_SEND_RESTART_WRITE 0005  
                                  int$flags 007E                  ??i1_do_I2C_DO_ADDRESS_NACK 0070  
          __end_ofi1_do_I2C_DO_NACK_RESTART 0AC3          __end_of_INTERRUPT_InterruptManager 0044  
                _INTERRUPT_InterruptManager 0004                        ??i1_i2c_restartWrite 0078  
          __end_of_do_I2C_SEND_RESTART_READ 0B5A                                ??_returnStop 005D  
                  __end_of_i2c_restartWrite 0AE6                       ??_do_I2C_DO_NACK_STOP 0053  
                __size_of_i2c_readDataBlock 003E                    mssp_waitForEvent@timeout 0053  
       __size_of_IOCBF4_SetInterruptHandler 0006        i2c_driver_setBusCollisionISR@handler 0053  
                                _FIR_filter 05ED                                  _INTCONbits 000B  
                           ??_TMR0_CallBack 0072                                  _FVRCONbits 0117  
                        i2c_writeNBytes@len 005E                         __end_ofi1_do_I2C_RX 05ED  
                       __end_ofi1_do_I2C_TX 04FE                    __size_ofi1_do_I2C_DO_ACK 0005  
                          ?_do_I2C_TX_EMPTY 0070                     __size_of_WDT_Initialize 0004  
                    _do_I2C_DO_ADDRESS_NACK 0FCC              __size_ofi1_do_I2C_DO_NACK_STOP 0005  
                                  intlevel1 0000               __end_ofi1_do_I2C_DO_NACK_STOP 0ABE  
                    _do_I2C_RESET$intlevel0 0BC1                      rd2RegCompleteHandler@p 005C  
                         ??_i2c_driver_open 0053                            ___lwmod@dividend 0055  
                         ??_i2c_driver_stop 0053                     ?_PIN_MANAGER_Initialize 0070  
                               ??_secondISR 0070                           i2c_restartWrite@p 005C  
                    i1_do_I2C_SEND_ADR_READ 0B36                           __CFG_CLKOUTEN$OFF 0000  
                ?i1_rdBlkRegCompleteHandler 0054                          __end_of_returnStop 0ADA  
                            ?_mssp_clearIRQ 0070                       __end_ofi1_setCallBack 0E2D  
                          ??_ADC_Initialize 0053         __size_ofi1_do_I2C_SEND_RESTART_READ 0005  
             ?_TMR0_DefaultInterruptHandler 0070                __end_of_i2c_driver_getRXData 0A77  
           __size_ofi1_i2c_driver_getRXData 0003                      wr2RegCompleteHandler@p 005C  
                           bcdMinuteDecr@mn 0053                  __size_ofi1_i2c_driver_stop 0003  
                               ??_updateRTC 0062                          displayRefreshISR@i 007C  
                             __pstringtext1 1000                               __pstringtext2 1020  
                           bcdMinuteIncr@mn 0053                              _FVR_Initialize 0A86  
                   __size_ofi1_do_I2C_RESET 0008                                  _OPTION_REG 0095  
                           ___lwmod@divisor 0053                             _TMR0_Initialize 0CB1  
                         ??_i2c_masterWrite 005D          __end_of_i2c_setAddressNACKCallback 0C26  
                _i2c_setAddressNACKCallback 0C18                             ___lwmod@counter 0058  
                    __size_of_i2c_setBuffer 0017                           ??i1_i2c_setBuffer 0072  
                               _returnReset 0ADA            _do_I2C_DO_NACK_RESTART$intlevel0 0B8B  
                               _SSPCON1bits 0215                                 _SSPCON2bits 0216  
                               _mssp_setIRQ 0A77                   ??i1_do_I2C_SEND_ADR_WRITE 0070  
              __end_of_i2c_driver_setI2cISR 0AF8                      __size_ofi1_do_I2C_IDLE 0005  
                    __size_ofi1_do_I2C_RCEN 0007                                 ?_IOCBF4_ISR 0070  
            __end_of_PIN_MANAGER_Initialize 0F05                 __end_of_i2c_busCollisionISR 0A7E  
            __size_of_rd1RegCompleteHandler 0017               __end_of_rd1RegCompleteHandler 0D23  
                       i1_i2c_driver_TXData 0A96                             _PIN_MANAGER_IOC 0B2D  
            __size_of_wr1RegCompleteHandler 0017            __size_ofi1_rd1RegCompleteHandler 0012  
             __end_of_wr1RegCompleteHandler 0D0C                       _do_I2C_SEND_ADR_WRITE 0BC9  
               __end_of_i2c_driver_sendNACK 0A96                  __size_of_ADC_GetConversion 0024  
                      _do_I2C_SEND_ADR_READ 0BE1           __end_ofi1_rdBlkRegCompleteHandler 0D53  
          __size_ofi1_wr1RegCompleteHandler 0012                  __end_of_i2c_driver_sendACK 0A92  
                      __size_of_bcdHourDecr 001C                        __size_of_bcdHourIncr 001D  
               __end_of_i2c_driver_resetBus 0A49  

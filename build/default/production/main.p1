Version 4.0 HI-TECH Software Intermediate Code
[v F3356 `(v ~T0 @X0 0 tf ]
[v F3358 `(v ~T0 @X0 0 tf ]
[v F2893 `(v ~T0 @X0 1 tf1`ul ]
"92 /opt/microchip/xc8/v2.10/pic/include/pic.h
[v __delay `JF2893 ~T0 @X0 0 e ]
[p i __delay ]
"36 ./mcc_generated_files/drivers/i2c_simple_master.h
[; ;./mcc_generated_files/drivers/i2c_simple_master.h: 36: void i2c_readDataBlock(i2c_address_t address, uint8_t reg, void *data, size_t len);
[v _i2c_readDataBlock `(v ~T0 @X0 0 ef4`uc`uc`*v`ui ]
"35
[; ;./mcc_generated_files/drivers/i2c_simple_master.h: 35: void i2c_writeNBytes(i2c_address_t address, void* data, size_t len);
[v _i2c_writeNBytes `(v ~T0 @X0 0 ef3`uc`*v`ui ]
[p mainexit ]
"78 ./mcc_generated_files/mcc.h
[; ;./mcc_generated_files/mcc.h: 78: void SYSTEM_Initialize(void);
[v _SYSTEM_Initialize `(v ~T0 @X0 0 ef ]
"2619 /opt/microchip/xc8/v2.10/pic/include/pic16f1939.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2619:     struct {
[s S128 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S128 . LATE0 LATE1 LATE2 LATE3 ]
"2618
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2618: typedef union {
[u S127 `S128 1 ]
[n S127 . . ]
"2626
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2626: extern volatile LATEbits_t LATEbits __attribute__((address(0x110)));
[v _LATEbits `VS127 ~T0 @X0 0 e@272 ]
"2487
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2487:     struct {
[s S123 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S123 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"2486
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2486: typedef union {
[u S122 `S123 1 ]
[n S122 . . ]
"2498
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2498: extern volatile LATCbits_t LATCbits __attribute__((address(0x10E)));
[v _LATCbits `VS122 ~T0 @X0 0 e@270 ]
"2363
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2363:     struct {
[s S119 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S119 . LATA0 LATA1 LATA2 LATA3 LATA4 LATA5 LATA6 LATA7 ]
"2362
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2362: typedef union {
[u S118 `S119 1 ]
[n S118 . . ]
"2374
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2374: extern volatile LATAbits_t LATAbits __attribute__((address(0x10C)));
[v _LATAbits `VS118 ~T0 @X0 0 e@268 ]
"388 main.c
[; ;main.c: 388:     mode = MODE_NORMAL;
[c E3559 0 1 2 3 4 5 6 7 8 9 10 .. ]
[n E3559 mode MODE_NORMAL MODE_TEMPERATURE MODE_SET_HOUR MODE_SET_MINUTE MODE_SET_MONTH MODE_SET_DATE MODE_SET_AL1_H MODE_SET_AL1_M MODE_SET_AL2_H MODE_SET_AL2_M MODE_SET_DISPLAY_MODE  ]
"246 ./mcc_generated_files/memory.h
[; ;./mcc_generated_files/memory.h: 246: uint8_t DATAEE_ReadByte(uint8_t bAdd);
[v _DATAEE_ReadByte `(uc ~T0 @X0 0 ef1`uc ]
"395 main.c
[; ;main.c: 395:     if(display_mode >= DISPLAY_MODE_END){
[c E3571 0 1 2 3 4 5 .. ]
[n E3571 display_mode DISPLAY_MODE_TIME DISPLAY_MODE_TIME_DATE_30S_2S DISPLAY_MODE_TIME_TEMP_10S_2S DISPLAY_MODE_TIME_TEMP_30S_2S DISPLAY_MODE_TIME_TEMP_60S_5S DISPLAY_MODE_END  ]
[v F2908 `(v ~T0 @X0 0 tf ]
"456 ./mcc_generated_files/pin_manager.h
[; ;./mcc_generated_files/pin_manager.h: 456: void IOCBF4_SetInterruptHandler(void (* InterruptHandler)(void));
[v _IOCBF4_SetInterruptHandler `(v ~T0 @X0 0 ef1`*F2908 ]
"136 main.c
[; ;main.c: 136: void secondISR(void);
[v _secondISR `(v ~T0 @X0 0 ef ]
[v F3367 `(v ~T0 @X0 0 tf ]
"261 ./mcc_generated_files/tmr0.h
[; ;./mcc_generated_files/tmr0.h: 261:  void TMR0_SetInterruptHandler(void (* InterruptHandler)(void));
[v _TMR0_SetInterruptHandler `(v ~T0 @X0 0 ef1`*F3367 ]
"137 main.c
[; ;main.c: 137: void displayRefreshISR(void);
[v _displayRefreshISR `(v ~T0 @X0 0 ef ]
"357 /opt/microchip/xc8/v2.10/pic/include/pic16f1939.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 357:     struct {
[s S31 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S31 . IOCIF INTF TMR0IF IOCIE INTE TMR0IE PEIE GIE ]
"367
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 367:     struct {
[s S32 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S32 . . T0IF . T0IE ]
"356
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 356: typedef union {
[u S30 `S31 1 `S32 1 ]
[n S30 . . . ]
"374
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 374: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS30 ~T0 @X0 0 e@11 ]
"497
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 497:     struct {
[s S36 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S36 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"496
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 496: typedef union {
[u S35 `S36 1 ]
[n S35 . . ]
"508
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 508: extern volatile PORTBbits_t PORTBbits __attribute__((address(0x00D)));
[v _PORTBbits `VS35 ~T0 @X0 0 e@13 ]
"220 ./mcc_generated_files/memory.h
[; ;./mcc_generated_files/memory.h: 220: void DATAEE_WriteByte(uint8_t bAdd, uint8_t bData);
[v _DATAEE_WriteByte `(v ~T0 @X0 0 ef2`uc`uc ]
"639 main.c
[; ;main.c: 639:                 bcd_temp = intToBCD(FIR_filter(ADC_GetConversion(channel_AN13)));
[c E3396 13 29 30 31 .. ]
[n E3396 . channel_AN13 channel_Temp channel_DAC channel_FVR  ]
"288 ./mcc_generated_files/adc.h
[; ;./mcc_generated_files/adc.h: 288: adc_result_t ADC_GetConversion(adc_channel_t channel);
[v _ADC_GetConversion `(us ~T0 @X0 0 ef1`E3396 ]
"2543 /opt/microchip/xc8/v2.10/pic/include/pic16f1939.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2543: extern volatile unsigned char LATD __attribute__((address(0x10F)));
[v _LATD `Vuc ~T0 @X0 0 e@271 ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f1939.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 54: __asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
"74
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 74: __asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
"94
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 94: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"114
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 114: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"177
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 177: __asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
"197
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 197: __asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
"221
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 221: __asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
"241
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 241: __asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
"261
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 261: __asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
"313
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 313: __asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
"333
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 333: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"353
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 353: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"431
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 431: __asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
"493
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 493: __asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
"555
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 555: __asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
"617
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 617: __asm("PORTD equ 0Fh");
[; <" PORTD equ 0Fh ;# ">
"679
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 679: __asm("PORTE equ 010h");
[; <" PORTE equ 010h ;# ">
"717
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 717: __asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
"779
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 779: __asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
"836
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 836: __asm("PIR3 equ 013h");
[; <" PIR3 equ 013h ;# ">
"882
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 882: __asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
"902
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 902: __asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
"909
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 909: __asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
"929
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 929: __asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
"949
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 949: __asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
"1021
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1021: __asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
"1098
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1098: __asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
"1118
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1118: __asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
"1138
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1138: __asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
"1209
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1209: __asm("CPSCON0 equ 01Eh");
[; <" CPSCON0 equ 01Eh ;# ">
"1269
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1269: __asm("CPSCON1 equ 01Fh");
[; <" CPSCON1 equ 01Fh ;# ">
"1315
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1315: __asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
"1377
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1377: __asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
"1439
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1439: __asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
"1501
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1501: __asm("TRISD equ 08Fh");
[; <" TRISD equ 08Fh ;# ">
"1563
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1563: __asm("TRISE equ 090h");
[; <" TRISE equ 090h ;# ">
"1601
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1601: __asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
"1663
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1663: __asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
"1720
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1720: __asm("PIE3 equ 093h");
[; <" PIE3 equ 093h ;# ">
"1766
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1766: __asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
"1849
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1849: __asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
"1900
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1900: __asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
"1959
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 1959: __asm("OSCTUNE equ 098h");
[; <" OSCTUNE equ 098h ;# ">
"2017
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2017: __asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
"2089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2089: __asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
"2151
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2151: __asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
"2158
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2158: __asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
"2178
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2178: __asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
"2198
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2198: __asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
"2287
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2287: __asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
"2359
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2359: __asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
"2421
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2421: __asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
"2483
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2483: __asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
"2545
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2545: __asm("LATD equ 010Fh");
[; <" LATD equ 010Fh ;# ">
"2615
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2615: __asm("LATE equ 0110h");
[; <" LATE equ 0110h ;# ">
"2653
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2653: __asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
"2710
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2710: __asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
"2776
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2776: __asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
"2833
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2833: __asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
"2899
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2899: __asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
"2925
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2925: __asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
"2952
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 2952: __asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
"3028
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3028: __asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
"3089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3089: __asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
"3141
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3141: __asm("SRCON0 equ 011Ah");
[; <" SRCON0 equ 011Ah ;# ">
"3212
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3212: __asm("SRCON1 equ 011Bh");
[; <" SRCON1 equ 011Bh ;# ">
"3274
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3274: __asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
"3330
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3330: __asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
"3388
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3388: __asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
"3446
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3446: __asm("ANSELD equ 018Fh");
[; <" ANSELD equ 018Fh ;# ">
"3516
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3516: __asm("ANSELE equ 0190h");
[; <" ANSELE equ 0190h ;# ">
"3556
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3556: __asm("EEADR equ 0191h");
[; <" EEADR equ 0191h ;# ">
"3563
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3563: __asm("EEADRL equ 0191h");
[; <" EEADRL equ 0191h ;# ">
"3583
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3583: __asm("EEADRH equ 0192h");
[; <" EEADRH equ 0192h ;# ">
"3603
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3603: __asm("EEDAT equ 0193h");
[; <" EEDAT equ 0193h ;# ">
"3610
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3610: __asm("EEDATL equ 0193h");
[; <" EEDATL equ 0193h ;# ">
"3615
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3615: __asm("EEDATA equ 0193h");
[; <" EEDATA equ 0193h ;# ">
"3648
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3648: __asm("EEDATH equ 0194h");
[; <" EEDATH equ 0194h ;# ">
"3668
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3668: __asm("EECON1 equ 0195h");
[; <" EECON1 equ 0195h ;# ">
"3730
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3730: __asm("EECON2 equ 0196h");
[; <" EECON2 equ 0196h ;# ">
"3750
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3750: __asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
"3770
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3770: __asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
"3790
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3790: __asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
"3797
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3797: __asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
"3802
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3802: __asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
"3806
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3806: __asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
"3851
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3851: __asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
"3856
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3856: __asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
"3889
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3889: __asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
"3951
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 3951: __asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
"4013
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4013: __asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
"4065
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4065: __asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
"4135
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4135: __asm("WPUE equ 0210h");
[; <" WPUE equ 0210h ;# ">
"4156
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4156: __asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
"4176
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4176: __asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
"4196
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4196: __asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
"4216
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4216: __asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
"4278
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4278: __asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
"4283
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4283: __asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
"4400
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4400: __asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
"4462
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4462: __asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
"4524
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4524: __asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
"4531
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4531: __asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
"4551
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4551: __asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
"4571
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4571: __asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
"4653
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4653: __asm("PWM1CON equ 0294h");
[; <" PWM1CON equ 0294h ;# ">
"4715
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4715: __asm("CCP1AS equ 0295h");
[; <" CCP1AS equ 0295h ;# ">
"4720
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4720: __asm("ECCP1AS equ 0295h");
[; <" ECCP1AS equ 0295h ;# ">
"4837
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4837: __asm("PSTR1CON equ 0296h");
[; <" PSTR1CON equ 0296h ;# ">
"4881
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4881: __asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
"4888
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4888: __asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
"4908
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4908: __asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
"4928
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 4928: __asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
"5010
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5010: __asm("PWM2CON equ 029Bh");
[; <" PWM2CON equ 029Bh ;# ">
"5072
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5072: __asm("CCP2AS equ 029Ch");
[; <" CCP2AS equ 029Ch ;# ">
"5077
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5077: __asm("ECCP2AS equ 029Ch");
[; <" ECCP2AS equ 029Ch ;# ">
"5194
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5194: __asm("PSTR2CON equ 029Dh");
[; <" PSTR2CON equ 029Dh ;# ">
"5238
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5238: __asm("CCPTMRS0 equ 029Eh");
[; <" CCPTMRS0 equ 029Eh ;# ">
"5326
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5326: __asm("CCPTMRS1 equ 029Fh");
[; <" CCPTMRS1 equ 029Fh ;# ">
"5360
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5360: __asm("CCPR3 equ 0311h");
[; <" CCPR3 equ 0311h ;# ">
"5367
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5367: __asm("CCPR3L equ 0311h");
[; <" CCPR3L equ 0311h ;# ">
"5387
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5387: __asm("CCPR3H equ 0312h");
[; <" CCPR3H equ 0312h ;# ">
"5407
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5407: __asm("CCP3CON equ 0313h");
[; <" CCP3CON equ 0313h ;# ">
"5469
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5469: __asm("PWM3CON equ 0314h");
[; <" PWM3CON equ 0314h ;# ">
"5531
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5531: __asm("CCP3AS equ 0315h");
[; <" CCP3AS equ 0315h ;# ">
"5536
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5536: __asm("ECCP3AS equ 0315h");
[; <" ECCP3AS equ 0315h ;# ">
"5653
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5653: __asm("PSTR3CON equ 0316h");
[; <" PSTR3CON equ 0316h ;# ">
"5697
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5697: __asm("CCPR4 equ 0318h");
[; <" CCPR4 equ 0318h ;# ">
"5704
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5704: __asm("CCPR4L equ 0318h");
[; <" CCPR4L equ 0318h ;# ">
"5724
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5724: __asm("CCPR4H equ 0319h");
[; <" CCPR4H equ 0319h ;# ">
"5744
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5744: __asm("CCP4CON equ 031Ah");
[; <" CCP4CON equ 031Ah ;# ">
"5794
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5794: __asm("CCPR5 equ 031Ch");
[; <" CCPR5 equ 031Ch ;# ">
"5801
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5801: __asm("CCPR5L equ 031Ch");
[; <" CCPR5L equ 031Ch ;# ">
"5821
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5821: __asm("CCPR5H equ 031Dh");
[; <" CCPR5H equ 031Dh ;# ">
"5841
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5841: __asm("CCP5CON equ 031Eh");
[; <" CCP5CON equ 031Eh ;# ">
"5891
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5891: __asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
"5961
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 5961: __asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
"6031
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6031: __asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
"6101
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6101: __asm("TMR4 equ 0415h");
[; <" TMR4 equ 0415h ;# ">
"6121
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6121: __asm("PR4 equ 0416h");
[; <" PR4 equ 0416h ;# ">
"6141
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6141: __asm("T4CON equ 0417h");
[; <" T4CON equ 0417h ;# ">
"6212
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6212: __asm("TMR6 equ 041Ch");
[; <" TMR6 equ 041Ch ;# ">
"6232
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6232: __asm("PR6 equ 041Dh");
[; <" PR6 equ 041Dh ;# ">
"6252
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6252: __asm("T6CON equ 041Eh");
[; <" T6CON equ 041Eh ;# ">
"6323
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6323: __asm("LCDCON equ 0791h");
[; <" LCDCON equ 0791h ;# ">
"6394
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6394: __asm("LCDPS equ 0792h");
[; <" LCDPS equ 0792h ;# ">
"6464
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6464: __asm("LCDREF equ 0793h");
[; <" LCDREF equ 0793h ;# ">
"6516
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6516: __asm("LCDCST equ 0794h");
[; <" LCDCST equ 0794h ;# ">
"6556
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6556: __asm("LCDRL equ 0795h");
[; <" LCDRL equ 0795h ;# ">
"6634
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6634: __asm("LCDSE0 equ 0798h");
[; <" LCDSE0 equ 0798h ;# ">
"6696
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6696: __asm("LCDSE1 equ 0799h");
[; <" LCDSE1 equ 0799h ;# ">
"6758
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6758: __asm("LCDSE2 equ 079Ah");
[; <" LCDSE2 equ 079Ah ;# ">
"6820
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6820: __asm("LCDDATA0 equ 07A0h");
[; <" LCDDATA0 equ 07A0h ;# ">
"6882
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6882: __asm("LCDDATA1 equ 07A1h");
[; <" LCDDATA1 equ 07A1h ;# ">
"6944
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 6944: __asm("LCDDATA2 equ 07A2h");
[; <" LCDDATA2 equ 07A2h ;# ">
"7006
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7006: __asm("LCDDATA3 equ 07A3h");
[; <" LCDDATA3 equ 07A3h ;# ">
"7068
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7068: __asm("LCDDATA4 equ 07A4h");
[; <" LCDDATA4 equ 07A4h ;# ">
"7130
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7130: __asm("LCDDATA5 equ 07A5h");
[; <" LCDDATA5 equ 07A5h ;# ">
"7192
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7192: __asm("LCDDATA6 equ 07A6h");
[; <" LCDDATA6 equ 07A6h ;# ">
"7254
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7254: __asm("LCDDATA7 equ 07A7h");
[; <" LCDDATA7 equ 07A7h ;# ">
"7316
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7316: __asm("LCDDATA8 equ 07A8h");
[; <" LCDDATA8 equ 07A8h ;# ">
"7378
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7378: __asm("LCDDATA9 equ 07A9h");
[; <" LCDDATA9 equ 07A9h ;# ">
"7440
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7440: __asm("LCDDATA10 equ 07AAh");
[; <" LCDDATA10 equ 07AAh ;# ">
"7502
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7502: __asm("LCDDATA11 equ 07ABh");
[; <" LCDDATA11 equ 07ABh ;# ">
"7564
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7564: __asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
"7596
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7596: __asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
"7616
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7616: __asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
"7636
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7636: __asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
"7656
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7656: __asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
"7676
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7676: __asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
"7696
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7696: __asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
"7716
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7716: __asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
"7736
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7736: __asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
"7756
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7756: __asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
"7776
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f1939.h: 7776: __asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
"78 ./mcc_generated_files/i2c_driver.h
[; ;./mcc_generated_files/i2c_driver.h: 78: void (*i2c_driver_busCollisionISR)(void);
[v _i2c_driver_busCollisionISR `*F3356 ~T0 @X0 1 e ]
"79
[; ;./mcc_generated_files/i2c_driver.h: 79: void (*i2c_driver_i2cISR)(void);
[v _i2c_driver_i2cISR `*F3358 ~T0 @X0 1 e ]
"88 main.c
[; ;main.c: 88: const uint8_t displayNum[] = {((1 << 7) | (1 << 6) | (1 << 5) | (1 << 4) | (1 << 3) | (1 << 2)), ((1 << 6) | (1 << 5)), ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 3) | (1 << 1)), ((1 << 7) | (1 << 6) | (1 << 5) | (1 << 4) | (1 << 1)), ((1 << 6) | (1 << 5) | (1 << 2) | (1 << 1)), ((1 << 7) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1)),
[v _displayNum `Cuc ~T0 @X0 -> 10 `i e ]
[i _displayNum
:U ..
-> | | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i `uc
-> | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i `uc
-> | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 1 `i `uc
-> | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 1 `i `uc
-> | | | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc
-> | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc
-> | | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc
-> | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i `uc
-> | | | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc
-> | | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc
..
]
"91
[; ;main.c: 91: uint8_t displayBuff[4];
[v _displayBuff `uc ~T0 @X0 -> 4 `i e ]
"92
[; ;main.c: 92: uint8_t flag_time_display_update;
[v _flag_time_display_update `uc ~T0 @X0 1 e ]
"93
[; ;main.c: 93: uint8_t flag_dot_blink;
[v _flag_dot_blink `uc ~T0 @X0 1 e ]
"96
[; ;main.c: 96: uint8_t rtcData[20];
[v _rtcData `uc ~T0 @X0 -> 20 `i e ]
"101
[; ;main.c: 101: uint16_t bcd_temp;
[v _bcd_temp `us ~T0 @X0 1 e ]
"103
[; ;main.c: 103: uint8_t flag_button_press_count[4];
[v _flag_button_press_count `uc ~T0 @X0 -> 4 `i e ]
"104
[; ;main.c: 104: uint8_t button_press_count[4];
[v _button_press_count `uc ~T0 @X0 -> 4 `i e ]
"106
[; ;main.c: 106: volatile uint8_t mode;
[v _mode `Vuc ~T0 @X0 1 e ]
"107
[; ;main.c: 107: volatile uint8_t mode_timeout_count;
[v _mode_timeout_count `Vuc ~T0 @X0 1 e ]
"108
[; ;main.c: 108: volatile uint8_t mode_flash_count;
[v _mode_flash_count `Vuc ~T0 @X0 1 e ]
"110
[; ;main.c: 110: uint8_t flag_alarm1,flag_alarm2;
[v _flag_alarm1 `uc ~T0 @X0 1 e ]
[v _flag_alarm2 `uc ~T0 @X0 1 e ]
"111
[; ;main.c: 111: uint8_t display_mode;
[v _display_mode `uc ~T0 @X0 1 e ]
"157
[; ;main.c: 157: void initRTC(void){
[v _initRTC `(v ~T0 @X0 1 ef ]
{
[e :U _initRTC ]
[f ]
"158
[; ;main.c: 158:     _delay((unsigned long)((30)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 30 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"162
[; ;main.c: 162:     i2c_readDataBlock(0x68,0x00,rtcData,sizeof(rtcData));
[e ( _i2c_readDataBlock (4 , , , -> -> 104 `i `uc -> -> 0 `i `uc -> &U _rtcData `*v -> # _rtcData `ui ]
"165
[; ;main.c: 165:     if((rtcData[0x0F] & 0x80) == 0x80){
[e $ ! == & -> *U + &U _rtcData * -> -> -> 15 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 128 `i -> 128 `i 383  ]
{
"166
[; ;main.c: 166:         rtcData[0] = 0x00;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"167
[; ;main.c: 167:         rtcData[0x00 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 0 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"168
[; ;main.c: 168:         rtcData[0x01 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 1 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"169
[; ;main.c: 169:         rtcData[0x02 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 2 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"170
[; ;main.c: 170:         rtcData[0x03 +1] = 0x01;
[e = *U + &U _rtcData * -> -> + -> 3 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 1 `i `uc ]
"171
[; ;main.c: 171:         rtcData[0x04 +1] = 0x01;
[e = *U + &U _rtcData * -> -> + -> 4 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 1 `i `uc ]
"172
[; ;main.c: 172:         rtcData[0x05 +1] = 0x01;
[e = *U + &U _rtcData * -> -> + -> 5 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 1 `i `uc ]
"173
[; ;main.c: 173:         rtcData[0x06 +1] = 0x20;
[e = *U + &U _rtcData * -> -> + -> 6 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 32 `i `uc ]
"174
[; ;main.c: 174:         rtcData[0x07 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 7 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"175
[; ;main.c: 175:         rtcData[0x08 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 8 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"176
[; ;main.c: 176:         rtcData[0x09 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 9 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"177
[; ;main.c: 177:         rtcData[0x0A +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 10 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"178
[; ;main.c: 178:         rtcData[0x0B +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 11 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"179
[; ;main.c: 179:         rtcData[0x09 +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 9 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"180
[; ;main.c: 180:         rtcData[0x0A +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 10 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"181
[; ;main.c: 181:         rtcData[0x0E +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 14 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"182
[; ;main.c: 182:         rtcData[0x0F +1] = 0x00;
[e = *U + &U _rtcData * -> -> + -> 15 `i -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"184
[; ;main.c: 184:         i2c_writeNBytes(0x68,rtcData,sizeof(rtcData));
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> # _rtcData `ui ]
"185
[; ;main.c: 185:     } else if((rtcData[0x0E] & 0x04) == 0x04){
}
[e $U 384  ]
[e :U 383 ]
[e $ ! == & -> *U + &U _rtcData * -> -> -> 14 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 4 `i 385  ]
{
"186
[; ;main.c: 186:         rtcData[0] = 0x0E;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 14 `i `uc ]
"187
[; ;main.c: 187:         rtcData[1] = 0x00;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"188
[; ;main.c: 188:         i2c_writeNBytes(0x68,rtcData,2);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 2 `i `ui ]
"189
[; ;main.c: 189:     }
}
[e :U 385 ]
[e :U 384 ]
"206
[; ;main.c: 206: }
[e :UE 382 ]
}
"208
[; ;main.c: 208: void updateRTC(uint8_t bcdHour, uint8_t bcdMinute){
[v _updateRTC `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _updateRTC ]
[v _bcdHour `uc ~T0 @X0 1 r1 ]
[v _bcdMinute `uc ~T0 @X0 1 r2 ]
[f ]
"209
[; ;main.c: 209:     rtcData[0] = 0x00;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"210
[; ;main.c: 210:     rtcData[1] = 0x00;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 0 `i `uc ]
"211
[; ;main.c: 211:     rtcData[2] = bcdMinute & 0x7F;
[e = *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdMinute `i -> 127 `i `uc ]
"212
[; ;main.c: 212:     rtcData[3] = bcdHour & 0x3F;
[e = *U + &U _rtcData * -> -> -> 3 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdHour `i -> 63 `i `uc ]
"213
[; ;main.c: 213:     i2c_writeNBytes(0x68,rtcData,4);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 4 `i `ui ]
"214
[; ;main.c: 214: }
[e :UE 386 ]
}
"216
[; ;main.c: 216: void updateAlarm1(uint8_t bcdHour, uint8_t bcdMinute){
[v _updateAlarm1 `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _updateAlarm1 ]
[v _bcdHour `uc ~T0 @X0 1 r1 ]
[v _bcdMinute `uc ~T0 @X0 1 r2 ]
[f ]
"217
[; ;main.c: 217:     rtcData[0] = 0x08;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 8 `i `uc ]
"218
[; ;main.c: 218:     rtcData[1] = bcdMinute;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux _bcdMinute ]
"219
[; ;main.c: 219:     rtcData[2] = (bcdHour & 0xBF) ;
[e = *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdHour `i -> 191 `i `uc ]
"220
[; ;main.c: 220:     if((bcdMinute != 0) || (bcdHour != 0)){
[e $ ! || != -> _bcdMinute `i -> 0 `i != -> _bcdHour `i -> 0 `i 388  ]
{
"222
[; ;main.c: 222:         rtcData[1] |= 0x80;
[e =| *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 128 `i `uc ]
"223
[; ;main.c: 223:         rtcData[2] |= 0x80;
[e =| *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 128 `i `uc ]
"224
[; ;main.c: 224:     }
}
[e :U 388 ]
"225
[; ;main.c: 225:     i2c_writeNBytes(0x68,rtcData,3);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 3 `i `ui ]
"226
[; ;main.c: 226: }
[e :UE 387 ]
}
"228
[; ;main.c: 228: void updateAlarm2(uint8_t bcdHour, uint8_t bcdMinute){
[v _updateAlarm2 `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _updateAlarm2 ]
[v _bcdHour `uc ~T0 @X0 1 r1 ]
[v _bcdMinute `uc ~T0 @X0 1 r2 ]
[f ]
"229
[; ;main.c: 229:     rtcData[0] = 0x0B;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 11 `i `uc ]
"230
[; ;main.c: 230:     rtcData[1] = bcdMinute;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux _bcdMinute ]
"231
[; ;main.c: 231:     rtcData[2] = bcdHour & 0xBF;
[e = *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdHour `i -> 191 `i `uc ]
"232
[; ;main.c: 232:     if((bcdMinute != 0) || (bcdHour != 0)){
[e $ ! || != -> _bcdMinute `i -> 0 `i != -> _bcdHour `i -> 0 `i 390  ]
{
"234
[; ;main.c: 234:         rtcData[1] |= 0x80;
[e =| *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 128 `i `uc ]
"235
[; ;main.c: 235:         rtcData[2] |= 0x80;
[e =| *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 128 `i `uc ]
"236
[; ;main.c: 236:     }
}
[e :U 390 ]
"237
[; ;main.c: 237:     i2c_writeNBytes(0x68,rtcData,3);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 3 `i `ui ]
"238
[; ;main.c: 238: }
[e :UE 389 ]
}
"240
[; ;main.c: 240: void updateDay(uint8_t bcdDay){
[v _updateDay `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _updateDay ]
[v _bcdDay `uc ~T0 @X0 1 r1 ]
[f ]
"241
[; ;main.c: 241:     rtcData[0] = 0x03;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 3 `i `uc ]
"242
[; ;main.c: 242:     rtcData[1] = bcdDay & 0x07;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdDay `i -> 7 `i `uc ]
"243
[; ;main.c: 243:     i2c_writeNBytes(0x68,rtcData,2);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 2 `i `ui ]
"244
[; ;main.c: 244: }
[e :UE 391 ]
}
"246
[; ;main.c: 246: void updateDate(uint8_t bcdDate){
[v _updateDate `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _updateDate ]
[v _bcdDate `uc ~T0 @X0 1 r1 ]
[f ]
"247
[; ;main.c: 247:     rtcData[0] = 0x04;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 4 `i `uc ]
"248
[; ;main.c: 248:     rtcData[1] = bcdDate & 0x3F;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdDate `i -> 63 `i `uc ]
"249
[; ;main.c: 249:     i2c_writeNBytes(0x68,rtcData,2);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 2 `i `ui ]
"250
[; ;main.c: 250: }
[e :UE 392 ]
}
"252
[; ;main.c: 252: void updateMonth(uint8_t bcdMonth){
[v _updateMonth `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _updateMonth ]
[v _bcdMonth `uc ~T0 @X0 1 r1 ]
[f ]
"253
[; ;main.c: 253:     rtcData[0] = 0x05;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 5 `i `uc ]
"254
[; ;main.c: 254:     rtcData[1] = bcdMonth & 0x9F;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> & -> _bcdMonth `i -> 159 `i `uc ]
"255
[; ;main.c: 255:     i2c_writeNBytes(0x68,rtcData,2);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 2 `i `ui ]
"256
[; ;main.c: 256: }
[e :UE 393 ]
}
"258
[; ;main.c: 258: void updateYear(uint8_t bcdYear){
[v _updateYear `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _updateYear ]
[v _bcdYear `uc ~T0 @X0 1 r1 ]
[f ]
"259
[; ;main.c: 259:     if(bcdYear <= 0x99){
[e $ ! <= -> _bcdYear `i -> 153 `i 395  ]
{
"260
[; ;main.c: 260:         rtcData[0] = 0x06;
[e = *U + &U _rtcData * -> -> -> 0 `i `ui `ux -> -> # *U &U _rtcData `ui `ux -> -> 6 `i `uc ]
"261
[; ;main.c: 261:         rtcData[1] = bcdYear;
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux _bcdYear ]
"262
[; ;main.c: 262:         i2c_writeNBytes(0x68,rtcData,2);
[e ( _i2c_writeNBytes (3 , , -> -> 104 `i `uc -> &U _rtcData `*v -> -> 2 `i `ui ]
"263
[; ;main.c: 263:     }
}
[e :U 395 ]
"264
[; ;main.c: 264: }
[e :UE 394 ]
}
"268
[; ;main.c: 268: static uint8_t bcdHourIncr(uint8_t hr){
[v _bcdHourIncr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdHourIncr ]
[v _hr `uc ~T0 @X0 1 r1 ]
[f ]
"269
[; ;main.c: 269:     hr &= 0x7F;
[e =& _hr -> -> 127 `i `uc ]
"270
[; ;main.c: 270:     if(hr == 0x09) return 0x10;
[e $ ! == -> _hr `i -> 9 `i 397  ]
[e ) -> -> 16 `i `uc ]
[e $UE 396  ]
[e :U 397 ]
"271
[; ;main.c: 271:     if(hr == 0x19) return 0x20;
[e $ ! == -> _hr `i -> 25 `i 398  ]
[e ) -> -> 32 `i `uc ]
[e $UE 396  ]
[e :U 398 ]
"272
[; ;main.c: 272:     if(hr == 0x23) return 0x00;
[e $ ! == -> _hr `i -> 35 `i 399  ]
[e ) -> -> 0 `i `uc ]
[e $UE 396  ]
[e :U 399 ]
"273
[; ;main.c: 273:     return (hr + 1);
[e ) -> + -> _hr `i -> 1 `i `uc ]
[e $UE 396  ]
"274
[; ;main.c: 274: }
[e :UE 396 ]
}
"276
[; ;main.c: 276: static uint8_t bcdHourDecr(uint8_t hr){
[v _bcdHourDecr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdHourDecr ]
[v _hr `uc ~T0 @X0 1 r1 ]
[f ]
"277
[; ;main.c: 277:     hr &= 0x7F;
[e =& _hr -> -> 127 `i `uc ]
"278
[; ;main.c: 278:     if(hr == 0x00) return 0x23;
[e $ ! == -> _hr `i -> 0 `i 401  ]
[e ) -> -> 35 `i `uc ]
[e $UE 400  ]
[e :U 401 ]
"279
[; ;main.c: 279:     if(hr == 0x10) return 0x09;
[e $ ! == -> _hr `i -> 16 `i 402  ]
[e ) -> -> 9 `i `uc ]
[e $UE 400  ]
[e :U 402 ]
"280
[; ;main.c: 280:     if(hr == 0x20) return 0x19;
[e $ ! == -> _hr `i -> 32 `i 403  ]
[e ) -> -> 25 `i `uc ]
[e $UE 400  ]
[e :U 403 ]
"281
[; ;main.c: 281:     return (hr - 1);
[e ) -> - -> _hr `i -> 1 `i `uc ]
[e $UE 400  ]
"282
[; ;main.c: 282: }
[e :UE 400 ]
}
"284
[; ;main.c: 284: static uint8_t bcdMinuteIncr(uint8_t mn){
[v _bcdMinuteIncr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdMinuteIncr ]
[v _mn `uc ~T0 @X0 1 r1 ]
[f ]
"285
[; ;main.c: 285:     mn &= 0x7F;
[e =& _mn -> -> 127 `i `uc ]
"286
[; ;main.c: 286:     if(mn == 0x09) return 0x10;
[e $ ! == -> _mn `i -> 9 `i 405  ]
[e ) -> -> 16 `i `uc ]
[e $UE 404  ]
[e :U 405 ]
"287
[; ;main.c: 287:     if(mn == 0x19) return 0x20;
[e $ ! == -> _mn `i -> 25 `i 406  ]
[e ) -> -> 32 `i `uc ]
[e $UE 404  ]
[e :U 406 ]
"288
[; ;main.c: 288:     if(mn == 0x29) return 0x30;
[e $ ! == -> _mn `i -> 41 `i 407  ]
[e ) -> -> 48 `i `uc ]
[e $UE 404  ]
[e :U 407 ]
"289
[; ;main.c: 289:     if(mn == 0x39) return 0x40;
[e $ ! == -> _mn `i -> 57 `i 408  ]
[e ) -> -> 64 `i `uc ]
[e $UE 404  ]
[e :U 408 ]
"290
[; ;main.c: 290:     if(mn == 0x49) return 0x50;
[e $ ! == -> _mn `i -> 73 `i 409  ]
[e ) -> -> 80 `i `uc ]
[e $UE 404  ]
[e :U 409 ]
"291
[; ;main.c: 291:     if(mn == 0x59) return 0x00;
[e $ ! == -> _mn `i -> 89 `i 410  ]
[e ) -> -> 0 `i `uc ]
[e $UE 404  ]
[e :U 410 ]
"292
[; ;main.c: 292:     return (mn + 1);
[e ) -> + -> _mn `i -> 1 `i `uc ]
[e $UE 404  ]
"293
[; ;main.c: 293: }
[e :UE 404 ]
}
"295
[; ;main.c: 295: static uint8_t bcdMinuteDecr(uint8_t mn){
[v _bcdMinuteDecr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdMinuteDecr ]
[v _mn `uc ~T0 @X0 1 r1 ]
[f ]
"296
[; ;main.c: 296:     mn &= 0x7F;
[e =& _mn -> -> 127 `i `uc ]
"297
[; ;main.c: 297:     if(mn == 0x00) return 0x59;
[e $ ! == -> _mn `i -> 0 `i 412  ]
[e ) -> -> 89 `i `uc ]
[e $UE 411  ]
[e :U 412 ]
"298
[; ;main.c: 298:     if(mn == 0x10) return 0x09;
[e $ ! == -> _mn `i -> 16 `i 413  ]
[e ) -> -> 9 `i `uc ]
[e $UE 411  ]
[e :U 413 ]
"299
[; ;main.c: 299:     if(mn == 0x20) return 0x19;
[e $ ! == -> _mn `i -> 32 `i 414  ]
[e ) -> -> 25 `i `uc ]
[e $UE 411  ]
[e :U 414 ]
"300
[; ;main.c: 300:     if(mn == 0x30) return 0x29;
[e $ ! == -> _mn `i -> 48 `i 415  ]
[e ) -> -> 41 `i `uc ]
[e $UE 411  ]
[e :U 415 ]
"301
[; ;main.c: 301:     if(mn == 0x40) return 0x39;
[e $ ! == -> _mn `i -> 64 `i 416  ]
[e ) -> -> 57 `i `uc ]
[e $UE 411  ]
[e :U 416 ]
"302
[; ;main.c: 302:     if(mn == 0x50) return 0x49;
[e $ ! == -> _mn `i -> 80 `i 417  ]
[e ) -> -> 73 `i `uc ]
[e $UE 411  ]
[e :U 417 ]
"303
[; ;main.c: 303:     return (mn - 1);
[e ) -> - -> _mn `i -> 1 `i `uc ]
[e $UE 411  ]
"304
[; ;main.c: 304: }
[e :UE 411 ]
}
"306
[; ;main.c: 306: static uint8_t bcdMonthIncr(uint8_t mo){
[v _bcdMonthIncr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdMonthIncr ]
[v _mo `uc ~T0 @X0 1 r1 ]
[f ]
"308
[; ;main.c: 308:     if(mo == 0x09) return 0x10;
[e $ ! == -> _mo `i -> 9 `i 419  ]
[e ) -> -> 16 `i `uc ]
[e $UE 418  ]
[e :U 419 ]
"309
[; ;main.c: 309:     if(mo == 0x12) return 0x01;
[e $ ! == -> _mo `i -> 18 `i 420  ]
[e ) -> -> 1 `i `uc ]
[e $UE 418  ]
[e :U 420 ]
"310
[; ;main.c: 310:     return (mo + 1);
[e ) -> + -> _mo `i -> 1 `i `uc ]
[e $UE 418  ]
"311
[; ;main.c: 311: }
[e :UE 418 ]
}
"313
[; ;main.c: 313: static uint8_t bcdMonthDecr(uint8_t mo){
[v _bcdMonthDecr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdMonthDecr ]
[v _mo `uc ~T0 @X0 1 r1 ]
[f ]
"314
[; ;main.c: 314:     if(mo <= 0x01) return 0x12;
[e $ ! <= -> _mo `i -> 1 `i 422  ]
[e ) -> -> 18 `i `uc ]
[e $UE 421  ]
[e :U 422 ]
"315
[; ;main.c: 315:     if(mo == 0x10) return 0x09;
[e $ ! == -> _mo `i -> 16 `i 423  ]
[e ) -> -> 9 `i `uc ]
[e $UE 421  ]
[e :U 423 ]
"316
[; ;main.c: 316:     return (mo - 1);
[e ) -> - -> _mo `i -> 1 `i `uc ]
[e $UE 421  ]
"317
[; ;main.c: 317: }
[e :UE 421 ]
}
"319
[; ;main.c: 319: static uint8_t bcdDateIncr(uint8_t dt){
[v _bcdDateIncr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdDateIncr ]
[v _dt `uc ~T0 @X0 1 r1 ]
[f ]
"320
[; ;main.c: 320:     if(dt >= 0x31) return 0x01;
[e $ ! >= -> _dt `i -> 49 `i 425  ]
[e ) -> -> 1 `i `uc ]
[e $UE 424  ]
[e :U 425 ]
"321
[; ;main.c: 321:     if(dt == 0x09) return 0x10;
[e $ ! == -> _dt `i -> 9 `i 426  ]
[e ) -> -> 16 `i `uc ]
[e $UE 424  ]
[e :U 426 ]
"322
[; ;main.c: 322:     if(dt == 0x19) return 0x20;
[e $ ! == -> _dt `i -> 25 `i 427  ]
[e ) -> -> 32 `i `uc ]
[e $UE 424  ]
[e :U 427 ]
"323
[; ;main.c: 323:     if(dt == 0x29) return 0x30;
[e $ ! == -> _dt `i -> 41 `i 428  ]
[e ) -> -> 48 `i `uc ]
[e $UE 424  ]
[e :U 428 ]
"324
[; ;main.c: 324:     return (dt + 1);
[e ) -> + -> _dt `i -> 1 `i `uc ]
[e $UE 424  ]
"325
[; ;main.c: 325: }
[e :UE 424 ]
}
"327
[; ;main.c: 327: static uint8_t bcdDateDecr(uint8_t dt){
[v _bcdDateDecr `(uc ~T0 @X0 1 sf1`uc ]
{
[e :U _bcdDateDecr ]
[v _dt `uc ~T0 @X0 1 r1 ]
[f ]
"328
[; ;main.c: 328:     if(dt <= 0x01) return 0x31;
[e $ ! <= -> _dt `i -> 1 `i 430  ]
[e ) -> -> 49 `i `uc ]
[e $UE 429  ]
[e :U 430 ]
"329
[; ;main.c: 329:     if(dt == 0x10) return 0x09;
[e $ ! == -> _dt `i -> 16 `i 431  ]
[e ) -> -> 9 `i `uc ]
[e $UE 429  ]
[e :U 431 ]
"330
[; ;main.c: 330:     if(dt == 0x20) return 0x19;
[e $ ! == -> _dt `i -> 32 `i 432  ]
[e ) -> -> 25 `i `uc ]
[e $UE 429  ]
[e :U 432 ]
"331
[; ;main.c: 331:     if(dt == 0x30) return 0x29;
[e $ ! == -> _dt `i -> 48 `i 433  ]
[e ) -> -> 41 `i `uc ]
[e $UE 429  ]
[e :U 433 ]
"332
[; ;main.c: 332:     return (dt - 1);
[e ) -> - -> _dt `i -> 1 `i `uc ]
[e $UE 429  ]
"333
[; ;main.c: 333: }
[e :UE 429 ]
}
"335
[; ;main.c: 335: uint16_t intToBCD(uint16_t binaryInput){
[v _intToBCD `(us ~T0 @X0 1 ef1`us ]
{
[e :U _intToBCD ]
[v _binaryInput `us ~T0 @X0 1 r1 ]
[f ]
"336
[; ;main.c: 336:     uint16_t bcdResult = 0;
[v _bcdResult `us ~T0 @X0 1 a ]
[e = _bcdResult -> -> 0 `i `us ]
"337
[; ;main.c: 337:     uint16_t shift = 0;
[v _shift `us ~T0 @X0 1 a ]
[e = _shift -> -> 0 `i `us ]
"339
[; ;main.c: 339:     while (binaryInput > 0) {
[e $U 435  ]
[e :U 436 ]
{
"340
[; ;main.c: 340:       bcdResult |= (binaryInput % 10) << (shift++ << 2);
[e =| _bcdResult -> << % -> _binaryInput `ui -> -> 10 `i `ui << -> ++ _shift -> -> 1 `i `us `ui -> 2 `i `us ]
"341
[; ;main.c: 341:       binaryInput /= 10;
[e =/ _binaryInput -> -> 10 `i `ui ]
"342
[; ;main.c: 342:     }
}
[e :U 435 ]
"339
[; ;main.c: 339:     while (binaryInput > 0) {
[e $ > -> _binaryInput `ui -> -> 0 `i `ui 436  ]
[e :U 437 ]
"344
[; ;main.c: 344:     return bcdResult;
[e ) _bcdResult ]
[e $UE 434  ]
"345
[; ;main.c: 345: }
[e :UE 434 ]
}
"363
[; ;main.c: 363: adc_result_t FIR_filter(adc_result_t sample){
[v _FIR_filter `(us ~T0 @X0 1 ef1`us ]
{
[e :U _FIR_filter ]
[v _sample `us ~T0 @X0 1 r1 ]
[f ]
"364
[; ;main.c: 364:     static adc_result_t buffer[8] = {0,0,0,0,0,0,0,0};
[v F3658 `us ~T0 @X0 -> 8 `i s buffer ]
[i F3658
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
"365
[; ;main.c: 365:     static adc_result_t oldest = 0;
[v F3659 `us ~T0 @X0 1 s oldest ]
[i F3659
-> -> 0 `i `us
]
"366
[; ;main.c: 366:     static uint32_t sum;
[v F3660 `ul ~T0 @X0 1 s sum ]
"368
[; ;main.c: 368:     sum -= buffer[oldest];
[e =- F3660 -> *U + &U F3658 * -> F3659 `ux -> -> # *U &U F3658 `ui `ux `ul ]
"369
[; ;main.c: 369:     sum += sample;
[e =+ F3660 -> _sample `ul ]
"370
[; ;main.c: 370:     buffer[oldest] = sample;
[e = *U + &U F3658 * -> F3659 `ux -> -> # *U &U F3658 `ui `ux _sample ]
"371
[; ;main.c: 371:     oldest += 1;
[e =+ F3659 -> -> 1 `i `us ]
"372
[; ;main.c: 372:     if (oldest >= 8) oldest = 0;
[e $ ! >= -> F3659 `ui -> -> 8 `i `ui 439  ]
[e = F3659 -> -> 0 `i `us ]
[e :U 439 ]
"374
[; ;main.c: 374:     return (sum >> 3);
[e ) -> >> F3660 -> 3 `i `us ]
[e $UE 438  ]
"375
[; ;main.c: 375: }
[e :UE 438 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"377
[; ;main.c: 377: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"378
[; ;main.c: 378: {
{
[e :U _main ]
[f ]
"380
[; ;main.c: 380:     SYSTEM_Initialize();
[e ( _SYSTEM_Initialize ..  ]
"383
[; ;main.c: 383:     do { LATEbits.LATE1 = 0; } while(0);
[e :U 443 ]
{
[e = . . _LATEbits 0 1 -> -> 0 `i `uc ]
}
[e :U 442 ]
"384
[; ;main.c: 384:     do { LATCbits.LATC1 = 0; } while(0);
[e :U 446 ]
{
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
}
[e :U 445 ]
"385
[; ;main.c: 385:     do { LATAbits.LATA4 = 0; } while(0);
[e :U 449 ]
{
[e = . . _LATAbits 0 4 -> -> 0 `i `uc ]
}
[e :U 448 ]
"386
[; ;main.c: 386:     do { LATAbits.LATA3 = 0; } while(0);
[e :U 452 ]
{
[e = . . _LATAbits 0 3 -> -> 0 `i `uc ]
}
[e :U 451 ]
"388
[; ;main.c: 388:     mode = MODE_NORMAL;
[e = _mode -> . `E3559 0 `uc ]
"389
[; ;main.c: 389:     flag_alarm1 = 0;
[e = _flag_alarm1 -> -> 0 `i `uc ]
"390
[; ;main.c: 390:     flag_alarm2 = 0;
[e = _flag_alarm2 -> -> 0 `i `uc ]
"393
[; ;main.c: 393:     display_mode = DATAEE_ReadByte(0x01);
[e = _display_mode ( _DATAEE_ReadByte (1 -> -> 1 `i `uc ]
"395
[; ;main.c: 395:     if(display_mode >= DISPLAY_MODE_END){
[e $ ! >= -> _display_mode `i -> . `E3571 5 `i 453  ]
{
"396
[; ;main.c: 396:         display_mode = DISPLAY_MODE_TIME;
[e = _display_mode -> . `E3571 0 `uc ]
"397
[; ;main.c: 397:     }
}
[e :U 453 ]
"399
[; ;main.c: 399:     IOCBF4_SetInterruptHandler(&secondISR);
[e ( _IOCBF4_SetInterruptHandler (1 &U _secondISR ]
"400
[; ;main.c: 400:     TMR0_SetInterruptHandler(&displayRefreshISR);
[e ( _TMR0_SetInterruptHandler (1 &U _displayRefreshISR ]
"405
[; ;main.c: 405:     (INTCONbits.GIE = 1);
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"408
[; ;main.c: 408:     (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"416
[; ;main.c: 416:     initRTC();
[e ( _initRTC ..  ]
"418
[; ;main.c: 418:     while (1)
[e :U 455 ]
"419
[; ;main.c: 419:     {
{
"421
[; ;main.c: 421:         __asm("clrwdt");
[; <" clrwdt ;# ">
"424
[; ;main.c: 424:         if(PORTBbits.RB0 == 0){
[e $ ! == -> . . _PORTBbits 0 0 `i -> 0 `i 457  ]
{
"425
[; ;main.c: 425:             flag_button_press_count[0] = 1;
[e = *U + &U _flag_button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 1 `i `uc ]
"426
[; ;main.c: 426:         } else if(PORTBbits.RB1 == 0){
}
[e $U 458  ]
[e :U 457 ]
[e $ ! == -> . . _PORTBbits 0 1 `i -> 0 `i 459  ]
{
"427
[; ;main.c: 427:             flag_button_press_count[1] = 1;
[e = *U + &U _flag_button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 1 `i `uc ]
"428
[; ;main.c: 428:         } else if(PORTBbits.RB2 == 0){
}
[e $U 460  ]
[e :U 459 ]
[e $ ! == -> . . _PORTBbits 0 2 `i -> 0 `i 461  ]
{
"429
[; ;main.c: 429:             flag_button_press_count[2] = 1;
[e = *U + &U _flag_button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 1 `i `uc ]
"430
[; ;main.c: 430:         } else if(PORTBbits.RB3 == 0){
}
[e $U 462  ]
[e :U 461 ]
[e $ ! == -> . . _PORTBbits 0 3 `i -> 0 `i 463  ]
{
"431
[; ;main.c: 431:             flag_button_press_count[3] = 1;
[e = *U + &U _flag_button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 1 `i `uc ]
"432
[; ;main.c: 432:         } else {
}
[e $U 464  ]
[e :U 463 ]
{
"433
[; ;main.c: 433:             if(flag_button_press_count[0] == 1){
[e $ ! == -> *U + &U _flag_button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 1 `i 465  ]
{
"434
[; ;main.c: 434:                 if(button_press_count[0] > 5 && button_press_count[0] < 100){
[e $ ! && > -> *U + &U _button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 5 `i < -> *U + &U _button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 100 `i 466  ]
{
"435
[; ;main.c: 435:                     if(mode == MODE_NORMAL){
[e $ ! == -> _mode `i -> . `E3559 0 `i 467  ]
{
"436
[; ;main.c: 436:                         mode = MODE_SET_HOUR;
[e = _mode -> . `E3559 2 `uc ]
"437
[; ;main.c: 437:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"438
[; ;main.c: 438:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"439
[; ;main.c: 439:                     } else if(mode == MODE_SET_HOUR){
}
[e $U 468  ]
[e :U 467 ]
[e $ ! == -> _mode `i -> . `E3559 2 `i 469  ]
{
"440
[; ;main.c: 440:                         mode = MODE_SET_MINUTE;
[e = _mode -> . `E3559 3 `uc ]
"441
[; ;main.c: 441:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"442
[; ;main.c: 442:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"443
[; ;main.c: 443:                     } else if(mode == MODE_SET_MINUTE){
}
[e $U 470  ]
[e :U 469 ]
[e $ ! == -> _mode `i -> . `E3559 3 `i 471  ]
{
"444
[; ;main.c: 444:                         mode = MODE_SET_MONTH;
[e = _mode -> . `E3559 4 `uc ]
"445
[; ;main.c: 445:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"446
[; ;main.c: 446:                         mode_flash_count = 4;
[e = _mode_flash_count -> -> 4 `i `uc ]
"447
[; ;main.c: 447:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"448
[; ;main.c: 448:                     } else if(mode == MODE_SET_MONTH){
}
[e $U 472  ]
[e :U 471 ]
[e $ ! == -> _mode `i -> . `E3559 4 `i 473  ]
{
"449
[; ;main.c: 449:                         mode = MODE_SET_DATE;
[e = _mode -> . `E3559 5 `uc ]
"450
[; ;main.c: 450:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"451
[; ;main.c: 451:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"452
[; ;main.c: 452:                     } else if(mode == MODE_SET_DATE){
}
[e $U 474  ]
[e :U 473 ]
[e $ ! == -> _mode `i -> . `E3559 5 `i 475  ]
{
"453
[; ;main.c: 453:                         mode = MODE_SET_AL1_H;
[e = _mode -> . `E3559 6 `uc ]
"454
[; ;main.c: 454:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"455
[; ;main.c: 455:                         mode_flash_count = 4;
[e = _mode_flash_count -> -> 4 `i `uc ]
"456
[; ;main.c: 456:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"457
[; ;main.c: 457:                     } else if(mode == MODE_SET_AL1_H){
}
[e $U 476  ]
[e :U 475 ]
[e $ ! == -> _mode `i -> . `E3559 6 `i 477  ]
{
"458
[; ;main.c: 458:                         mode = MODE_SET_AL1_M;
[e = _mode -> . `E3559 7 `uc ]
"459
[; ;main.c: 459:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"460
[; ;main.c: 460:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"461
[; ;main.c: 461:                     } else if(mode == MODE_SET_AL1_M){
}
[e $U 478  ]
[e :U 477 ]
[e $ ! == -> _mode `i -> . `E3559 7 `i 479  ]
{
"462
[; ;main.c: 462:                         mode = MODE_SET_AL2_H;
[e = _mode -> . `E3559 8 `uc ]
"463
[; ;main.c: 463:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"464
[; ;main.c: 464:                         mode_flash_count = 4;
[e = _mode_flash_count -> -> 4 `i `uc ]
"465
[; ;main.c: 465:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"466
[; ;main.c: 466:                     } else if(mode == MODE_SET_AL2_H){
}
[e $U 480  ]
[e :U 479 ]
[e $ ! == -> _mode `i -> . `E3559 8 `i 481  ]
{
"467
[; ;main.c: 467:                         mode = MODE_SET_AL2_M;
[e = _mode -> . `E3559 9 `uc ]
"468
[; ;main.c: 468:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"469
[; ;main.c: 469:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"470
[; ;main.c: 470:                     } else if(mode == MODE_SET_AL2_M){
}
[e $U 482  ]
[e :U 481 ]
[e $ ! == -> _mode `i -> . `E3559 9 `i 483  ]
{
"471
[; ;main.c: 471:                         mode = MODE_SET_DISPLAY_MODE;
[e = _mode -> . `E3559 10 `uc ]
"472
[; ;main.c: 472:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"473
[; ;main.c: 473:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"474
[; ;main.c: 474:                     } else {
}
[e $U 484  ]
[e :U 483 ]
{
"475
[; ;main.c: 475:                         mode = MODE_NORMAL;
[e = _mode -> . `E3559 0 `uc ]
"476
[; ;main.c: 476:                     }
}
[e :U 484 ]
[e :U 482 ]
[e :U 480 ]
[e :U 478 ]
[e :U 476 ]
[e :U 474 ]
[e :U 472 ]
[e :U 470 ]
[e :U 468 ]
"478
[; ;main.c: 478:                 }
}
[e :U 466 ]
"479
[; ;main.c: 479:                 button_press_count[0] = 0;
[e = *U + &U _button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 0 `i `uc ]
"480
[; ;main.c: 480:                 flag_button_press_count[0] = 0;
[e = *U + &U _flag_button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 0 `i `uc ]
"481
[; ;main.c: 481:             }
}
[e :U 465 ]
"483
[; ;main.c: 483:             if(flag_button_press_count[1] == 1){
[e $ ! == -> *U + &U _flag_button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 1 `i 485  ]
{
"484
[; ;main.c: 484:                 if(button_press_count[1] > 5 && button_press_count[1] < 100){
[e $ ! && > -> *U + &U _button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 5 `i < -> *U + &U _button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 100 `i 486  ]
{
"486
[; ;main.c: 486:                     if(mode == MODE_SET_HOUR){
[e $ ! == -> _mode `i -> . `E3559 2 `i 487  ]
{
"487
[; ;main.c: 487:                         rtcData[0x02] = bcdHourIncr(rtcData[0x02]);
[e = *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdHourIncr (1 *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"488
[; ;main.c: 488:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"489
[; ;main.c: 489:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"490
[; ;main.c: 490:                     } else if(mode == MODE_SET_MINUTE){
}
[e $U 488  ]
[e :U 487 ]
[e $ ! == -> _mode `i -> . `E3559 3 `i 489  ]
{
"491
[; ;main.c: 491:                         rtcData[0x01] = bcdMinuteIncr(rtcData[0x01]);
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMinuteIncr (1 *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"492
[; ;main.c: 492:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"493
[; ;main.c: 493:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"494
[; ;main.c: 494:                     } else if(mode == MODE_SET_MONTH){
}
[e $U 490  ]
[e :U 489 ]
[e $ ! == -> _mode `i -> . `E3559 4 `i 491  ]
{
"495
[; ;main.c: 495:                         rtcData[0x05] = bcdMonthIncr(rtcData[0x05]);
[e = *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMonthIncr (1 *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"496
[; ;main.c: 496:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"497
[; ;main.c: 497:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"498
[; ;main.c: 498:                     } else if(mode == MODE_SET_DATE){
}
[e $U 492  ]
[e :U 491 ]
[e $ ! == -> _mode `i -> . `E3559 5 `i 493  ]
{
"499
[; ;main.c: 499:                         rtcData[0x04] = bcdDateIncr(rtcData[0x04]);
[e = *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdDateIncr (1 *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"500
[; ;main.c: 500:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"501
[; ;main.c: 501:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"502
[; ;main.c: 502:                     } else if(mode == MODE_SET_AL1_H){
}
[e $U 494  ]
[e :U 493 ]
[e $ ! == -> _mode `i -> . `E3559 6 `i 495  ]
{
"503
[; ;main.c: 503:                         rtcData[0x09] = bcdHourIncr(rtcData[0x09]);
[e = *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdHourIncr (1 *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"504
[; ;main.c: 504:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"505
[; ;main.c: 505:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"506
[; ;main.c: 506:                     } else if(mode == MODE_SET_AL1_M){
}
[e $U 496  ]
[e :U 495 ]
[e $ ! == -> _mode `i -> . `E3559 7 `i 497  ]
{
"507
[; ;main.c: 507:                         rtcData[0x08] = bcdMinuteIncr(rtcData[0x08]);
[e = *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMinuteIncr (1 *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"508
[; ;main.c: 508:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"509
[; ;main.c: 509:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"510
[; ;main.c: 510:                     } else if(mode == MODE_SET_AL2_H){
}
[e $U 498  ]
[e :U 497 ]
[e $ ! == -> _mode `i -> . `E3559 8 `i 499  ]
{
"511
[; ;main.c: 511:                         rtcData[0x0C] = bcdHourIncr(rtcData[0x0C]);
[e = *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdHourIncr (1 *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"512
[; ;main.c: 512:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"513
[; ;main.c: 513:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"514
[; ;main.c: 514:                     } else if(mode == MODE_SET_AL2_M){
}
[e $U 500  ]
[e :U 499 ]
[e $ ! == -> _mode `i -> . `E3559 9 `i 501  ]
{
"515
[; ;main.c: 515:                         rtcData[0x0B] = bcdMinuteIncr(rtcData[0x0B]);
[e = *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMinuteIncr (1 *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"516
[; ;main.c: 516:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"517
[; ;main.c: 517:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"518
[; ;main.c: 518:                     } else if(mode == MODE_SET_DISPLAY_MODE){
}
[e $U 502  ]
[e :U 501 ]
[e $ ! == -> _mode `i -> . `E3559 10 `i 503  ]
{
"519
[; ;main.c: 519:                         display_mode++;
[e ++ _display_mode -> -> 1 `i `uc ]
"521
[; ;main.c: 521:                         if(display_mode == DISPLAY_MODE_END){
[e $ ! == -> _display_mode `i -> . `E3571 5 `i 504  ]
{
"522
[; ;main.c: 522:                             display_mode = 0;
[e = _display_mode -> -> 0 `i `uc ]
"523
[; ;main.c: 523:                         }
}
[e :U 504 ]
"525
[; ;main.c: 525:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"526
[; ;main.c: 526:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"527
[; ;main.c: 527:                     }
}
[e :U 503 ]
[e :U 502 ]
[e :U 500 ]
[e :U 498 ]
[e :U 496 ]
[e :U 494 ]
[e :U 492 ]
[e :U 490 ]
[e :U 488 ]
"529
[; ;main.c: 529:                 }
}
[e :U 486 ]
"530
[; ;main.c: 530:                 button_press_count[1] = 0;
[e = *U + &U _button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 0 `i `uc ]
"531
[; ;main.c: 531:                 flag_button_press_count[1] = 0;
[e = *U + &U _flag_button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 0 `i `uc ]
"532
[; ;main.c: 532:             }
}
[e :U 485 ]
"534
[; ;main.c: 534:             if(flag_button_press_count[2] == 1){
[e $ ! == -> *U + &U _flag_button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 1 `i 505  ]
{
"535
[; ;main.c: 535:                 if(button_press_count[2] > 5 && button_press_count[2] < 100){
[e $ ! && > -> *U + &U _button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 5 `i < -> *U + &U _button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 100 `i 506  ]
{
"537
[; ;main.c: 537:                     if(mode == MODE_SET_HOUR){
[e $ ! == -> _mode `i -> . `E3559 2 `i 507  ]
{
"538
[; ;main.c: 538:                         rtcData[0x02] = bcdHourDecr(rtcData[0x02]);
[e = *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdHourDecr (1 *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"539
[; ;main.c: 539:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"540
[; ;main.c: 540:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"541
[; ;main.c: 541:                     } else if(mode == MODE_SET_MINUTE){
}
[e $U 508  ]
[e :U 507 ]
[e $ ! == -> _mode `i -> . `E3559 3 `i 509  ]
{
"542
[; ;main.c: 542:                         rtcData[0x01] = bcdMinuteDecr(rtcData[0x01]);
[e = *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMinuteDecr (1 *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"543
[; ;main.c: 543:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"544
[; ;main.c: 544:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"545
[; ;main.c: 545:                     } else if(mode == MODE_SET_MONTH){
}
[e $U 510  ]
[e :U 509 ]
[e $ ! == -> _mode `i -> . `E3559 4 `i 511  ]
{
"546
[; ;main.c: 546:                         rtcData[0x05] = bcdMonthDecr(rtcData[0x05]);
[e = *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMonthDecr (1 *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"547
[; ;main.c: 547:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"548
[; ;main.c: 548:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"549
[; ;main.c: 549:                     } else if(mode == MODE_SET_DATE){
}
[e $U 512  ]
[e :U 511 ]
[e $ ! == -> _mode `i -> . `E3559 5 `i 513  ]
{
"550
[; ;main.c: 550:                         rtcData[0x04] = bcdDateDecr(rtcData[0x04]);
[e = *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdDateDecr (1 *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"551
[; ;main.c: 551:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"552
[; ;main.c: 552:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"553
[; ;main.c: 553:                     } else if(mode == MODE_SET_AL1_H){
}
[e $U 514  ]
[e :U 513 ]
[e $ ! == -> _mode `i -> . `E3559 6 `i 515  ]
{
"554
[; ;main.c: 554:                         rtcData[0x09] = bcdHourDecr(rtcData[0x09]);
[e = *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdHourDecr (1 *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"555
[; ;main.c: 555:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"556
[; ;main.c: 556:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"557
[; ;main.c: 557:                     } else if(mode == MODE_SET_AL1_M){
}
[e $U 516  ]
[e :U 515 ]
[e $ ! == -> _mode `i -> . `E3559 7 `i 517  ]
{
"558
[; ;main.c: 558:                         rtcData[0x08] = bcdMinuteDecr(rtcData[0x08]);
[e = *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMinuteDecr (1 *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"559
[; ;main.c: 559:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"560
[; ;main.c: 560:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"561
[; ;main.c: 561:                     } else if(mode == MODE_SET_AL2_H){
}
[e $U 518  ]
[e :U 517 ]
[e $ ! == -> _mode `i -> . `E3559 8 `i 519  ]
{
"562
[; ;main.c: 562:                         rtcData[0x0C] = bcdHourDecr(rtcData[0x0C]);
[e = *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdHourDecr (1 *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"563
[; ;main.c: 563:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"564
[; ;main.c: 564:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"565
[; ;main.c: 565:                     } else if(mode == MODE_SET_AL2_M){
}
[e $U 520  ]
[e :U 519 ]
[e $ ! == -> _mode `i -> . `E3559 9 `i 521  ]
{
"566
[; ;main.c: 566:                         rtcData[0x0B] = bcdMinuteDecr(rtcData[0x0B]);
[e = *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ( _bcdMinuteDecr (1 *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"567
[; ;main.c: 567:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"568
[; ;main.c: 568:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"569
[; ;main.c: 569:                     } else if(mode == MODE_SET_DISPLAY_MODE){
}
[e $U 522  ]
[e :U 521 ]
[e $ ! == -> _mode `i -> . `E3559 10 `i 523  ]
{
"570
[; ;main.c: 570:                         if(display_mode) display_mode--;
[e $ ! != -> _display_mode `i -> 0 `i 524  ]
[e -- _display_mode -> -> 1 `i `uc ]
[e :U 524 ]
"571
[; ;main.c: 571:                         mode_timeout_count = 18;
[e = _mode_timeout_count -> -> 18 `i `uc ]
"572
[; ;main.c: 572:                         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"573
[; ;main.c: 573:                     }
}
[e :U 523 ]
[e :U 522 ]
[e :U 520 ]
[e :U 518 ]
[e :U 516 ]
[e :U 514 ]
[e :U 512 ]
[e :U 510 ]
[e :U 508 ]
"574
[; ;main.c: 574:                 }
}
[e :U 506 ]
"575
[; ;main.c: 575:                 button_press_count[2] = 0;
[e = *U + &U _button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 0 `i `uc ]
"576
[; ;main.c: 576:                 flag_button_press_count[2] = 0;
[e = *U + &U _flag_button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 0 `i `uc ]
"577
[; ;main.c: 577:             }
}
[e :U 505 ]
"579
[; ;main.c: 579:             if(flag_button_press_count[3] == 1){
[e $ ! == -> *U + &U _flag_button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 1 `i 525  ]
{
"580
[; ;main.c: 580:                 if(button_press_count[3] > 5 && button_press_count[3] < 100){
[e $ ! && > -> *U + &U _button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 5 `i < -> *U + &U _button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 100 `i 526  ]
{
"582
[; ;main.c: 582:                     if((mode == MODE_SET_HOUR) || (mode == MODE_SET_MINUTE)){
[e $ ! || == -> _mode `i -> . `E3559 2 `i == -> _mode `i -> . `E3559 3 `i 527  ]
{
"583
[; ;main.c: 583:                         updateRTC(rtcData[0x02],rtcData[0x01]);
[e ( _updateRTC (2 , *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"584
[; ;main.c: 584:                     } else if(mode == MODE_SET_MONTH){
}
[e $U 528  ]
[e :U 527 ]
[e $ ! == -> _mode `i -> . `E3559 4 `i 529  ]
{
"585
[; ;main.c: 585:                         updateMonth(rtcData[0x05]);
[e ( _updateMonth (1 *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"586
[; ;main.c: 586:                     } else if (mode == MODE_SET_DATE){
}
[e $U 530  ]
[e :U 529 ]
[e $ ! == -> _mode `i -> . `E3559 5 `i 531  ]
{
"587
[; ;main.c: 587:                         updateDate(rtcData[0x04]);
[e ( _updateDate (1 *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"588
[; ;main.c: 588:                     } else if ((mode == MODE_SET_AL1_H) || (mode == MODE_SET_AL1_M)){
}
[e $U 532  ]
[e :U 531 ]
[e $ ! || == -> _mode `i -> . `E3559 6 `i == -> _mode `i -> . `E3559 7 `i 533  ]
{
"589
[; ;main.c: 589:                         updateAlarm1(rtcData[0x09], rtcData[0x08]);
[e ( _updateAlarm1 (2 , *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"590
[; ;main.c: 590:                     } else if ((mode == MODE_SET_AL2_H) || (mode == MODE_SET_AL2_M)){
}
[e $U 534  ]
[e :U 533 ]
[e $ ! || == -> _mode `i -> . `E3559 8 `i == -> _mode `i -> . `E3559 9 `i 535  ]
{
"591
[; ;main.c: 591:                         updateAlarm2(rtcData[0x0C], rtcData[0x0B]);
[e ( _updateAlarm2 (2 , *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux ]
"592
[; ;main.c: 592:                     } else if(mode == MODE_SET_DISPLAY_MODE){
}
[e $U 536  ]
[e :U 535 ]
[e $ ! == -> _mode `i -> . `E3559 10 `i 537  ]
{
"594
[; ;main.c: 594:                         DATAEE_WriteByte(0x01, display_mode);
[e ( _DATAEE_WriteByte (2 , -> -> 1 `i `uc _display_mode ]
"595
[; ;main.c: 595:                     }
}
[e :U 537 ]
[e :U 536 ]
[e :U 534 ]
[e :U 532 ]
[e :U 530 ]
[e :U 528 ]
"597
[; ;main.c: 597:                     mode = MODE_NORMAL;
[e = _mode -> . `E3559 0 `uc ]
"598
[; ;main.c: 598:                     flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"599
[; ;main.c: 599:                 }
}
[e :U 526 ]
"600
[; ;main.c: 600:                 button_press_count[3] = 0;
[e = *U + &U _button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 0 `i `uc ]
"601
[; ;main.c: 601:                 flag_button_press_count[3] = 0;
[e = *U + &U _flag_button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux -> -> 0 `i `uc ]
"602
[; ;main.c: 602:             }
}
[e :U 525 ]
"603
[; ;main.c: 603:         }
}
[e :U 464 ]
[e :U 462 ]
[e :U 460 ]
[e :U 458 ]
"605
[; ;main.c: 605:         if(mode == MODE_NORMAL){
[e $ ! == -> _mode `i -> . `E3559 0 `i 538  ]
{
"606
[; ;main.c: 606:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 539  ]
{
"607
[; ;main.c: 607:                 if(PORTBbits.RB4) {
[e $ ! != -> . . _PORTBbits 0 4 `i -> 0 `i 540  ]
{
"609
[; ;main.c: 609:                     i2c_readDataBlock(0x68,0x00,rtcData,0x10);
[e ( _i2c_readDataBlock (4 , , , -> -> 104 `i `uc -> -> 0 `i `uc -> &U _rtcData `*v -> -> 16 `i `ui ]
"611
[; ;main.c: 611:                     if((rtcData[0x0F] & 0x01) != 0) {
[e $ ! != & -> *U + &U _rtcData * -> -> -> 15 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 1 `i -> 0 `i 541  ]
{
"612
[; ;main.c: 612:                         flag_alarm1 = 1;
[e = _flag_alarm1 -> -> 1 `i `uc ]
"613
[; ;main.c: 613:                     }
}
[e :U 541 ]
"614
[; ;main.c: 614:                     if((rtcData[0x0F] & 0x02) != 0) {
[e $ ! != & -> *U + &U _rtcData * -> -> -> 15 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 2 `i -> 0 `i 542  ]
{
"615
[; ;main.c: 615:                         flag_alarm2 = 1;
[e = _flag_alarm2 -> -> 1 `i `uc ]
"616
[; ;main.c: 616:                     }
}
[e :U 542 ]
"620
[; ;main.c: 620:                 }
}
[e :U 540 ]
"622
[; ;main.c: 622:                 displayBuff[0] = displayNum[((rtcData[0x02] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"623
[; ;main.c: 623:                 displayBuff[1] = displayNum[(rtcData[0x02]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"624
[; ;main.c: 624:                 displayBuff[2] = displayNum[((rtcData[0x01] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"625
[; ;main.c: 625:                 displayBuff[3] = displayNum[(rtcData[0x01]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"627
[; ;main.c: 627:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"633
[; ;main.c: 633:             }
}
[e :U 539 ]
"634
[; ;main.c: 634:         } else if(mode == MODE_TEMPERATURE){
}
[e $U 543  ]
[e :U 538 ]
[e $ ! == -> _mode `i -> . `E3559 1 `i 544  ]
{
"635
[; ;main.c: 635:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 545  ]
{
"637
[; ;main.c: 637:                 do { LATAbits.LATA7 = 0; } while(0);
[e :U 548 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 547 ]
"639
[; ;main.c: 639:                 bcd_temp = intToBCD(FIR_filter(ADC_GetConversion(channel_AN13)));
[e = _bcd_temp ( _intToBCD (1 ( _FIR_filter (1 ( _ADC_GetConversion (1 . `E3396 0 ]
"641
[; ;main.c: 641:                 displayBuff[0] = displayNum[((bcd_temp >> 8) & 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> & >> -> _bcd_temp `ui -> 8 `i -> -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"642
[; ;main.c: 642:                 displayBuff[1] = displayNum[((bcd_temp >> 4) & 0x0F)] | (1 << 0);
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | -> *U + &U _displayNum * -> & >> -> _bcd_temp `ui -> 4 `i -> -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux `i << -> 1 `i -> 0 `i `uc ]
"643
[; ;main.c: 643:                 displayBuff[2] = displayNum[(bcd_temp & 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> & -> _bcd_temp `ui -> -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"644
[; ;main.c: 644:                 displayBuff[3] = ((1 << 7) | (1 << 4) | (1 << 3) | (1 << 2));
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | << -> 1 `i -> 7 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i `uc ]
"646
[; ;main.c: 646:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"647
[; ;main.c: 647:             }
}
[e :U 545 ]
"648
[; ;main.c: 648:         } else if(mode == MODE_SET_HOUR){
}
[e $U 549  ]
[e :U 544 ]
[e $ ! == -> _mode `i -> . `E3559 2 `i 550  ]
{
"649
[; ;main.c: 649:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 551  ]
{
"650
[; ;main.c: 650:                 do { LATAbits.LATA7 = 1; } while(0);
[e :U 554 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 553 ]
"651
[; ;main.c: 651:                 displayBuff[0] = displayNum[((rtcData[0x02] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"652
[; ;main.c: 652:                 displayBuff[1] = displayNum[(rtcData[0x02]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"653
[; ;main.c: 653:                 displayBuff[2] = displayNum[((rtcData[0x01] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"654
[; ;main.c: 654:                 displayBuff[3] = displayNum[(rtcData[0x01]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"655
[; ;main.c: 655:                 if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 555  ]
{
"656
[; ;main.c: 656:                     displayBuff[1] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"657
[; ;main.c: 657:                 }
}
[e :U 555 ]
"658
[; ;main.c: 658:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"659
[; ;main.c: 659:             }
}
[e :U 551 ]
"660
[; ;main.c: 660:         } else if(mode == MODE_SET_MINUTE){
}
[e $U 556  ]
[e :U 550 ]
[e $ ! == -> _mode `i -> . `E3559 3 `i 557  ]
{
"661
[; ;main.c: 661:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 558  ]
{
"662
[; ;main.c: 662:                 do { LATAbits.LATA7 = 1; } while(0);
[e :U 561 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 560 ]
"663
[; ;main.c: 663:                 displayBuff[0] = displayNum[((rtcData[0x02] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"664
[; ;main.c: 664:                 displayBuff[1] = displayNum[(rtcData[0x02]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 2 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"665
[; ;main.c: 665:                 displayBuff[2] = displayNum[((rtcData[0x01] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"666
[; ;main.c: 666:                 displayBuff[3] = displayNum[(rtcData[0x01]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 1 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"667
[; ;main.c: 667:                 if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 562  ]
{
"668
[; ;main.c: 668:                     displayBuff[3] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"669
[; ;main.c: 669:                 }
}
[e :U 562 ]
"670
[; ;main.c: 670:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"671
[; ;main.c: 671:             }
}
[e :U 558 ]
"672
[; ;main.c: 672:         } else if(mode == MODE_SET_MONTH){
}
[e $U 563  ]
[e :U 557 ]
[e $ ! == -> _mode `i -> . `E3559 4 `i 564  ]
{
"673
[; ;main.c: 673:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 565  ]
{
"674
[; ;main.c: 674:                 if(mode_flash_count){
[e $ ! != -> _mode_flash_count `i -> 0 `i 566  ]
{
"676
[; ;main.c: 676:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 569 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 568 ]
"677
[; ;main.c: 677:                     displayBuff[0] = ((1 << 6) | (1 << 5) | (1 << 4) | (1 << 3) | (1 << 1));
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 1 `i `uc ]
"678
[; ;main.c: 678:                     displayBuff[1] = ((1 << 6) | (1 << 5) | (1 << 4) | (1 << 3) | (1 << 1));
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 1 `i `uc ]
"679
[; ;main.c: 679:                     displayBuff[2] = ((1 << 7) | (1 << 6) | (1 << 3) | (1 << 2));
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i `uc ]
"680
[; ;main.c: 680:                     displayBuff[3] = ((1 << 7) | (1 << 6) | (1 << 5) | (1 << 2));
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 2 `i `uc ]
"681
[; ;main.c: 681:                 } else {
}
[e $U 570  ]
[e :U 566 ]
{
"682
[; ;main.c: 682:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 573 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 572 ]
"683
[; ;main.c: 683:                     displayBuff[0] = displayNum[((rtcData[0x04] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"684
[; ;main.c: 684:                     displayBuff[1] = displayNum[(rtcData[0x04]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"685
[; ;main.c: 685:                     displayBuff[2] = displayNum[((rtcData[0x05] >> 4) & 0x01)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 1 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"686
[; ;main.c: 686:                     displayBuff[3] = displayNum[(rtcData[0x05]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"687
[; ;main.c: 687:                     if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 574  ]
{
"688
[; ;main.c: 688:                         displayBuff[3] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"689
[; ;main.c: 689:                     }
}
[e :U 574 ]
"690
[; ;main.c: 690:                 }
}
[e :U 570 ]
"691
[; ;main.c: 691:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"692
[; ;main.c: 692:             }
}
[e :U 565 ]
"693
[; ;main.c: 693:         } else if(mode == MODE_SET_DATE){
}
[e $U 575  ]
[e :U 564 ]
[e $ ! == -> _mode `i -> . `E3559 5 `i 576  ]
{
"694
[; ;main.c: 694:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 577  ]
{
"695
[; ;main.c: 695:                 do { LATAbits.LATA7 = 0; } while(0);
[e :U 580 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 579 ]
"696
[; ;main.c: 696:                 displayBuff[0] = displayNum[((rtcData[0x04] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"697
[; ;main.c: 697:                 displayBuff[1] = displayNum[(rtcData[0x04]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 4 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"698
[; ;main.c: 698:                 displayBuff[2] = displayNum[((rtcData[0x05] >> 4) & 0x01)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 1 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"699
[; ;main.c: 699:                 displayBuff[3] = displayNum[(rtcData[0x05]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 5 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"700
[; ;main.c: 700:                 if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 581  ]
{
"701
[; ;main.c: 701:                     displayBuff[1] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"702
[; ;main.c: 702:                 }
}
[e :U 581 ]
"703
[; ;main.c: 703:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"704
[; ;main.c: 704:             }
}
[e :U 577 ]
"705
[; ;main.c: 705:         } else if(mode == MODE_SET_AL1_H){
}
[e $U 582  ]
[e :U 576 ]
[e $ ! == -> _mode `i -> . `E3559 6 `i 583  ]
{
"706
[; ;main.c: 706:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 584  ]
{
"707
[; ;main.c: 707:                 if(mode_flash_count){
[e $ ! != -> _mode_flash_count `i -> 0 `i 585  ]
{
"709
[; ;main.c: 709:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 588 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 587 ]
"710
[; ;main.c: 710:                     displayBuff[0] = ((1 << 7) | (1 << 6) | (1 << 5) | (1 << 3) | (1 << 2) | (1 << 1));
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc ]
"711
[; ;main.c: 711:                     displayBuff[1] = ((1 << 4) | (1 << 3) | (1 << 2));
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i `uc ]
"712
[; ;main.c: 712:                     displayBuff[2] = 0x00;
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> -> 0 `i `uc ]
"713
[; ;main.c: 713:                     displayBuff[3] = ((1 << 6) | (1 << 5));
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i `uc ]
"714
[; ;main.c: 714:                 } else {
}
[e $U 589  ]
[e :U 585 ]
{
"715
[; ;main.c: 715:                     do { LATAbits.LATA7 = 1; } while(0);
[e :U 592 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 591 ]
"716
[; ;main.c: 716:                     displayBuff[0] = displayNum[((rtcData[0x09] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"717
[; ;main.c: 717:                     displayBuff[1] = displayNum[(rtcData[0x09]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"718
[; ;main.c: 718:                     displayBuff[2] = displayNum[((rtcData[0x08] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"719
[; ;main.c: 719:                     displayBuff[3] = displayNum[(rtcData[0x08]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"720
[; ;main.c: 720:                     if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 593  ]
{
"721
[; ;main.c: 721:                         displayBuff[1] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"722
[; ;main.c: 722:                     }
}
[e :U 593 ]
"723
[; ;main.c: 723:                 }
}
[e :U 589 ]
"724
[; ;main.c: 724:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"725
[; ;main.c: 725:             }
}
[e :U 584 ]
"726
[; ;main.c: 726:         } else if(mode == MODE_SET_AL1_M){
}
[e $U 594  ]
[e :U 583 ]
[e $ ! == -> _mode `i -> . `E3559 7 `i 595  ]
{
"727
[; ;main.c: 727:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 596  ]
{
"728
[; ;main.c: 728:                 do { LATAbits.LATA7 = 1; } while(0);
[e :U 599 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 598 ]
"729
[; ;main.c: 729:                 displayBuff[0] = displayNum[((rtcData[0x09] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"730
[; ;main.c: 730:                 displayBuff[1] = displayNum[(rtcData[0x09]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 9 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"731
[; ;main.c: 731:                 displayBuff[2] = displayNum[((rtcData[0x08] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"732
[; ;main.c: 732:                 displayBuff[3] = displayNum[(rtcData[0x08]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 8 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"733
[; ;main.c: 733:                 if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 600  ]
{
"734
[; ;main.c: 734:                     displayBuff[3] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"735
[; ;main.c: 735:                 }
}
[e :U 600 ]
"736
[; ;main.c: 736:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"737
[; ;main.c: 737:             }
}
[e :U 596 ]
"738
[; ;main.c: 738:         } else if(mode == MODE_SET_AL2_H){
}
[e $U 601  ]
[e :U 595 ]
[e $ ! == -> _mode `i -> . `E3559 8 `i 602  ]
{
"739
[; ;main.c: 739:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 603  ]
{
"740
[; ;main.c: 740:                 if(mode_flash_count){
[e $ ! != -> _mode_flash_count `i -> 0 `i 604  ]
{
"742
[; ;main.c: 742:                     do { LATAbits.LATA7 = 0; } while(0);
[e :U 607 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 606 ]
"743
[; ;main.c: 743:                     displayBuff[0] = ((1 << 7) | (1 << 6) | (1 << 5) | (1 << 3) | (1 << 2) | (1 << 1));
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc ]
"744
[; ;main.c: 744:                     displayBuff[1] = ((1 << 4) | (1 << 3) | (1 << 2));
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 2 `i `uc ]
"745
[; ;main.c: 745:                     displayBuff[2] = 0x00;
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> -> 0 `i `uc ]
"746
[; ;main.c: 746:                     displayBuff[3] = ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 3) | (1 << 1));
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 1 `i `uc ]
"747
[; ;main.c: 747:                 } else {
}
[e $U 608  ]
[e :U 604 ]
{
"748
[; ;main.c: 748:                     do { LATAbits.LATA7 = 1; } while(0);
[e :U 611 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 610 ]
"749
[; ;main.c: 749:                     displayBuff[0] = displayNum[((rtcData[0x0C] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"750
[; ;main.c: 750:                     displayBuff[1] = displayNum[(rtcData[0x0C]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"751
[; ;main.c: 751:                     displayBuff[2] = displayNum[((rtcData[0x0B] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"752
[; ;main.c: 752:                     displayBuff[3] = displayNum[(rtcData[0x0B]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"753
[; ;main.c: 753:                     if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 612  ]
{
"754
[; ;main.c: 754:                         displayBuff[1] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"755
[; ;main.c: 755:                     }
}
[e :U 612 ]
"756
[; ;main.c: 756:                 }
}
[e :U 608 ]
"757
[; ;main.c: 757:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"758
[; ;main.c: 758:             }
}
[e :U 603 ]
"759
[; ;main.c: 759:         } else if(mode == MODE_SET_AL2_M){
}
[e $U 613  ]
[e :U 602 ]
[e $ ! == -> _mode `i -> . `E3559 9 `i 614  ]
{
"760
[; ;main.c: 760:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 615  ]
{
"761
[; ;main.c: 761:                 do { LATAbits.LATA7 = 1; } while(0);
[e :U 618 ]
{
[e = . . _LATAbits 0 7 -> -> 1 `i `uc ]
}
[e :U 617 ]
"762
[; ;main.c: 762:                 displayBuff[0] = displayNum[((rtcData[0x0C] >> 4) & 0x03)];
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 3 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"763
[; ;main.c: 763:                 displayBuff[1] = displayNum[(rtcData[0x0C]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 12 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"764
[; ;main.c: 764:                 displayBuff[2] = displayNum[((rtcData[0x0B] >> 4) & 0x07)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & >> -> *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 4 `i -> 7 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"765
[; ;main.c: 765:                 displayBuff[3] = displayNum[(rtcData[0x0B]& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> -> & -> *U + &U _rtcData * -> -> -> 11 `i `ui `ux -> -> # *U &U _rtcData `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"766
[; ;main.c: 766:                 if(flag_dot_blink){
[e $ ! != -> _flag_dot_blink `i -> 0 `i 619  ]
{
"767
[; ;main.c: 767:                     displayBuff[3] |= (1 << 0);
[e =| *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> << -> 1 `i -> 0 `i `uc ]
"768
[; ;main.c: 768:                 }
}
[e :U 619 ]
"769
[; ;main.c: 769:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"770
[; ;main.c: 770:             }
}
[e :U 615 ]
"771
[; ;main.c: 771:         } else if(mode == MODE_SET_DISPLAY_MODE){
}
[e $U 620  ]
[e :U 614 ]
[e $ ! == -> _mode `i -> . `E3559 10 `i 621  ]
{
"772
[; ;main.c: 772:             if(flag_time_display_update == 1){
[e $ ! == -> _flag_time_display_update `i -> 1 `i 622  ]
{
"773
[; ;main.c: 773:                 do { LATAbits.LATA7 = 0; } while(0);
[e :U 625 ]
{
[e = . . _LATAbits 0 7 -> -> 0 `i `uc ]
}
[e :U 624 ]
"774
[; ;main.c: 774:                 bcd_temp = (uint8_t) intToBCD((uint16_t)display_mode);
[e = _bcd_temp -> -> ( _intToBCD (1 -> _display_mode `us `uc `us ]
"775
[; ;main.c: 775:                 displayBuff[0] = ((1 << 6) | (1 << 5) | (1 << 4) | (1 << 3) | (1 << 1));
[e = *U + &U _displayBuff * -> -> -> 0 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> | | | | << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i << -> 1 `i -> 1 `i `uc ]
"776
[; ;main.c: 776:                 displayBuff[1] = 0x00;
[e = *U + &U _displayBuff * -> -> -> 1 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux -> -> 0 `i `uc ]
"777
[; ;main.c: 777:                 displayBuff[2] = displayNum[((bcd_temp >> 4) & 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 2 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> & >> -> _bcd_temp `ui -> 4 `i -> -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"778
[; ;main.c: 778:                 displayBuff[3] = displayNum[(bcd_temp& 0x0F)];
[e = *U + &U _displayBuff * -> -> -> 3 `i `ui `ux -> -> # *U &U _displayBuff `ui `ux *U + &U _displayNum * -> & -> _bcd_temp `ui -> -> 15 `i `ui `ux -> -> # *U &U _displayNum `ui `ux ]
"780
[; ;main.c: 780:                 flag_time_display_update = 0;
[e = _flag_time_display_update -> -> 0 `i `uc ]
"781
[; ;main.c: 781:             }
}
[e :U 622 ]
"782
[; ;main.c: 782:         }
}
[e :U 621 ]
[e :U 620 ]
[e :U 613 ]
[e :U 601 ]
[e :U 594 ]
[e :U 582 ]
[e :U 575 ]
[e :U 563 ]
[e :U 556 ]
[e :U 549 ]
[e :U 543 ]
"785
[; ;main.c: 785:         if(flag_alarm1){
[e $ ! != -> _flag_alarm1 `i -> 0 `i 626  ]
{
"786
[; ;main.c: 786:             flag_alarm1 = 0;
[e = _flag_alarm1 -> -> 0 `i `uc ]
"789
[; ;main.c: 789:         }
}
[e :U 626 ]
"791
[; ;main.c: 791:         if(flag_alarm2){
[e $ ! != -> _flag_alarm2 `i -> 0 `i 627  ]
{
"792
[; ;main.c: 792:             flag_alarm2 = 0;
[e = _flag_alarm2 -> -> 0 `i `uc ]
"794
[; ;main.c: 794:         }
}
[e :U 627 ]
"797
[; ;main.c: 797:     }
}
[e :U 454 ]
[e $U 455  ]
[e :U 456 ]
"798
[; ;main.c: 798: }
[e :UE 440 ]
}
"800
[; ;main.c: 800: void secondISR(void){
[v _secondISR `(v ~T0 @X0 1 ef ]
{
[e :U _secondISR ]
[f ]
"802
[; ;main.c: 802:     if(mode == MODE_NORMAL){
[e $ ! == -> _mode `i -> . `E3559 0 `i 629  ]
{
"803
[; ;main.c: 803:         do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
[e :U 632 ]
{
[e = . . _LATAbits 0 7 -> ~ -> . . _LATAbits 0 7 `i `uc ]
}
[e :U 631 ]
"804
[; ;main.c: 804:         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"805
[; ;main.c: 805:     } else {
}
[e $U 633  ]
[e :U 629 ]
{
"806
[; ;main.c: 806:         if(flag_dot_blink) flag_dot_blink = 0;
[e $ ! != -> _flag_dot_blink `i -> 0 `i 634  ]
[e = _flag_dot_blink -> -> 0 `i `uc ]
[e $U 635  ]
"807
[; ;main.c: 807:         else flag_dot_blink = 1;
[e :U 634 ]
[e = _flag_dot_blink -> -> 1 `i `uc ]
[e :U 635 ]
"808
[; ;main.c: 808:         flag_time_display_update = 1;
[e = _flag_time_display_update -> -> 1 `i `uc ]
"809
[; ;main.c: 809:     }
}
[e :U 633 ]
"811
[; ;main.c: 811:     if(mode_timeout_count) {
[e $ ! != -> _mode_timeout_count `i -> 0 `i 636  ]
{
"812
[; ;main.c: 812:         mode_timeout_count--;
[e -- _mode_timeout_count -> -> 1 `i `Vuc ]
"813
[; ;main.c: 813:         if(mode_timeout_count == 0){
[e $ ! == -> _mode_timeout_count `i -> 0 `i 637  ]
{
"814
[; ;main.c: 814:             mode = MODE_NORMAL;
[e = _mode -> . `E3559 0 `uc ]
"815
[; ;main.c: 815:         }
}
[e :U 637 ]
"816
[; ;main.c: 816:     }
}
[e :U 636 ]
"818
[; ;main.c: 818:     if(mode_flash_count) mode_flash_count--;
[e $ ! != -> _mode_flash_count `i -> 0 `i 638  ]
[e -- _mode_flash_count -> -> 1 `i `Vuc ]
[e :U 638 ]
"819
[; ;main.c: 819: }
[e :UE 628 ]
}
"821
[; ;main.c: 821: void displayRefreshISR(void){
[v _displayRefreshISR `(v ~T0 @X0 1 ef ]
{
[e :U _displayRefreshISR ]
[f ]
"822
[; ;main.c: 822:     static uint8_t i;
[v F3666 `uc ~T0 @X0 1 s i ]
"823
[; ;main.c: 823:     i &= 0x03;
[e =& F3666 -> -> 3 `i `uc ]
"824
[; ;main.c: 824:     LATD = displayBuff[i];
[e = _LATD *U + &U _displayBuff * -> F3666 `ux -> -> # *U &U _displayBuff `ui `ux ]
"825
[; ;main.c: 825:     switch(i){
[e $U 641  ]
{
"826
[; ;main.c: 826:         case 0:
[e :U 642 ]
"827
[; ;main.c: 827:             do { LATAbits.LATA3 = 0; } while(0);
[e :U 645 ]
{
[e = . . _LATAbits 0 3 -> -> 0 `i `uc ]
}
[e :U 644 ]
"828
[; ;main.c: 828:             do { LATEbits.LATE1 = 1; } while(0);
[e :U 648 ]
{
[e = . . _LATEbits 0 1 -> -> 1 `i `uc ]
}
[e :U 647 ]
"829
[; ;main.c: 829:             break;
[e $U 640  ]
"830
[; ;main.c: 830:         case 1:
[e :U 649 ]
"831
[; ;main.c: 831:             do { LATEbits.LATE1 = 0; } while(0);
[e :U 652 ]
{
[e = . . _LATEbits 0 1 -> -> 0 `i `uc ]
}
[e :U 651 ]
"832
[; ;main.c: 832:             do { LATCbits.LATC1 = 1; } while(0);
[e :U 655 ]
{
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
}
[e :U 654 ]
"833
[; ;main.c: 833:             break;
[e $U 640  ]
"834
[; ;main.c: 834:         case 2:
[e :U 656 ]
"835
[; ;main.c: 835:             do { LATCbits.LATC1 = 0; } while(0);
[e :U 659 ]
{
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
}
[e :U 658 ]
"836
[; ;main.c: 836:             do { LATAbits.LATA4 = 1; } while(0);
[e :U 662 ]
{
[e = . . _LATAbits 0 4 -> -> 1 `i `uc ]
}
[e :U 661 ]
"837
[; ;main.c: 837:             break;
[e $U 640  ]
"838
[; ;main.c: 838:         case 3:
[e :U 663 ]
"839
[; ;main.c: 839:             do { LATAbits.LATA4 = 0; } while(0);
[e :U 666 ]
{
[e = . . _LATAbits 0 4 -> -> 0 `i `uc ]
}
[e :U 665 ]
"840
[; ;main.c: 840:             do { LATAbits.LATA3 = 1; } while(0);
[e :U 669 ]
{
[e = . . _LATAbits 0 3 -> -> 1 `i `uc ]
}
[e :U 668 ]
"841
[; ;main.c: 841:             break;
[e $U 640  ]
"842
[; ;main.c: 842:     }
}
[e $U 640  ]
[e :U 641 ]
[e [\ -> F3666 `i , $ -> 0 `i 642
 , $ -> 1 `i 649
 , $ -> 2 `i 656
 , $ -> 3 `i 663
 640 ]
[e :U 640 ]
"844
[; ;main.c: 844:     i++;
[e ++ F3666 -> -> 1 `i `uc ]
"847
[; ;main.c: 847:     if(flag_button_press_count[0] != 0){
[e $ ! != -> *U + &U _flag_button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 0 `i 670  ]
{
"848
[; ;main.c: 848:   if(button_press_count[0] < 200) button_press_count[0]++;
[e $ ! < -> *U + &U _button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 200 `i 671  ]
[e ++ *U + &U _button_press_count * -> -> -> 0 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 1 `i `uc ]
[e :U 671 ]
"849
[; ;main.c: 849:  }
}
[e :U 670 ]
"850
[; ;main.c: 850:     if(flag_button_press_count[1] != 0){
[e $ ! != -> *U + &U _flag_button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 0 `i 672  ]
{
"851
[; ;main.c: 851:   if(button_press_count[1] < 200) button_press_count[1]++;
[e $ ! < -> *U + &U _button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 200 `i 673  ]
[e ++ *U + &U _button_press_count * -> -> -> 1 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 1 `i `uc ]
[e :U 673 ]
"852
[; ;main.c: 852:  }
}
[e :U 672 ]
"853
[; ;main.c: 853:     if(flag_button_press_count[2] != 0){
[e $ ! != -> *U + &U _flag_button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 0 `i 674  ]
{
"854
[; ;main.c: 854:   if(button_press_count[2] < 200) button_press_count[2]++;
[e $ ! < -> *U + &U _button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 200 `i 675  ]
[e ++ *U + &U _button_press_count * -> -> -> 2 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 1 `i `uc ]
[e :U 675 ]
"855
[; ;main.c: 855:  }
}
[e :U 674 ]
"856
[; ;main.c: 856:     if(flag_button_press_count[3] != 0){
[e $ ! != -> *U + &U _flag_button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _flag_button_press_count `ui `ux `i -> 0 `i 676  ]
{
"857
[; ;main.c: 857:   if(button_press_count[3] < 200) button_press_count[3]++;
[e $ ! < -> *U + &U _button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux `i -> 200 `i 677  ]
[e ++ *U + &U _button_press_count * -> -> -> 3 `i `ui `ux -> -> # *U &U _button_press_count `ui `ux -> -> 1 `i `uc ]
[e :U 677 ]
"858
[; ;main.c: 858:  }
}
[e :U 676 ]
"860
[; ;main.c: 860: }
[e :UE 639 ]
}
